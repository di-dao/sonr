/// This file contains service for the Node RPC Server
syntax = "proto3";

// Package Highway is used for defining a Highway node and its properties.
package node.highway.v1;
import "common/core.proto";
import "common/object.proto";
import "common/did.proto";

option go_package = "github.com/sonr-io/core/node/highway";

// AccessNameResponse is a response to a request for a name
message AccessNameResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // Data of the response
    common.Peer peer = 3;
}

// RegisterNameResponse is a request to register a name
message RegisterNameResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.DidDocument did_document = 3;
}

// UpdateNameResponse is a response to a request to update a name
message UpdateNameResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Data of the updated name record
    map<string, string> metadata = 4;
}

// AccessServiceResponse is a response to a request for a service
message AccessServiceResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // Data of the response
    map<string, string> metadata = 3;
}

// RegisterServiceResponse is a request to register a name
message RegisterServiceResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.DidDocument did_document = 3;
}

// UpdateServiceResponse is a response to a request to update a name
message UpdateServiceResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Data of the updated name record
    map<string, string> metadata = 4;
}

// CreateChannelResponse is a response to a request to create a channel
message CreateChannelResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;
}

// ReadChannelResponse is a response to a request to read a channel
message ReadChannelResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Subscribers of the channel
    repeated common.Peer subscribers = 4;

    // Owners of the channel
    repeated common.Peer owners = 5;
}

// UpdateChannelResponse is a response to a request to update a channel
message UpdateChannelResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Subscribers of the channel
    repeated common.Peer subscribers = 4;

    // Owners of the channel
    repeated common.Peer owners = 5;
}

// DeleteChannelResponse is a response to a request to delete a channel
message DeleteChannelResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;
}

// ListenChannelResponse is a response of the published data to the channel
message ListenChannelResponse {
    // Code of the response
    int32 code = 1;

    // DID of the response
    common.Did did = 2;

    // Additional information about the response
    map<string, string> metadata = 3; // optional

    // Data of the response
    bytes message = 4; // optional
}

// CreateBucketResponse is a response to a request to create a bucket
message CreateBucketResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;
}

// ReadBucketResponse is a response to a request to read a bucket
message ReadBucketResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Subscribers of the bucket
    repeated common.ObjectDoc objects = 4;

    // Owners of the bucket
    repeated common.Peer owners = 5;
}

// UpdateBucketResponse is a response to a request to update a bucket
message UpdateBucketResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Subscribers of the bucket
    repeated common.ObjectDoc objects = 4;

    // Owners of the bucket
    repeated common.Peer owners = 5;
}

// DeleteBucketResponse is a response to a request to delete a bucket
message DeleteBucketResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;
}

// ListenBucketResponse is a response of the published data to the bucket
message ListenBucketResponse {
    // Code of the response
    int32 code = 1;

    // DID of the response
    common.Did did = 2;

    // Additional information about the response
    map<string, string> metadata = 3; // optional

    // Stream of objects in the bucket
    repeated common.ObjectDoc objects = 4; // optional
}

// CreateObjectResponse is a response to a request to create an object
message CreateObjectResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;
}

// ReadObjectResponse is a response to a request to read an object
message ReadObjectResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Data of the response
    common.ObjectDoc object = 4;
}

// UpdateObjectResponse is a response to a request to update an object
message UpdateObjectResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Data of the response
    common.ObjectDoc object = 4;

    // Metadata is additional metadata of the response
    map<string, string> metadata = 5; // optional
}

// DeleteObjectResponse is a response to a request to delete an object
message DeleteObjectResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;
}

// UploadBlobResponse is a response to a request to upload a blob
message UploadBlobResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Pinned is true if the blob is pinned to IPFS
    bool pinned = 4;
}

// DownloadBlobResponse is a response to a request to download a blob
message DownloadBlobResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;

    // Path of downloaded blob
    string path = 4;
}

// SyncBlobResponse is a response to a request to sync a blob
message SyncBlobResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;
}

// DeleteBlobResponse is a response to a request to delete a blob
message DeleteBlobResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;
}

// ParseDidResponse is a response to a request to parse a DID
message ParseDidResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.Did did = 3;
}

// ResolveDidResponse is a response to a request to resolve a DID
message ResolveDidResponse {
    // Code of the response
    int32 code = 1;

    // Message of the response
    string message = 2;

    // DID of the response
    common.DidDocument did_document = 3; // optional
}

