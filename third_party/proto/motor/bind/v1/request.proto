syntax = "proto3";

// Package Motor is used for defining a Motor node and its properties.
package sonrhq.motor.api.v1;

import "common/v1/data.proto";

option go_package = "github.com/sonrhq/core/third_party/types/motor/api/v1";

// -----------------------------------------------------------------------------
// Motor Node API
// -----------------------------------------------------------------------------
enum NetworkMode {
  NETWORK_MODE_UNSPECIFIED = 0;
  NETWORK_MODE_LOCAL = 1;
  NETWORK_MODE_BETA = 2;
  NETWORK_MODE_TEST = 3;
}

// (Client) InitializeRequest Message to Establish Sonr Host/API/Room
message InitializeRequest {
  // Device Home Directory
  string home_dir = 1;

  // Device Library Support Directory
  string support_dir = 2;

  // Device Temporary Storage Directory
  string temp_dir = 3;

  // Logging level for the session, can be configured after setting
  // (info|debug|warn|error|fatal)
  string log_level = 4;

  // Client Mode
  NetworkMode network = 5; // Default: ENDPOINT_BETA

  // KeyPrint is used for initializing an existing account
  sonrhq.common.v1.KeyPrint key_print = 6;
}

// ConnectRequest initializes the libp2p host and connects to the Sonr network.
message ConnectRequest {
  // Peer ID of the node to connect to
  string peer_id = 1;

  // Multiaddress of the node to connect to
  string multiaddr = 2;

  // Peer is the peer to connect to
  common.v1.PeerInfo node = 3;
}

// CreateAccountWithKeyRequest allows the DSC to be specified manually when creating a request.
// Necessary for android (for now)
message RegisterRequest {
  string password = 1;
  bytes aes_dsc_key = 2;
  bytes aes_psk_key = 3;
  map<string, string> metadata = 4;
}
