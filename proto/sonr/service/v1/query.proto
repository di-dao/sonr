syntax = "proto3";
package sonr.service.v1;

option go_package = "github.com/sonrhq/sonr/x/service";
import "sonr/service/v1/types.proto";
import "google/api/annotations.proto";
import "amino/amino.proto";
import "gogoproto/gogo.proto";

// Msg defines the module Msg service.
service Query {
  // Params returns the module parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sonrhq/service/v1/params";
  }

  // ServiceRecord returns the service record for a given origin.
  rpc ServiceRecord(QueryServiceRecordRequest) returns (QueryServiceRecordResponse) {
    option (google.api.http).get = "/sonrhq/service/v1/service_record/{origin}";
  }

  // WebauthnCredential returns the webauthn credential for a given origin.
  rpc WebauthnCredential(QueryWebauthnCredentialRequest) returns (QueryWebauthnCredentialResponse) {
    option (google.api.http).get = "/sonrhq/service/v1/webauthn_credential/{origin}/{handle}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// QueryServiceRecordRequest is the request type for the Query/ServiceRecord RPC method.
message QueryServiceRecordRequest {
  // origin defines the origin of the service.
  string origin = 1;
}

// QueryServiceRecordResponse is the response type for the Query/ServiceRecord RPC method.
message QueryServiceRecordResponse {
  // service_record defines the service record for a given origin.
  ServiceRecord service_record = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// QueryWebauthnCredentialRequest is the request type for the Query/WebauthnCredential RPC method.
message QueryWebauthnCredentialRequest {
  // origin defines the origin of the service.
  string origin = 1;

  // handle defines the handle of the webauthn credential.
  string handle = 2;
}

// QueryWebauthnCredentialResponse is the response type for the Query/WebauthnCredential RPC method.
message QueryWebauthnCredentialResponse {
  // webauthn_credential defines the webauthn credential for a given origin.
  repeated WebauthnCredential webauthn_credential = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}
