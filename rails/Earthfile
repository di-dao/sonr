VERSION 0.7
PROJECT sonrhq/rails

# build - builds all dependencies
build:
    BUILD +postgres
    BUILD +ipfs
    BUILD +faucet
    BUILD +dendrite

# postgres - builds the postgres binary
postgres:
    FROM postgres:15-alpine
    ARG password=pwd
    COPY ./etc/postgres/schema.sql /docker-entrypoint-initdb.d/
    SAVE IMAGE ghcr.io/sonrhq/postgres:15

# ipfs - builds the ipfs binary
ipfs:
    FROM ipfs/kubo:latest
    COPY ./etc/ipfs/config.sh config.sh
    EXPOSE 8080 4001 5001 8081
    SAVE IMAGE ghcr.io/sonrhq/ipfs:latest

# indexer - builds the indexer binary
indexer:
    FROM ghcr.io/defiantlabs/cosmos-indexer:main
    RUN apk add --no-cache bash curl && curl -1sLf \
    'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.alpine.sh' | bash \
        && apk add infisical
    WORKDIR /indexer
    COPY ./etc/indexer/start.sh .
    ENTRYPOINT ["sh", "start.sh"]
    SAVE IMAGE ghcr.io/sonrhq/indexer:latest

# faucet - builds the faucet binary
faucet:
    FROM node:18.7-alpine
    ARG cosmosjsVersion=0.28.11
    RUN apk add --no-cache bash curl && curl -1sLf \
    'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.alpine.sh' | bash \
        && apk add infisical
    RUN npm install @cosmjs/faucet@$cosmosjsVersion --global --production
    EXPOSE 4500
    CMD ["infisical", "run", "--command", "sonrd start"]
    ENTRYPOINT ["cosmos-faucet", "start"]
    SAVE IMAGE ghcr.io/sonrhq/faucet:latest

# dendrite - builds and configures monolithic dendrite matrix homeserver
dendrite:
    FROM matrixdotorg/dendrite-monolith:latest
    ARG privateKey
    ARG tlsCert
    ARG tlsKey
    ARG serverName=localhost
    ARG psqlConnURI=postgres://postgres:pwd@postgres:5432/postgres?sslmode=disable
    ARG dirPath=./
    RUN mkdir -p /etc/dendrite
    IF ["$privateKey" == ""]
        RUN /usr/bin/generate-keys -private-key matrix_key.pem
    END
    IF ["$serverName" == "localhost"]
        RUN /usr/bin/generate-keys -tls-cert server.crt -tls-key server.key -server-name $serverName
    END
    RUN /usr/bin/generate-config -server $serverName -db $psqlConnURI -dir $dirPath > /etc/dendrite/dendrite.yaml
    EXPOSE 8008
    EXPOSE 8448
    SAVE IMAGE ghcr.io/sonrhq/dendrite:latest

# cloudflared - builds an image for the cloudflare tunnel
cloudflared:
    FROM cloudflare/cloudflared:latest
	ARG token
	ARG environment=testnet
    ENV TUNNEL_TOKEN $token
	CMD ["tunnel", "run"]
	SAVE IMAGE ghcr.io/sonrhq/proxy-$environment:latest
