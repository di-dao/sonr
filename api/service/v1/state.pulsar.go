// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package servicev1

import (
	_ "cosmossdk.io/api/cosmos/orm/v1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	v1 "github.com/didao-org/sonr/api/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_ProfileEntity_4_list)(nil)

type _ProfileEntity_4_list struct {
	list *[]uint64
}

func (x *_ProfileEntity_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ProfileEntity_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_ProfileEntity_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ProfileEntity_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ProfileEntity_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ProfileEntity at list field Credentials as it is not of Message kind"))
}

func (x *_ProfileEntity_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ProfileEntity_4_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_ProfileEntity_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ProfileEntity_5_list)(nil)

type _ProfileEntity_5_list struct {
	list *[]uint64
}

func (x *_ProfileEntity_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ProfileEntity_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_ProfileEntity_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ProfileEntity_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ProfileEntity_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ProfileEntity at list field Identifiers as it is not of Message kind"))
}

func (x *_ProfileEntity_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ProfileEntity_5_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_ProfileEntity_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ProfileEntity_6_list)(nil)

type _ProfileEntity_6_list struct {
	list *[]uint64
}

func (x *_ProfileEntity_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ProfileEntity_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_ProfileEntity_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ProfileEntity_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ProfileEntity_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ProfileEntity at list field Wallets as it is not of Message kind"))
}

func (x *_ProfileEntity_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ProfileEntity_6_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_ProfileEntity_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ProfileEntity             protoreflect.MessageDescriptor
	fd_ProfileEntity_id          protoreflect.FieldDescriptor
	fd_ProfileEntity_zk_witness  protoreflect.FieldDescriptor
	fd_ProfileEntity_permissions protoreflect.FieldDescriptor
	fd_ProfileEntity_credentials protoreflect.FieldDescriptor
	fd_ProfileEntity_identifiers protoreflect.FieldDescriptor
	fd_ProfileEntity_wallets     protoreflect.FieldDescriptor
)

func init() {
	file_service_v1_state_proto_init()
	md_ProfileEntity = File_service_v1_state_proto.Messages().ByName("ProfileEntity")
	fd_ProfileEntity_id = md_ProfileEntity.Fields().ByName("id")
	fd_ProfileEntity_zk_witness = md_ProfileEntity.Fields().ByName("zk_witness")
	fd_ProfileEntity_permissions = md_ProfileEntity.Fields().ByName("permissions")
	fd_ProfileEntity_credentials = md_ProfileEntity.Fields().ByName("credentials")
	fd_ProfileEntity_identifiers = md_ProfileEntity.Fields().ByName("identifiers")
	fd_ProfileEntity_wallets = md_ProfileEntity.Fields().ByName("wallets")
}

var _ protoreflect.Message = (*fastReflection_ProfileEntity)(nil)

type fastReflection_ProfileEntity ProfileEntity

func (x *ProfileEntity) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ProfileEntity)(x)
}

func (x *ProfileEntity) slowProtoReflect() protoreflect.Message {
	mi := &file_service_v1_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ProfileEntity_messageType fastReflection_ProfileEntity_messageType
var _ protoreflect.MessageType = fastReflection_ProfileEntity_messageType{}

type fastReflection_ProfileEntity_messageType struct{}

func (x fastReflection_ProfileEntity_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ProfileEntity)(nil)
}
func (x fastReflection_ProfileEntity_messageType) New() protoreflect.Message {
	return new(fastReflection_ProfileEntity)
}
func (x fastReflection_ProfileEntity_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ProfileEntity
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ProfileEntity) Descriptor() protoreflect.MessageDescriptor {
	return md_ProfileEntity
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ProfileEntity) Type() protoreflect.MessageType {
	return _fastReflection_ProfileEntity_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ProfileEntity) New() protoreflect.Message {
	return new(fastReflection_ProfileEntity)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ProfileEntity) Interface() protoreflect.ProtoMessage {
	return (*ProfileEntity)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ProfileEntity) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_ProfileEntity_id, value) {
			return
		}
	}
	if x.ZkWitness != "" {
		value := protoreflect.ValueOfString(x.ZkWitness)
		if !f(fd_ProfileEntity_zk_witness, value) {
			return
		}
	}
	if x.Permissions != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Permissions))
		if !f(fd_ProfileEntity_permissions, value) {
			return
		}
	}
	if len(x.Credentials) != 0 {
		value := protoreflect.ValueOfList(&_ProfileEntity_4_list{list: &x.Credentials})
		if !f(fd_ProfileEntity_credentials, value) {
			return
		}
	}
	if len(x.Identifiers) != 0 {
		value := protoreflect.ValueOfList(&_ProfileEntity_5_list{list: &x.Identifiers})
		if !f(fd_ProfileEntity_identifiers, value) {
			return
		}
	}
	if len(x.Wallets) != 0 {
		value := protoreflect.ValueOfList(&_ProfileEntity_6_list{list: &x.Wallets})
		if !f(fd_ProfileEntity_wallets, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ProfileEntity) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "service.v1.ProfileEntity.id":
		return x.Id != ""
	case "service.v1.ProfileEntity.zk_witness":
		return x.ZkWitness != ""
	case "service.v1.ProfileEntity.permissions":
		return x.Permissions != 0
	case "service.v1.ProfileEntity.credentials":
		return len(x.Credentials) != 0
	case "service.v1.ProfileEntity.identifiers":
		return len(x.Identifiers) != 0
	case "service.v1.ProfileEntity.wallets":
		return len(x.Wallets) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ProfileEntity"))
		}
		panic(fmt.Errorf("message service.v1.ProfileEntity does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ProfileEntity) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "service.v1.ProfileEntity.id":
		x.Id = ""
	case "service.v1.ProfileEntity.zk_witness":
		x.ZkWitness = ""
	case "service.v1.ProfileEntity.permissions":
		x.Permissions = 0
	case "service.v1.ProfileEntity.credentials":
		x.Credentials = nil
	case "service.v1.ProfileEntity.identifiers":
		x.Identifiers = nil
	case "service.v1.ProfileEntity.wallets":
		x.Wallets = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ProfileEntity"))
		}
		panic(fmt.Errorf("message service.v1.ProfileEntity does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ProfileEntity) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "service.v1.ProfileEntity.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "service.v1.ProfileEntity.zk_witness":
		value := x.ZkWitness
		return protoreflect.ValueOfString(value)
	case "service.v1.ProfileEntity.permissions":
		value := x.Permissions
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "service.v1.ProfileEntity.credentials":
		if len(x.Credentials) == 0 {
			return protoreflect.ValueOfList(&_ProfileEntity_4_list{})
		}
		listValue := &_ProfileEntity_4_list{list: &x.Credentials}
		return protoreflect.ValueOfList(listValue)
	case "service.v1.ProfileEntity.identifiers":
		if len(x.Identifiers) == 0 {
			return protoreflect.ValueOfList(&_ProfileEntity_5_list{})
		}
		listValue := &_ProfileEntity_5_list{list: &x.Identifiers}
		return protoreflect.ValueOfList(listValue)
	case "service.v1.ProfileEntity.wallets":
		if len(x.Wallets) == 0 {
			return protoreflect.ValueOfList(&_ProfileEntity_6_list{})
		}
		listValue := &_ProfileEntity_6_list{list: &x.Wallets}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ProfileEntity"))
		}
		panic(fmt.Errorf("message service.v1.ProfileEntity does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ProfileEntity) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "service.v1.ProfileEntity.id":
		x.Id = value.Interface().(string)
	case "service.v1.ProfileEntity.zk_witness":
		x.ZkWitness = value.Interface().(string)
	case "service.v1.ProfileEntity.permissions":
		x.Permissions = (v1.PermissionsType)(value.Enum())
	case "service.v1.ProfileEntity.credentials":
		lv := value.List()
		clv := lv.(*_ProfileEntity_4_list)
		x.Credentials = *clv.list
	case "service.v1.ProfileEntity.identifiers":
		lv := value.List()
		clv := lv.(*_ProfileEntity_5_list)
		x.Identifiers = *clv.list
	case "service.v1.ProfileEntity.wallets":
		lv := value.List()
		clv := lv.(*_ProfileEntity_6_list)
		x.Wallets = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ProfileEntity"))
		}
		panic(fmt.Errorf("message service.v1.ProfileEntity does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ProfileEntity) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "service.v1.ProfileEntity.credentials":
		if x.Credentials == nil {
			x.Credentials = []uint64{}
		}
		value := &_ProfileEntity_4_list{list: &x.Credentials}
		return protoreflect.ValueOfList(value)
	case "service.v1.ProfileEntity.identifiers":
		if x.Identifiers == nil {
			x.Identifiers = []uint64{}
		}
		value := &_ProfileEntity_5_list{list: &x.Identifiers}
		return protoreflect.ValueOfList(value)
	case "service.v1.ProfileEntity.wallets":
		if x.Wallets == nil {
			x.Wallets = []uint64{}
		}
		value := &_ProfileEntity_6_list{list: &x.Wallets}
		return protoreflect.ValueOfList(value)
	case "service.v1.ProfileEntity.id":
		panic(fmt.Errorf("field id of message service.v1.ProfileEntity is not mutable"))
	case "service.v1.ProfileEntity.zk_witness":
		panic(fmt.Errorf("field zk_witness of message service.v1.ProfileEntity is not mutable"))
	case "service.v1.ProfileEntity.permissions":
		panic(fmt.Errorf("field permissions of message service.v1.ProfileEntity is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ProfileEntity"))
		}
		panic(fmt.Errorf("message service.v1.ProfileEntity does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ProfileEntity) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "service.v1.ProfileEntity.id":
		return protoreflect.ValueOfString("")
	case "service.v1.ProfileEntity.zk_witness":
		return protoreflect.ValueOfString("")
	case "service.v1.ProfileEntity.permissions":
		return protoreflect.ValueOfEnum(0)
	case "service.v1.ProfileEntity.credentials":
		list := []uint64{}
		return protoreflect.ValueOfList(&_ProfileEntity_4_list{list: &list})
	case "service.v1.ProfileEntity.identifiers":
		list := []uint64{}
		return protoreflect.ValueOfList(&_ProfileEntity_5_list{list: &list})
	case "service.v1.ProfileEntity.wallets":
		list := []uint64{}
		return protoreflect.ValueOfList(&_ProfileEntity_6_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ProfileEntity"))
		}
		panic(fmt.Errorf("message service.v1.ProfileEntity does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ProfileEntity) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in service.v1.ProfileEntity", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ProfileEntity) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ProfileEntity) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ProfileEntity) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ProfileEntity) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ProfileEntity)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ZkWitness)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Permissions != 0 {
			n += 1 + runtime.Sov(uint64(x.Permissions))
		}
		if len(x.Credentials) > 0 {
			l = 0
			for _, e := range x.Credentials {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if len(x.Identifiers) > 0 {
			l = 0
			for _, e := range x.Identifiers {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if len(x.Wallets) > 0 {
			l = 0
			for _, e := range x.Wallets {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ProfileEntity)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Wallets) > 0 {
			var pksize2 int
			for _, num := range x.Wallets {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.Wallets {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Identifiers) > 0 {
			var pksize4 int
			for _, num := range x.Identifiers {
				pksize4 += runtime.Sov(uint64(num))
			}
			i -= pksize4
			j3 := i
			for _, num := range x.Identifiers {
				for num >= 1<<7 {
					dAtA[j3] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j3++
				}
				dAtA[j3] = uint8(num)
				j3++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize4))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Credentials) > 0 {
			var pksize6 int
			for _, num := range x.Credentials {
				pksize6 += runtime.Sov(uint64(num))
			}
			i -= pksize6
			j5 := i
			for _, num := range x.Credentials {
				for num >= 1<<7 {
					dAtA[j5] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j5++
				}
				dAtA[j5] = uint8(num)
				j5++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize6))
			i--
			dAtA[i] = 0x22
		}
		if x.Permissions != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Permissions))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ZkWitness) > 0 {
			i -= len(x.ZkWitness)
			copy(dAtA[i:], x.ZkWitness)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZkWitness)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ProfileEntity)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ProfileEntity: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ProfileEntity: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZkWitness", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZkWitness = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
				}
				x.Permissions = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Permissions |= v1.PermissionsType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.Credentials = append(x.Credentials, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.Credentials) == 0 {
						x.Credentials = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.Credentials = append(x.Credentials, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
				}
			case 5:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.Identifiers = append(x.Identifiers, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.Identifiers) == 0 {
						x.Identifiers = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.Identifiers = append(x.Identifiers, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Identifiers", wireType)
				}
			case 6:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.Wallets = append(x.Wallets, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.Wallets) == 0 {
						x.Wallets = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.Wallets = append(x.Wallets, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Wallets", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ServiceRecord               protoreflect.MessageDescriptor
	fd_ServiceRecord_sequence      protoreflect.FieldDescriptor
	fd_ServiceRecord_origin        protoreflect.FieldDescriptor
	fd_ServiceRecord_team_address  protoreflect.FieldDescriptor
	fd_ServiceRecord_metadata      protoreflect.FieldDescriptor
	fd_ServiceRecord_permissions   protoreflect.FieldDescriptor
	fd_ServiceRecord_tld_extension protoreflect.FieldDescriptor
)

func init() {
	file_service_v1_state_proto_init()
	md_ServiceRecord = File_service_v1_state_proto.Messages().ByName("ServiceRecord")
	fd_ServiceRecord_sequence = md_ServiceRecord.Fields().ByName("sequence")
	fd_ServiceRecord_origin = md_ServiceRecord.Fields().ByName("origin")
	fd_ServiceRecord_team_address = md_ServiceRecord.Fields().ByName("team_address")
	fd_ServiceRecord_metadata = md_ServiceRecord.Fields().ByName("metadata")
	fd_ServiceRecord_permissions = md_ServiceRecord.Fields().ByName("permissions")
	fd_ServiceRecord_tld_extension = md_ServiceRecord.Fields().ByName("tld_extension")
}

var _ protoreflect.Message = (*fastReflection_ServiceRecord)(nil)

type fastReflection_ServiceRecord ServiceRecord

func (x *ServiceRecord) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ServiceRecord)(x)
}

func (x *ServiceRecord) slowProtoReflect() protoreflect.Message {
	mi := &file_service_v1_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ServiceRecord_messageType fastReflection_ServiceRecord_messageType
var _ protoreflect.MessageType = fastReflection_ServiceRecord_messageType{}

type fastReflection_ServiceRecord_messageType struct{}

func (x fastReflection_ServiceRecord_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ServiceRecord)(nil)
}
func (x fastReflection_ServiceRecord_messageType) New() protoreflect.Message {
	return new(fastReflection_ServiceRecord)
}
func (x fastReflection_ServiceRecord_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ServiceRecord
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ServiceRecord) Descriptor() protoreflect.MessageDescriptor {
	return md_ServiceRecord
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ServiceRecord) Type() protoreflect.MessageType {
	return _fastReflection_ServiceRecord_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ServiceRecord) New() protoreflect.Message {
	return new(fastReflection_ServiceRecord)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ServiceRecord) Interface() protoreflect.ProtoMessage {
	return (*ServiceRecord)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ServiceRecord) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Sequence)
		if !f(fd_ServiceRecord_sequence, value) {
			return
		}
	}
	if x.Origin != "" {
		value := protoreflect.ValueOfString(x.Origin)
		if !f(fd_ServiceRecord_origin, value) {
			return
		}
	}
	if x.TeamAddress != "" {
		value := protoreflect.ValueOfString(x.TeamAddress)
		if !f(fd_ServiceRecord_team_address, value) {
			return
		}
	}
	if x.Metadata != "" {
		value := protoreflect.ValueOfString(x.Metadata)
		if !f(fd_ServiceRecord_metadata, value) {
			return
		}
	}
	if x.Permissions != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Permissions))
		if !f(fd_ServiceRecord_permissions, value) {
			return
		}
	}
	if x.TldExtension != "" {
		value := protoreflect.ValueOfString(x.TldExtension)
		if !f(fd_ServiceRecord_tld_extension, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ServiceRecord) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "service.v1.ServiceRecord.sequence":
		return x.Sequence != uint64(0)
	case "service.v1.ServiceRecord.origin":
		return x.Origin != ""
	case "service.v1.ServiceRecord.team_address":
		return x.TeamAddress != ""
	case "service.v1.ServiceRecord.metadata":
		return x.Metadata != ""
	case "service.v1.ServiceRecord.permissions":
		return x.Permissions != 0
	case "service.v1.ServiceRecord.tld_extension":
		return x.TldExtension != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ServiceRecord"))
		}
		panic(fmt.Errorf("message service.v1.ServiceRecord does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ServiceRecord) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "service.v1.ServiceRecord.sequence":
		x.Sequence = uint64(0)
	case "service.v1.ServiceRecord.origin":
		x.Origin = ""
	case "service.v1.ServiceRecord.team_address":
		x.TeamAddress = ""
	case "service.v1.ServiceRecord.metadata":
		x.Metadata = ""
	case "service.v1.ServiceRecord.permissions":
		x.Permissions = 0
	case "service.v1.ServiceRecord.tld_extension":
		x.TldExtension = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ServiceRecord"))
		}
		panic(fmt.Errorf("message service.v1.ServiceRecord does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ServiceRecord) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "service.v1.ServiceRecord.sequence":
		value := x.Sequence
		return protoreflect.ValueOfUint64(value)
	case "service.v1.ServiceRecord.origin":
		value := x.Origin
		return protoreflect.ValueOfString(value)
	case "service.v1.ServiceRecord.team_address":
		value := x.TeamAddress
		return protoreflect.ValueOfString(value)
	case "service.v1.ServiceRecord.metadata":
		value := x.Metadata
		return protoreflect.ValueOfString(value)
	case "service.v1.ServiceRecord.permissions":
		value := x.Permissions
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "service.v1.ServiceRecord.tld_extension":
		value := x.TldExtension
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ServiceRecord"))
		}
		panic(fmt.Errorf("message service.v1.ServiceRecord does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ServiceRecord) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "service.v1.ServiceRecord.sequence":
		x.Sequence = value.Uint()
	case "service.v1.ServiceRecord.origin":
		x.Origin = value.Interface().(string)
	case "service.v1.ServiceRecord.team_address":
		x.TeamAddress = value.Interface().(string)
	case "service.v1.ServiceRecord.metadata":
		x.Metadata = value.Interface().(string)
	case "service.v1.ServiceRecord.permissions":
		x.Permissions = (v1.PermissionsType)(value.Enum())
	case "service.v1.ServiceRecord.tld_extension":
		x.TldExtension = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ServiceRecord"))
		}
		panic(fmt.Errorf("message service.v1.ServiceRecord does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ServiceRecord) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "service.v1.ServiceRecord.sequence":
		panic(fmt.Errorf("field sequence of message service.v1.ServiceRecord is not mutable"))
	case "service.v1.ServiceRecord.origin":
		panic(fmt.Errorf("field origin of message service.v1.ServiceRecord is not mutable"))
	case "service.v1.ServiceRecord.team_address":
		panic(fmt.Errorf("field team_address of message service.v1.ServiceRecord is not mutable"))
	case "service.v1.ServiceRecord.metadata":
		panic(fmt.Errorf("field metadata of message service.v1.ServiceRecord is not mutable"))
	case "service.v1.ServiceRecord.permissions":
		panic(fmt.Errorf("field permissions of message service.v1.ServiceRecord is not mutable"))
	case "service.v1.ServiceRecord.tld_extension":
		panic(fmt.Errorf("field tld_extension of message service.v1.ServiceRecord is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ServiceRecord"))
		}
		panic(fmt.Errorf("message service.v1.ServiceRecord does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ServiceRecord) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "service.v1.ServiceRecord.sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	case "service.v1.ServiceRecord.origin":
		return protoreflect.ValueOfString("")
	case "service.v1.ServiceRecord.team_address":
		return protoreflect.ValueOfString("")
	case "service.v1.ServiceRecord.metadata":
		return protoreflect.ValueOfString("")
	case "service.v1.ServiceRecord.permissions":
		return protoreflect.ValueOfEnum(0)
	case "service.v1.ServiceRecord.tld_extension":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.ServiceRecord"))
		}
		panic(fmt.Errorf("message service.v1.ServiceRecord does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ServiceRecord) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in service.v1.ServiceRecord", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ServiceRecord) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ServiceRecord) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ServiceRecord) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ServiceRecord) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ServiceRecord)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Sequence != 0 {
			n += 1 + runtime.Sov(uint64(x.Sequence))
		}
		l = len(x.Origin)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TeamAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Metadata)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Permissions != 0 {
			n += 1 + runtime.Sov(uint64(x.Permissions))
		}
		l = len(x.TldExtension)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ServiceRecord)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TldExtension) > 0 {
			i -= len(x.TldExtension)
			copy(dAtA[i:], x.TldExtension)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TldExtension)))
			i--
			dAtA[i] = 0x32
		}
		if x.Permissions != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Permissions))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Metadata) > 0 {
			i -= len(x.Metadata)
			copy(dAtA[i:], x.Metadata)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Metadata)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TeamAddress) > 0 {
			i -= len(x.TeamAddress)
			copy(dAtA[i:], x.TeamAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TeamAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Origin) > 0 {
			i -= len(x.Origin)
			copy(dAtA[i:], x.Origin)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Origin)))
			i--
			dAtA[i] = 0x12
		}
		if x.Sequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Sequence))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ServiceRecord)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ServiceRecord: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ServiceRecord: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sequence", wireType)
				}
				x.Sequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Sequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Origin", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Origin = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TeamAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TeamAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Metadata = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
				}
				x.Permissions = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Permissions |= v1.PermissionsType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TldExtension", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TldExtension = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_WebCredential_4_list)(nil)

type _WebCredential_4_list struct {
	list *[]string
}

func (x *_WebCredential_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_WebCredential_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_WebCredential_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_WebCredential_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_WebCredential_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message WebCredential at list field Transports as it is not of Message kind"))
}

func (x *_WebCredential_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_WebCredential_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_WebCredential_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_WebCredential                protoreflect.MessageDescriptor
	fd_WebCredential_sequence       protoreflect.FieldDescriptor
	fd_WebCredential_id             protoreflect.FieldDescriptor
	fd_WebCredential_handle         protoreflect.FieldDescriptor
	fd_WebCredential_transports     protoreflect.FieldDescriptor
	fd_WebCredential_origin         protoreflect.FieldDescriptor
	fd_WebCredential_controller     protoreflect.FieldDescriptor
	fd_WebCredential_assertion_type protoreflect.FieldDescriptor
)

func init() {
	file_service_v1_state_proto_init()
	md_WebCredential = File_service_v1_state_proto.Messages().ByName("WebCredential")
	fd_WebCredential_sequence = md_WebCredential.Fields().ByName("sequence")
	fd_WebCredential_id = md_WebCredential.Fields().ByName("id")
	fd_WebCredential_handle = md_WebCredential.Fields().ByName("handle")
	fd_WebCredential_transports = md_WebCredential.Fields().ByName("transports")
	fd_WebCredential_origin = md_WebCredential.Fields().ByName("origin")
	fd_WebCredential_controller = md_WebCredential.Fields().ByName("controller")
	fd_WebCredential_assertion_type = md_WebCredential.Fields().ByName("assertion_type")
}

var _ protoreflect.Message = (*fastReflection_WebCredential)(nil)

type fastReflection_WebCredential WebCredential

func (x *WebCredential) ProtoReflect() protoreflect.Message {
	return (*fastReflection_WebCredential)(x)
}

func (x *WebCredential) slowProtoReflect() protoreflect.Message {
	mi := &file_service_v1_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_WebCredential_messageType fastReflection_WebCredential_messageType
var _ protoreflect.MessageType = fastReflection_WebCredential_messageType{}

type fastReflection_WebCredential_messageType struct{}

func (x fastReflection_WebCredential_messageType) Zero() protoreflect.Message {
	return (*fastReflection_WebCredential)(nil)
}
func (x fastReflection_WebCredential_messageType) New() protoreflect.Message {
	return new(fastReflection_WebCredential)
}
func (x fastReflection_WebCredential_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_WebCredential
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_WebCredential) Descriptor() protoreflect.MessageDescriptor {
	return md_WebCredential
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_WebCredential) Type() protoreflect.MessageType {
	return _fastReflection_WebCredential_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_WebCredential) New() protoreflect.Message {
	return new(fastReflection_WebCredential)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_WebCredential) Interface() protoreflect.ProtoMessage {
	return (*WebCredential)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_WebCredential) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Sequence)
		if !f(fd_WebCredential_sequence, value) {
			return
		}
	}
	if len(x.Id) != 0 {
		value := protoreflect.ValueOfBytes(x.Id)
		if !f(fd_WebCredential_id, value) {
			return
		}
	}
	if x.Handle != "" {
		value := protoreflect.ValueOfString(x.Handle)
		if !f(fd_WebCredential_handle, value) {
			return
		}
	}
	if len(x.Transports) != 0 {
		value := protoreflect.ValueOfList(&_WebCredential_4_list{list: &x.Transports})
		if !f(fd_WebCredential_transports, value) {
			return
		}
	}
	if x.Origin != "" {
		value := protoreflect.ValueOfString(x.Origin)
		if !f(fd_WebCredential_origin, value) {
			return
		}
	}
	if x.Controller != "" {
		value := protoreflect.ValueOfString(x.Controller)
		if !f(fd_WebCredential_controller, value) {
			return
		}
	}
	if x.AssertionType != "" {
		value := protoreflect.ValueOfString(x.AssertionType)
		if !f(fd_WebCredential_assertion_type, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_WebCredential) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "service.v1.WebCredential.sequence":
		return x.Sequence != uint64(0)
	case "service.v1.WebCredential.id":
		return len(x.Id) != 0
	case "service.v1.WebCredential.handle":
		return x.Handle != ""
	case "service.v1.WebCredential.transports":
		return len(x.Transports) != 0
	case "service.v1.WebCredential.origin":
		return x.Origin != ""
	case "service.v1.WebCredential.controller":
		return x.Controller != ""
	case "service.v1.WebCredential.assertion_type":
		return x.AssertionType != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.WebCredential"))
		}
		panic(fmt.Errorf("message service.v1.WebCredential does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WebCredential) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "service.v1.WebCredential.sequence":
		x.Sequence = uint64(0)
	case "service.v1.WebCredential.id":
		x.Id = nil
	case "service.v1.WebCredential.handle":
		x.Handle = ""
	case "service.v1.WebCredential.transports":
		x.Transports = nil
	case "service.v1.WebCredential.origin":
		x.Origin = ""
	case "service.v1.WebCredential.controller":
		x.Controller = ""
	case "service.v1.WebCredential.assertion_type":
		x.AssertionType = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.WebCredential"))
		}
		panic(fmt.Errorf("message service.v1.WebCredential does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_WebCredential) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "service.v1.WebCredential.sequence":
		value := x.Sequence
		return protoreflect.ValueOfUint64(value)
	case "service.v1.WebCredential.id":
		value := x.Id
		return protoreflect.ValueOfBytes(value)
	case "service.v1.WebCredential.handle":
		value := x.Handle
		return protoreflect.ValueOfString(value)
	case "service.v1.WebCredential.transports":
		if len(x.Transports) == 0 {
			return protoreflect.ValueOfList(&_WebCredential_4_list{})
		}
		listValue := &_WebCredential_4_list{list: &x.Transports}
		return protoreflect.ValueOfList(listValue)
	case "service.v1.WebCredential.origin":
		value := x.Origin
		return protoreflect.ValueOfString(value)
	case "service.v1.WebCredential.controller":
		value := x.Controller
		return protoreflect.ValueOfString(value)
	case "service.v1.WebCredential.assertion_type":
		value := x.AssertionType
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.WebCredential"))
		}
		panic(fmt.Errorf("message service.v1.WebCredential does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WebCredential) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "service.v1.WebCredential.sequence":
		x.Sequence = value.Uint()
	case "service.v1.WebCredential.id":
		x.Id = value.Bytes()
	case "service.v1.WebCredential.handle":
		x.Handle = value.Interface().(string)
	case "service.v1.WebCredential.transports":
		lv := value.List()
		clv := lv.(*_WebCredential_4_list)
		x.Transports = *clv.list
	case "service.v1.WebCredential.origin":
		x.Origin = value.Interface().(string)
	case "service.v1.WebCredential.controller":
		x.Controller = value.Interface().(string)
	case "service.v1.WebCredential.assertion_type":
		x.AssertionType = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.WebCredential"))
		}
		panic(fmt.Errorf("message service.v1.WebCredential does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WebCredential) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "service.v1.WebCredential.transports":
		if x.Transports == nil {
			x.Transports = []string{}
		}
		value := &_WebCredential_4_list{list: &x.Transports}
		return protoreflect.ValueOfList(value)
	case "service.v1.WebCredential.sequence":
		panic(fmt.Errorf("field sequence of message service.v1.WebCredential is not mutable"))
	case "service.v1.WebCredential.id":
		panic(fmt.Errorf("field id of message service.v1.WebCredential is not mutable"))
	case "service.v1.WebCredential.handle":
		panic(fmt.Errorf("field handle of message service.v1.WebCredential is not mutable"))
	case "service.v1.WebCredential.origin":
		panic(fmt.Errorf("field origin of message service.v1.WebCredential is not mutable"))
	case "service.v1.WebCredential.controller":
		panic(fmt.Errorf("field controller of message service.v1.WebCredential is not mutable"))
	case "service.v1.WebCredential.assertion_type":
		panic(fmt.Errorf("field assertion_type of message service.v1.WebCredential is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.WebCredential"))
		}
		panic(fmt.Errorf("message service.v1.WebCredential does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_WebCredential) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "service.v1.WebCredential.sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	case "service.v1.WebCredential.id":
		return protoreflect.ValueOfBytes(nil)
	case "service.v1.WebCredential.handle":
		return protoreflect.ValueOfString("")
	case "service.v1.WebCredential.transports":
		list := []string{}
		return protoreflect.ValueOfList(&_WebCredential_4_list{list: &list})
	case "service.v1.WebCredential.origin":
		return protoreflect.ValueOfString("")
	case "service.v1.WebCredential.controller":
		return protoreflect.ValueOfString("")
	case "service.v1.WebCredential.assertion_type":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: service.v1.WebCredential"))
		}
		panic(fmt.Errorf("message service.v1.WebCredential does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_WebCredential) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in service.v1.WebCredential", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_WebCredential) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WebCredential) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_WebCredential) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_WebCredential) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*WebCredential)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Sequence != 0 {
			n += 1 + runtime.Sov(uint64(x.Sequence))
		}
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Handle)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Transports) > 0 {
			for _, s := range x.Transports {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Origin)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Controller)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AssertionType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*WebCredential)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AssertionType) > 0 {
			i -= len(x.AssertionType)
			copy(dAtA[i:], x.AssertionType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AssertionType)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Controller) > 0 {
			i -= len(x.Controller)
			copy(dAtA[i:], x.Controller)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Controller)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Origin) > 0 {
			i -= len(x.Origin)
			copy(dAtA[i:], x.Origin)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Origin)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Transports) > 0 {
			for iNdEx := len(x.Transports) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Transports[iNdEx])
				copy(dAtA[i:], x.Transports[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Transports[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Handle) > 0 {
			i -= len(x.Handle)
			copy(dAtA[i:], x.Handle)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Handle)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0x12
		}
		if x.Sequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Sequence))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*WebCredential)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WebCredential: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WebCredential: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sequence", wireType)
				}
				x.Sequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Sequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = append(x.Id[:0], dAtA[iNdEx:postIndex]...)
				if x.Id == nil {
					x.Id = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Handle", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Handle = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Transports", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Transports = append(x.Transports, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Origin", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Origin = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Controller = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AssertionType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AssertionType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: service/v1/state.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProfileEntity is a profile for a given Service provider.
type ProfileEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ZkWitness   string             `protobuf:"bytes,2,opt,name=zk_witness,json=zkWitness,proto3" json:"zk_witness,omitempty"`
	Permissions v1.PermissionsType `protobuf:"varint,3,opt,name=permissions,proto3,enum=common.v1.PermissionsType" json:"permissions,omitempty"`
	Credentials []uint64           `protobuf:"varint,4,rep,packed,name=credentials,proto3" json:"credentials,omitempty"`
	Identifiers []uint64           `protobuf:"varint,5,rep,packed,name=identifiers,proto3" json:"identifiers,omitempty"`
	Wallets     []uint64           `protobuf:"varint,6,rep,packed,name=wallets,proto3" json:"wallets,omitempty"`
}

func (x *ProfileEntity) Reset() {
	*x = ProfileEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_v1_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileEntity) ProtoMessage() {}

// Deprecated: Use ProfileEntity.ProtoReflect.Descriptor instead.
func (*ProfileEntity) Descriptor() ([]byte, []int) {
	return file_service_v1_state_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProfileEntity) GetZkWitness() string {
	if x != nil {
		return x.ZkWitness
	}
	return ""
}

func (x *ProfileEntity) GetPermissions() v1.PermissionsType {
	if x != nil {
		return x.Permissions
	}
	return v1.PermissionsType(0)
}

func (x *ProfileEntity) GetCredentials() []uint64 {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *ProfileEntity) GetIdentifiers() []uint64 {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *ProfileEntity) GetWallets() []uint64 {
	if x != nil {
		return x.Wallets
	}
	return nil
}

// ServiceRecord is the configuration for a given service provider.
type ServiceRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence     uint64             `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Origin       string             `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	TeamAddress  string             `protobuf:"bytes,3,opt,name=team_address,json=teamAddress,proto3" json:"team_address,omitempty"`
	Metadata     string             `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Permissions  v1.PermissionsType `protobuf:"varint,5,opt,name=permissions,proto3,enum=common.v1.PermissionsType" json:"permissions,omitempty"`
	TldExtension string             `protobuf:"bytes,6,opt,name=tld_extension,json=tldExtension,proto3" json:"tld_extension,omitempty"`
}

func (x *ServiceRecord) Reset() {
	*x = ServiceRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_v1_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRecord) ProtoMessage() {}

// Deprecated: Use ServiceRecord.ProtoReflect.Descriptor instead.
func (*ServiceRecord) Descriptor() ([]byte, []int) {
	return file_service_v1_state_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceRecord) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *ServiceRecord) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ServiceRecord) GetTeamAddress() string {
	if x != nil {
		return x.TeamAddress
	}
	return ""
}

func (x *ServiceRecord) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *ServiceRecord) GetPermissions() v1.PermissionsType {
	if x != nil {
		return x.Permissions
	}
	return v1.PermissionsType(0)
}

func (x *ServiceRecord) GetTldExtension() string {
	if x != nil {
		return x.TldExtension
	}
	return ""
}

// UserIdentifier is the root sonr user identifier table which contains all sub-identities.
type WebCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sequence is the unique identifier for the credential
	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Id is the id of the credential
	Id []byte `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// handle is the handle of the credential
	Handle string `protobuf:"bytes,3,opt,name=handle,proto3" json:"handle,omitempty"`
	// transports is the list of transports supported by the credential
	Transports []string `protobuf:"bytes,4,rep,name=transports,proto3" json:"transports,omitempty"`
	// origin is the origin of the credential
	Origin string `protobuf:"bytes,5,opt,name=origin,proto3" json:"origin,omitempty"`
	// Controller is the address of the owner of the credential
	Controller string `protobuf:"bytes,6,opt,name=controller,proto3" json:"controller,omitempty"`
	// Assertion Type is the type of the credential
	AssertionType string `protobuf:"bytes,7,opt,name=assertion_type,json=assertionType,proto3" json:"assertion_type,omitempty"`
}

func (x *WebCredential) Reset() {
	*x = WebCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_v1_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebCredential) ProtoMessage() {}

// Deprecated: Use WebCredential.ProtoReflect.Descriptor instead.
func (*WebCredential) Descriptor() ([]byte, []int) {
	return file_service_v1_state_proto_rawDescGZIP(), []int{2}
}

func (x *WebCredential) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *WebCredential) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *WebCredential) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *WebCredential) GetTransports() []string {
	if x != nil {
		return x.Transports
	}
	return nil
}

func (x *WebCredential) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *WebCredential) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *WebCredential) GetAssertionType() string {
	if x != nil {
		return x.AssertionType
	}
	return ""
}

var File_service_v1_state_proto protoreflect.FileDescriptor

var file_service_v1_state_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6f, 0x72, 0x6d,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x01, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x7a, 0x6b, 0x5f, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x7a, 0x6b, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x3a, 0x0e, 0xf2, 0x9e, 0xd3, 0x8e, 0x03, 0x08, 0x0a,
	0x04, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x22, 0x8b, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6c,
	0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x6c, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x24, 0xf2, 0x9e, 0xd3, 0x8e, 0x03, 0x1e, 0x0a, 0x0c, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x10,
	0x01, 0x18, 0x01, 0x18, 0x02, 0x22, 0xfd, 0x01, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x73, 0x73,
	0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x29, 0xf2, 0x9e, 0xd3, 0x8e,
	0x03, 0x23, 0x0a, 0x0c, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2c, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x10, 0x01, 0x18, 0x04, 0x42, 0x99, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x64, 0x61, 0x6f, 0x2d, 0x6f, 0x72, 0x67, 0x2f, 0x73, 0x6f, 0x6e,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58,
	0xaa, 0x02, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_v1_state_proto_rawDescOnce sync.Once
	file_service_v1_state_proto_rawDescData = file_service_v1_state_proto_rawDesc
)

func file_service_v1_state_proto_rawDescGZIP() []byte {
	file_service_v1_state_proto_rawDescOnce.Do(func() {
		file_service_v1_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_v1_state_proto_rawDescData)
	})
	return file_service_v1_state_proto_rawDescData
}

var file_service_v1_state_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_service_v1_state_proto_goTypes = []interface{}{
	(*ProfileEntity)(nil),   // 0: service.v1.ProfileEntity
	(*ServiceRecord)(nil),   // 1: service.v1.ServiceRecord
	(*WebCredential)(nil),   // 2: service.v1.WebCredential
	(v1.PermissionsType)(0), // 3: common.v1.PermissionsType
}
var file_service_v1_state_proto_depIdxs = []int32{
	3, // 0: service.v1.ProfileEntity.permissions:type_name -> common.v1.PermissionsType
	3, // 1: service.v1.ServiceRecord.permissions:type_name -> common.v1.PermissionsType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_service_v1_state_proto_init() }
func file_service_v1_state_proto_init() {
	if File_service_v1_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_v1_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_v1_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_v1_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_v1_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_service_v1_state_proto_goTypes,
		DependencyIndexes: file_service_v1_state_proto_depIdxs,
		MessageInfos:      file_service_v1_state_proto_msgTypes,
	}.Build()
	File_service_v1_state_proto = out.File
	file_service_v1_state_proto_rawDesc = nil
	file_service_v1_state_proto_goTypes = nil
	file_service_v1_state_proto_depIdxs = nil
}
