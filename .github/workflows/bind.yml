name: Motor Bind Workflow

# Controls when the action will run.
on:
  push:
    tags:
      - v*

jobs:
  build-android:
    # Configuration
    name: "Android AAR  ðŸ”— "
    env:
      GO111MODULE: on
      GOMOD: ${{ github.workspace }}/go.mod
      MOD_CACHE: ~/go/pkg/mod
      BUILD_CACHE: ~/.cache/go-build
    runs-on: ubuntu-latest

    # Steps
    steps:
      # 1. Checkout the branch
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # 2. Get the latest version of the module
      - uses: olegtarasov/get-tag@v2.1
        id: version

      # 2. Setup Go environment
      - name: Setup Go Env
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      # 4. Bind Android Framework to Plugin
      - name: Setup and Bind AAR
        run: |
          mkdir -p ${{ github.workspace }}/build
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          gomobile bind -ldflags='-s -w' -target=android -o ${{ github.workspace }}/build/$GIT_TAG_NAME-io.sonr.motor.aar
        working-directory: ${{ github.workspace }}/cmd/motor-lib

      # 5. Compress AAR for upload
      - name: Compress action step
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: ${{ github.workspace }}/build
          files: |
            - ./build/io.sonr.motor.aar
          outPath: ${{ steps.version.outputs.tag }}-io.sonr.motor.tar.gz

      # Append release with artifact
      - name: Create the "latest" Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "${{ github.workspace }}/build/$GIT_TAG_NAME-io.sonr.motor.tar.gz"
          replacesArtifacts: false
          name: ${{ steps.version.outputs.tag }}
          token: ${{ secrets.ACTIONS_GH_TOKEN }}

  # Bind iOS Framework
  build-ios:
    # Configuration
    name: "iOS Framework  ðŸ”— "
    env:
      GO111MODULE: on
      GOMOD: ${{ github.workspace }}/go.mod
      MOD_CACHE: ~/go/pkg/mod
      BUILD_CACHE: ~/Library/Caches/go-build
    runs-on: macos-latest

    # Steps
    steps:
      # 1. Checkout the branch
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # 2. Setup Go environment
      - name: Setup Go Env
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      # 2. Get the latest version of the module
      - uses: olegtarasov/get-tag@v2.1
        id: version

      # 4. Bind iOS Framework to Plugin
      - name: Setup and Bind
        run: |
          mkdir -p ${{ github.workspace }}/build
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          gomobile bind -ldflags='-s -w' -target=ios -bundleid=io.sonr.motor -o ${{ github.workspace }}/build/SonrMotor-$GIT_TAG_NAME.xcframework
        working-directory: ${{ github.workspace }}/cmd/motor-lib

      # 5. Compress xcFramework for upload
      - name: Compress action step
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: ${{ github.workspace }}/build
          files: |
            - ./build/SonrMotor-$GIT_TAG_NAME.xcframework
          outPath: ${{ steps.version.outputs.tag }}-SonrMotor.tar.gz

      # Append release with artifact
      - name: Create the "latest" Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "${{ github.workspace }}/build/$GIT_TAG_NAME-SonrMotor.tar.gz"
          replacesArtifacts: false
          name: ${{ steps.version.outputs.tag }}
          token: ${{ secrets.ACTIONS_GH_TOKEN }}
