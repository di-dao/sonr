VERSION 0.7
PROJECT sonrhq/sonrd

FROM golang:1.20-alpine3.17
RUN apk add --update --no-cache \
    bash \
    bash-completion \
    binutils \
    ca-certificates \
    clang-extra-tools \
    coreutils \
    curl \
    findutils \
    g++ \
    git \
    grep \
    jq \
    less \
    make \
    nodejs \
    npm \
    openssl \
    util-linux

# deps - downloads and caches all dependencies for earthly. go.mod and go.sum will be updated locally.
deps:
	FROM +base
    WORKDIR /app
    COPY go.mod go.sum ./
    RUN go mod download
    RUN go install github.com/a-h/templ/cmd/templ@latest
    CACHE --sharing shared /go/pkg/mod
    SAVE ARTIFACT go.mod AS LOCAL go.mod
    SAVE ARTIFACT go.sum AS LOCAL go.sum
    COPY assets ./assets
    SAVE ARTIFACT assets AS LOCAL assets

# generate - generates all templates
generate:
    FROM +deps
    RUN templ generate
    SAVE ARTIFACT components AS LOCAL components

# build - builds the project
build:
    FROM +generate
    COPY . .
    RUN go build -o entrypoint main.go
    SAVE ARTIFACT entrypoint AS LOCAL bin/entrypoint

# deploy - creates runner image
deploy:
    ARG tag=latest

    FROM gcr.io/distroless/static-debian11
    WORKDIR /
    COPY +deps/assets /assets
    COPY +build/entrypoint /entrypoint
    EXPOSE 8080
    USER nonroot:nonroot
    ENTRYPOINT ["/entrypoint"]
    SAVE IMAGE sonrhq/hyperauth:$tag ghcr.io/sonrhq/hyperauth:$tag hyperauth:$tag

# test - runs all tests
test:
    FROM +repo
    COPY . .
	RUN go test -v ./...

# breaking - runs buf change detection
breaking:
    FROM +deps
    COPY . .
    RUN cd proto && buf breaking --against buf.build/sonrhq/service
