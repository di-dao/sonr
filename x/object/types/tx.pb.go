// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: object/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/sonr-io/sonr/x/registry/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateObject struct {
	Creator       string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Label         string         `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Description   string         `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	InitialFields []*TypeField   `protobuf:"bytes,4,rep,name=initial_fields,json=initialFields,proto3" json:"initial_fields,omitempty"`
	Session       *types.Session `protobuf:"bytes,5,opt,name=session,proto3" json:"session,omitempty"`
}

func (m *MsgCreateObject) Reset()         { *m = MsgCreateObject{} }
func (m *MsgCreateObject) String() string { return proto.CompactTextString(m) }
func (*MsgCreateObject) ProtoMessage()    {}
func (*MsgCreateObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{0}
}
func (m *MsgCreateObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateObject.Merge(m, src)
}
func (m *MsgCreateObject) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateObject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateObject proto.InternalMessageInfo

func (m *MsgCreateObject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateObject) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MsgCreateObject) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreateObject) GetInitialFields() []*TypeField {
	if m != nil {
		return m.InitialFields
	}
	return nil
}

func (m *MsgCreateObject) GetSession() *types.Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type MsgCreateObjectResponse struct {
	// Code of the response
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Message of the response
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// WhatIs of the Channel
	WhatIs *WhatIs `protobuf:"bytes,3,opt,name=what_is,json=whatIs,proto3" json:"what_is,omitempty"`
}

func (m *MsgCreateObjectResponse) Reset()         { *m = MsgCreateObjectResponse{} }
func (m *MsgCreateObjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateObjectResponse) ProtoMessage()    {}
func (*MsgCreateObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{1}
}
func (m *MsgCreateObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateObjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateObjectResponse.Merge(m, src)
}
func (m *MsgCreateObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateObjectResponse proto.InternalMessageInfo

func (m *MsgCreateObjectResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MsgCreateObjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MsgCreateObjectResponse) GetWhatIs() *WhatIs {
	if m != nil {
		return m.WhatIs
	}
	return nil
}

type MsgUpdateObject struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Label of the Object
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// Authenticated session data
	Session *types.Session `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`
	// Added fields to the object
	AddedFields []*TypeField `protobuf:"bytes,4,rep,name=added_fields,json=addedFields,proto3" json:"added_fields,omitempty"`
	// Removed fields from the object
	RemovedFields []*TypeField `protobuf:"bytes,5,rep,name=removed_fields,json=removedFields,proto3" json:"removed_fields,omitempty"`
	// Contend Identifier of the object
	Cid string `protobuf:"bytes,6,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (m *MsgUpdateObject) Reset()         { *m = MsgUpdateObject{} }
func (m *MsgUpdateObject) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateObject) ProtoMessage()    {}
func (*MsgUpdateObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{2}
}
func (m *MsgUpdateObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateObject.Merge(m, src)
}
func (m *MsgUpdateObject) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateObject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateObject proto.InternalMessageInfo

func (m *MsgUpdateObject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateObject) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MsgUpdateObject) GetSession() *types.Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *MsgUpdateObject) GetAddedFields() []*TypeField {
	if m != nil {
		return m.AddedFields
	}
	return nil
}

func (m *MsgUpdateObject) GetRemovedFields() []*TypeField {
	if m != nil {
		return m.RemovedFields
	}
	return nil
}

func (m *MsgUpdateObject) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type MsgUpdateObjectResponse struct {
	// Code of the response
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Message of the response
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// WhatIs of the Channel
	WhatIs *WhatIs `protobuf:"bytes,3,opt,name=what_is,json=whatIs,proto3" json:"what_is,omitempty"`
}

func (m *MsgUpdateObjectResponse) Reset()         { *m = MsgUpdateObjectResponse{} }
func (m *MsgUpdateObjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateObjectResponse) ProtoMessage()    {}
func (*MsgUpdateObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{3}
}
func (m *MsgUpdateObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateObjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateObjectResponse.Merge(m, src)
}
func (m *MsgUpdateObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateObjectResponse proto.InternalMessageInfo

func (m *MsgUpdateObjectResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MsgUpdateObjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MsgUpdateObjectResponse) GetWhatIs() *WhatIs {
	if m != nil {
		return m.WhatIs
	}
	return nil
}

type MsgDeactivateObject struct {
	Creator string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string         `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Session *types.Session `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`
}

func (m *MsgDeactivateObject) Reset()         { *m = MsgDeactivateObject{} }
func (m *MsgDeactivateObject) String() string { return proto.CompactTextString(m) }
func (*MsgDeactivateObject) ProtoMessage()    {}
func (*MsgDeactivateObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{4}
}
func (m *MsgDeactivateObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeactivateObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeactivateObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeactivateObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeactivateObject.Merge(m, src)
}
func (m *MsgDeactivateObject) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeactivateObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeactivateObject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeactivateObject proto.InternalMessageInfo

func (m *MsgDeactivateObject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeactivateObject) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgDeactivateObject) GetSession() *types.Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type MsgDeactivateObjectResponse struct {
	// Code of the response
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Message of the response
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *MsgDeactivateObjectResponse) Reset()         { *m = MsgDeactivateObjectResponse{} }
func (m *MsgDeactivateObjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeactivateObjectResponse) ProtoMessage()    {}
func (*MsgDeactivateObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{5}
}
func (m *MsgDeactivateObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeactivateObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeactivateObjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeactivateObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeactivateObjectResponse.Merge(m, src)
}
func (m *MsgDeactivateObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeactivateObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeactivateObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeactivateObjectResponse proto.InternalMessageInfo

func (m *MsgDeactivateObjectResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MsgDeactivateObjectResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MsgCreateWhatIs struct {
	Creator   string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did       string     `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	ObjectDoc *ObjectDoc `protobuf:"bytes,3,opt,name=object_doc,json=objectDoc,proto3" json:"object_doc,omitempty"`
}

func (m *MsgCreateWhatIs) Reset()         { *m = MsgCreateWhatIs{} }
func (m *MsgCreateWhatIs) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWhatIs) ProtoMessage()    {}
func (*MsgCreateWhatIs) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{6}
}
func (m *MsgCreateWhatIs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWhatIs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWhatIs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWhatIs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWhatIs.Merge(m, src)
}
func (m *MsgCreateWhatIs) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWhatIs) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWhatIs.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWhatIs proto.InternalMessageInfo

func (m *MsgCreateWhatIs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateWhatIs) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgCreateWhatIs) GetObjectDoc() *ObjectDoc {
	if m != nil {
		return m.ObjectDoc
	}
	return nil
}

type MsgCreateWhatIsResponse struct {
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
}

func (m *MsgCreateWhatIsResponse) Reset()         { *m = MsgCreateWhatIsResponse{} }
func (m *MsgCreateWhatIsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateWhatIsResponse) ProtoMessage()    {}
func (*MsgCreateWhatIsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{7}
}
func (m *MsgCreateWhatIsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateWhatIsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateWhatIsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateWhatIsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateWhatIsResponse.Merge(m, src)
}
func (m *MsgCreateWhatIsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateWhatIsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateWhatIsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateWhatIsResponse proto.InternalMessageInfo

func (m *MsgCreateWhatIsResponse) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

type MsgUpdateWhatIs struct {
	Creator   string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did       string     `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	ObjectDoc *ObjectDoc `protobuf:"bytes,3,opt,name=object_doc,json=objectDoc,proto3" json:"object_doc,omitempty"`
}

func (m *MsgUpdateWhatIs) Reset()         { *m = MsgUpdateWhatIs{} }
func (m *MsgUpdateWhatIs) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateWhatIs) ProtoMessage()    {}
func (*MsgUpdateWhatIs) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{8}
}
func (m *MsgUpdateWhatIs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateWhatIs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateWhatIs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateWhatIs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateWhatIs.Merge(m, src)
}
func (m *MsgUpdateWhatIs) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateWhatIs) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateWhatIs.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateWhatIs proto.InternalMessageInfo

func (m *MsgUpdateWhatIs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateWhatIs) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdateWhatIs) GetObjectDoc() *ObjectDoc {
	if m != nil {
		return m.ObjectDoc
	}
	return nil
}

type MsgUpdateWhatIsResponse struct {
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
}

func (m *MsgUpdateWhatIsResponse) Reset()         { *m = MsgUpdateWhatIsResponse{} }
func (m *MsgUpdateWhatIsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateWhatIsResponse) ProtoMessage()    {}
func (*MsgUpdateWhatIsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{9}
}
func (m *MsgUpdateWhatIsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateWhatIsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateWhatIsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateWhatIsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateWhatIsResponse.Merge(m, src)
}
func (m *MsgUpdateWhatIsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateWhatIsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateWhatIsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateWhatIsResponse proto.InternalMessageInfo

func (m *MsgUpdateWhatIsResponse) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

type MsgDeleteWhatIs struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
}

func (m *MsgDeleteWhatIs) Reset()         { *m = MsgDeleteWhatIs{} }
func (m *MsgDeleteWhatIs) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWhatIs) ProtoMessage()    {}
func (*MsgDeleteWhatIs) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{10}
}
func (m *MsgDeleteWhatIs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWhatIs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWhatIs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWhatIs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWhatIs.Merge(m, src)
}
func (m *MsgDeleteWhatIs) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWhatIs) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWhatIs.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWhatIs proto.InternalMessageInfo

func (m *MsgDeleteWhatIs) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteWhatIs) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

type MsgDeleteWhatIsResponse struct {
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
}

func (m *MsgDeleteWhatIsResponse) Reset()         { *m = MsgDeleteWhatIsResponse{} }
func (m *MsgDeleteWhatIsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWhatIsResponse) ProtoMessage()    {}
func (*MsgDeleteWhatIsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d88dea960c76a188, []int{11}
}
func (m *MsgDeleteWhatIsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWhatIsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWhatIsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWhatIsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWhatIsResponse.Merge(m, src)
}
func (m *MsgDeleteWhatIsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWhatIsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWhatIsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWhatIsResponse proto.InternalMessageInfo

func (m *MsgDeleteWhatIsResponse) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgCreateObject)(nil), "sonrio.sonr.object.MsgCreateObject")
	proto.RegisterType((*MsgCreateObjectResponse)(nil), "sonrio.sonr.object.MsgCreateObjectResponse")
	proto.RegisterType((*MsgUpdateObject)(nil), "sonrio.sonr.object.MsgUpdateObject")
	proto.RegisterType((*MsgUpdateObjectResponse)(nil), "sonrio.sonr.object.MsgUpdateObjectResponse")
	proto.RegisterType((*MsgDeactivateObject)(nil), "sonrio.sonr.object.MsgDeactivateObject")
	proto.RegisterType((*MsgDeactivateObjectResponse)(nil), "sonrio.sonr.object.MsgDeactivateObjectResponse")
	proto.RegisterType((*MsgCreateWhatIs)(nil), "sonrio.sonr.object.MsgCreateWhatIs")
	proto.RegisterType((*MsgCreateWhatIsResponse)(nil), "sonrio.sonr.object.MsgCreateWhatIsResponse")
	proto.RegisterType((*MsgUpdateWhatIs)(nil), "sonrio.sonr.object.MsgUpdateWhatIs")
	proto.RegisterType((*MsgUpdateWhatIsResponse)(nil), "sonrio.sonr.object.MsgUpdateWhatIsResponse")
	proto.RegisterType((*MsgDeleteWhatIs)(nil), "sonrio.sonr.object.MsgDeleteWhatIs")
	proto.RegisterType((*MsgDeleteWhatIsResponse)(nil), "sonrio.sonr.object.MsgDeleteWhatIsResponse")
}

func init() { proto.RegisterFile("object/tx.proto", fileDescriptor_d88dea960c76a188) }

var fileDescriptor_d88dea960c76a188 = []byte{
	// 623 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0x6e, 0x36, 0xfd, 0xc1, 0xbe, 0xd6, 0xdd, 0x32, 0xbb, 0x62, 0xa8, 0x18, 0x4a, 0xf6, 0xe0,
	0xc2, 0x6a, 0x02, 0xdd, 0x83, 0x17, 0x05, 0xd1, 0xb2, 0x20, 0x52, 0x84, 0xa8, 0x08, 0x5e, 0xba,
	0x69, 0x32, 0xa6, 0xa3, 0x69, 0x27, 0x64, 0xe2, 0x76, 0xab, 0xfe, 0x11, 0x1e, 0xfc, 0xa3, 0x3c,
	0xee, 0xd1, 0x8b, 0x20, 0xed, 0x3f, 0x22, 0x99, 0x4c, 0xba, 0x69, 0x9b, 0x6c, 0x7f, 0x1c, 0xf4,
	0x34, 0x33, 0x2f, 0xdf, 0x9b, 0xef, 0x7d, 0xdf, 0x9b, 0x19, 0x02, 0xfb, 0xb4, 0xf7, 0x11, 0xdb,
	0xa1, 0x11, 0x5e, 0xea, 0x7e, 0x40, 0x43, 0x8a, 0x10, 0xa3, 0xc3, 0x80, 0x50, 0x3d, 0x1a, 0xf4,
	0xf8, 0x63, 0xe3, 0x40, 0x80, 0xe2, 0x21, 0x06, 0x36, 0x0e, 0x45, 0x70, 0xd4, 0xb7, 0xc2, 0x2e,
	0x61, 0x22, 0x7a, 0x3b, 0xc0, 0x2e, 0x61, 0x61, 0x30, 0x36, 0x46, 0x7d, 0x3a, 0x0b, 0x6b, 0x13,
	0x09, 0xf6, 0x3b, 0xcc, 0x7d, 0x1e, 0x60, 0x2b, 0xc4, 0xaf, 0x78, 0x22, 0x52, 0xa0, 0x62, 0x47,
	0x6b, 0x1a, 0x28, 0x52, 0x53, 0x3a, 0xde, 0x35, 0x93, 0x25, 0x3a, 0x84, 0x92, 0x67, 0xf5, 0xb0,
	0xa7, 0xec, 0xf0, 0x78, 0xbc, 0x40, 0x4d, 0xa8, 0x3a, 0x98, 0xd9, 0x01, 0xf1, 0x43, 0x42, 0x87,
	0x8a, 0xcc, 0xbf, 0xa5, 0x43, 0xa8, 0x0d, 0x7b, 0x64, 0x48, 0x42, 0x62, 0x79, 0xdd, 0x0f, 0x04,
	0x7b, 0x0e, 0x53, 0x8a, 0x4d, 0xf9, 0xb8, 0xda, 0xba, 0xa7, 0x2f, 0x8b, 0xd2, 0xdf, 0x8c, 0x7d,
	0x7c, 0x16, 0xa1, 0xcc, 0x5b, 0x22, 0x89, 0xaf, 0x18, 0x7a, 0x04, 0x15, 0x86, 0x19, 0x8b, 0x38,
	0x4a, 0x4d, 0x69, 0x29, 0x3d, 0x11, 0xa8, 0xbf, 0x8e, 0x41, 0x66, 0x82, 0xd6, 0xbe, 0xc1, 0x9d,
	0x05, 0x8d, 0x26, 0x66, 0x3e, 0x1d, 0x32, 0x8c, 0x10, 0x14, 0x6d, 0xea, 0x60, 0x2e, 0xb4, 0x64,
	0xf2, 0x79, 0xa4, 0x7f, 0x80, 0x19, 0xb3, 0x5c, 0x2c, 0x74, 0x26, 0x4b, 0x74, 0x0a, 0x15, 0xe1,
	0x2a, 0x57, 0x59, 0x6d, 0x35, 0xb2, 0x04, 0xbc, 0xeb, 0x5b, 0xe1, 0x0b, 0x66, 0x96, 0x47, 0x7c,
	0xd4, 0x7e, 0xec, 0x70, 0x8b, 0xdf, 0xfa, 0xce, 0xf6, 0x16, 0xa7, 0xa4, 0xcb, 0x9b, 0x48, 0x47,
	0x4f, 0xa1, 0x66, 0x39, 0x0e, 0x76, 0x36, 0xf2, 0xbd, 0xca, 0x53, 0x84, 0xeb, 0x6d, 0xd8, 0x0b,
	0xf0, 0x80, 0x5e, 0x5c, 0xef, 0x51, 0x5a, 0xab, 0x77, 0x22, 0x49, 0xec, 0x52, 0x07, 0xd9, 0x26,
	0x8e, 0x52, 0xe6, 0xa2, 0xa2, 0xa9, 0x68, 0x4a, 0xda, 0x95, 0x7f, 0xd9, 0x94, 0x2f, 0x70, 0xd0,
	0x61, 0x6e, 0x1b, 0x5b, 0x76, 0x48, 0x2e, 0xd6, 0xe9, 0x4b, 0x1d, 0x64, 0x87, 0x38, 0x82, 0x3b,
	0x9a, 0x6e, 0xdd, 0x13, 0xed, 0x25, 0xdc, 0xcd, 0xe0, 0xde, 0x4e, 0xbd, 0xf6, 0x35, 0x75, 0x7f,
	0x63, 0x8d, 0x1b, 0x89, 0x78, 0x0c, 0x10, 0x1b, 0xd4, 0x75, 0xa8, 0x9d, 0xa9, 0x43, 0xf8, 0x17,
	0x17, 0xd9, 0xa6, 0xb6, 0xb9, 0x4b, 0x93, 0xa9, 0x76, 0x92, 0xba, 0x58, 0xc2, 0xe0, 0x44, 0x85,
	0xa0, 0x92, 0x66, 0x54, 0xa2, 0xd2, 0xb8, 0xe1, 0xff, 0xa9, 0xd2, 0x34, 0xf9, 0x0d, 0x95, 0x3e,
	0xe1, 0x95, 0xb6, 0xb1, 0x87, 0xb7, 0xa9, 0x54, 0x70, 0xa5, 0xd3, 0xf3, 0xb9, 0x5a, 0xbf, 0x8b,
	0x20, 0x77, 0x98, 0x8b, 0xce, 0xa1, 0x36, 0xf7, 0x08, 0x1f, 0x65, 0x49, 0x5b, 0x78, 0xc5, 0x1a,
	0x27, 0x6b, 0x80, 0x66, 0xdc, 0xe7, 0x50, 0x9b, 0x7b, 0x83, 0xf2, 0x18, 0xd2, 0xa0, 0x5c, 0x86,
	0xcc, 0x7b, 0xeb, 0x41, 0x7d, 0xe9, 0x46, 0xdd, 0xcf, 0xd9, 0x60, 0x11, 0xd8, 0x30, 0xd6, 0x04,
	0xa6, 0xf5, 0xcc, 0x1d, 0xfb, 0x9b, 0x1d, 0x8b, 0x41, 0x2b, 0x1c, 0x5b, 0xe8, 0xd6, 0xcc, 0xb1,
	0x15, 0x0c, 0x69, 0xd0, 0x0a, 0xc7, 0x96, 0x19, 0xe6, 0x8e, 0xd9, 0x51, 0xae, 0x09, 0xd7, 0xa0,
	0x5c, 0x86, 0xac, 0x13, 0xf7, 0xec, 0xec, 0xe7, 0x44, 0x95, 0xae, 0x26, 0xaa, 0xf4, 0x67, 0xa2,
	0x4a, 0xdf, 0xa7, 0x6a, 0xe1, 0x6a, 0xaa, 0x16, 0x7e, 0x4d, 0xd5, 0xc2, 0xfb, 0x07, 0x2e, 0x09,
	0xfb, 0x9f, 0x7b, 0xba, 0x4d, 0x07, 0x46, 0xb4, 0xd3, 0x43, 0x42, 0x8d, 0x9e, 0x47, 0xed, 0x4f,
	0x76, 0xdf, 0x22, 0x43, 0xe3, 0xd2, 0x48, 0xfe, 0x40, 0xc6, 0x3e, 0x66, 0xbd, 0x32, 0xff, 0x5f,
	0x38, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x28, 0xfe, 0xf4, 0xad, 0x98, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateObject
	//
	// CreateObject is the transaction that creates a new object.
	CreateObject(ctx context.Context, in *MsgCreateObject, opts ...grpc.CallOption) (*MsgCreateObjectResponse, error)
	// UpdateObject
	//
	// UpdateObject is the transaction that updates an existing object.
	UpdateObject(ctx context.Context, in *MsgUpdateObject, opts ...grpc.CallOption) (*MsgUpdateObjectResponse, error)
	// DeactivateObject
	//
	// DeactivateObject is the transaction that deactivates an existing object.
	DeactivateObject(ctx context.Context, in *MsgDeactivateObject, opts ...grpc.CallOption) (*MsgDeactivateObjectResponse, error)
	// CreateWhatIs
	//
	// CreateWhatIs is the method that creates a new what_is document in the Object module.
	CreateWhatIs(ctx context.Context, in *MsgCreateWhatIs, opts ...grpc.CallOption) (*MsgCreateWhatIsResponse, error)
	// UpdateWhatIs
	//
	// UpdateWhatIs is the method that updates an existing what_is document in the Object module.
	UpdateWhatIs(ctx context.Context, in *MsgUpdateWhatIs, opts ...grpc.CallOption) (*MsgUpdateWhatIsResponse, error)
	// DeleteWhatIs
	//
	// DeleteWhatIs is the method that deletes an existing what_is document in the Object module.
	DeleteWhatIs(ctx context.Context, in *MsgDeleteWhatIs, opts ...grpc.CallOption) (*MsgDeleteWhatIsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateObject(ctx context.Context, in *MsgCreateObject, opts ...grpc.CallOption) (*MsgCreateObjectResponse, error) {
	out := new(MsgCreateObjectResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.object.Msg/CreateObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateObject(ctx context.Context, in *MsgUpdateObject, opts ...grpc.CallOption) (*MsgUpdateObjectResponse, error) {
	out := new(MsgUpdateObjectResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.object.Msg/UpdateObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeactivateObject(ctx context.Context, in *MsgDeactivateObject, opts ...grpc.CallOption) (*MsgDeactivateObjectResponse, error) {
	out := new(MsgDeactivateObjectResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.object.Msg/DeactivateObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateWhatIs(ctx context.Context, in *MsgCreateWhatIs, opts ...grpc.CallOption) (*MsgCreateWhatIsResponse, error) {
	out := new(MsgCreateWhatIsResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.object.Msg/CreateWhatIs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateWhatIs(ctx context.Context, in *MsgUpdateWhatIs, opts ...grpc.CallOption) (*MsgUpdateWhatIsResponse, error) {
	out := new(MsgUpdateWhatIsResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.object.Msg/UpdateWhatIs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteWhatIs(ctx context.Context, in *MsgDeleteWhatIs, opts ...grpc.CallOption) (*MsgDeleteWhatIsResponse, error) {
	out := new(MsgDeleteWhatIsResponse)
	err := c.cc.Invoke(ctx, "/sonrio.sonr.object.Msg/DeleteWhatIs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateObject
	//
	// CreateObject is the transaction that creates a new object.
	CreateObject(context.Context, *MsgCreateObject) (*MsgCreateObjectResponse, error)
	// UpdateObject
	//
	// UpdateObject is the transaction that updates an existing object.
	UpdateObject(context.Context, *MsgUpdateObject) (*MsgUpdateObjectResponse, error)
	// DeactivateObject
	//
	// DeactivateObject is the transaction that deactivates an existing object.
	DeactivateObject(context.Context, *MsgDeactivateObject) (*MsgDeactivateObjectResponse, error)
	// CreateWhatIs
	//
	// CreateWhatIs is the method that creates a new what_is document in the Object module.
	CreateWhatIs(context.Context, *MsgCreateWhatIs) (*MsgCreateWhatIsResponse, error)
	// UpdateWhatIs
	//
	// UpdateWhatIs is the method that updates an existing what_is document in the Object module.
	UpdateWhatIs(context.Context, *MsgUpdateWhatIs) (*MsgUpdateWhatIsResponse, error)
	// DeleteWhatIs
	//
	// DeleteWhatIs is the method that deletes an existing what_is document in the Object module.
	DeleteWhatIs(context.Context, *MsgDeleteWhatIs) (*MsgDeleteWhatIsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateObject(ctx context.Context, req *MsgCreateObject) (*MsgCreateObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObject not implemented")
}
func (*UnimplementedMsgServer) UpdateObject(ctx context.Context, req *MsgUpdateObject) (*MsgUpdateObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObject not implemented")
}
func (*UnimplementedMsgServer) DeactivateObject(ctx context.Context, req *MsgDeactivateObject) (*MsgDeactivateObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeactivateObject not implemented")
}
func (*UnimplementedMsgServer) CreateWhatIs(ctx context.Context, req *MsgCreateWhatIs) (*MsgCreateWhatIsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWhatIs not implemented")
}
func (*UnimplementedMsgServer) UpdateWhatIs(ctx context.Context, req *MsgUpdateWhatIs) (*MsgUpdateWhatIsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWhatIs not implemented")
}
func (*UnimplementedMsgServer) DeleteWhatIs(ctx context.Context, req *MsgDeleteWhatIs) (*MsgDeleteWhatIsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWhatIs not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.object.Msg/CreateObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateObject(ctx, req.(*MsgCreateObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.object.Msg/UpdateObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateObject(ctx, req.(*MsgUpdateObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeactivateObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeactivateObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeactivateObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.object.Msg/DeactivateObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeactivateObject(ctx, req.(*MsgDeactivateObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateWhatIs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateWhatIs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateWhatIs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.object.Msg/CreateWhatIs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateWhatIs(ctx, req.(*MsgCreateWhatIs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateWhatIs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateWhatIs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateWhatIs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.object.Msg/UpdateWhatIs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateWhatIs(ctx, req.(*MsgUpdateWhatIs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteWhatIs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteWhatIs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteWhatIs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sonrio.sonr.object.Msg/DeleteWhatIs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteWhatIs(ctx, req.(*MsgDeleteWhatIs))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sonrio.sonr.object.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateObject",
			Handler:    _Msg_CreateObject_Handler,
		},
		{
			MethodName: "UpdateObject",
			Handler:    _Msg_UpdateObject_Handler,
		},
		{
			MethodName: "DeactivateObject",
			Handler:    _Msg_DeactivateObject_Handler,
		},
		{
			MethodName: "CreateWhatIs",
			Handler:    _Msg_CreateWhatIs_Handler,
		},
		{
			MethodName: "UpdateWhatIs",
			Handler:    _Msg_UpdateWhatIs_Handler,
		},
		{
			MethodName: "DeleteWhatIs",
			Handler:    _Msg_DeleteWhatIs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "object/tx.proto",
}

func (m *MsgCreateObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Session != nil {
		{
			size, err := m.Session.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.InitialFields) > 0 {
		for iNdEx := len(m.InitialFields) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InitialFields[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.WhatIs != nil {
		{
			size, err := m.WhatIs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cid) > 0 {
		i -= len(m.Cid)
		copy(dAtA[i:], m.Cid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Cid)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.RemovedFields) > 0 {
		for iNdEx := len(m.RemovedFields) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemovedFields[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.AddedFields) > 0 {
		for iNdEx := len(m.AddedFields) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddedFields[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Session != nil {
		{
			size, err := m.Session.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.WhatIs != nil {
		{
			size, err := m.WhatIs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeactivateObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeactivateObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeactivateObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Session != nil {
		{
			size, err := m.Session.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeactivateObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeactivateObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeactivateObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateWhatIs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWhatIs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWhatIs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ObjectDoc != nil {
		{
			size, err := m.ObjectDoc.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateWhatIsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateWhatIsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateWhatIsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateWhatIs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateWhatIs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateWhatIs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ObjectDoc != nil {
		{
			size, err := m.ObjectDoc.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateWhatIsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateWhatIsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateWhatIsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWhatIs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWhatIs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWhatIs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWhatIsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWhatIsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWhatIsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.InitialFields) > 0 {
		for _, e := range m.InitialFields {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.Session != nil {
		l = m.Session.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovTx(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.WhatIs != nil {
		l = m.WhatIs.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Session != nil {
		l = m.Session.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.AddedFields) > 0 {
		for _, e := range m.AddedFields {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.RemovedFields) > 0 {
		for _, e := range m.RemovedFields {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.Cid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovTx(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.WhatIs != nil {
		l = m.WhatIs.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeactivateObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Session != nil {
		l = m.Session.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeactivateObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovTx(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateWhatIs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ObjectDoc != nil {
		l = m.ObjectDoc.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateWhatIsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateWhatIs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ObjectDoc != nil {
		l = m.ObjectDoc.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateWhatIsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteWhatIs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteWhatIsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialFields", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitialFields = append(m.InitialFields, &TypeField{})
			if err := m.InitialFields[len(m.InitialFields)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Session == nil {
				m.Session = &types.Session{}
			}
			if err := m.Session.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WhatIs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WhatIs == nil {
				m.WhatIs = &WhatIs{}
			}
			if err := m.WhatIs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Session == nil {
				m.Session = &types.Session{}
			}
			if err := m.Session.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddedFields", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddedFields = append(m.AddedFields, &TypeField{})
			if err := m.AddedFields[len(m.AddedFields)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemovedFields", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemovedFields = append(m.RemovedFields, &TypeField{})
			if err := m.RemovedFields[len(m.RemovedFields)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WhatIs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WhatIs == nil {
				m.WhatIs = &WhatIs{}
			}
			if err := m.WhatIs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeactivateObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeactivateObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeactivateObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Session == nil {
				m.Session = &types.Session{}
			}
			if err := m.Session.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeactivateObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeactivateObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeactivateObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateWhatIs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWhatIs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWhatIs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectDoc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ObjectDoc == nil {
				m.ObjectDoc = &ObjectDoc{}
			}
			if err := m.ObjectDoc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateWhatIsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateWhatIsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateWhatIsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateWhatIs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateWhatIs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateWhatIs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectDoc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ObjectDoc == nil {
				m.ObjectDoc = &ObjectDoc{}
			}
			if err := m.ObjectDoc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateWhatIsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateWhatIsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateWhatIsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWhatIs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWhatIs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWhatIs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWhatIsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWhatIsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWhatIsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
