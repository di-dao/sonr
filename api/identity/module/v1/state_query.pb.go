// Code generated by protoc-gen-go-cosmos-orm-proto. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: sonrhq/sonr/identity/module/v1/state_query.proto

package modulev1

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetAccountRequest is the StateQuery/GetAccountRequest request type.
type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sequence specifies the value of the sequence field in the primary key.
	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccountRequest) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// GetAccountResponse is the StateQuery/GetAccountResponse response type.
type GetAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Account `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetAccountResponse) Reset() {
	*x = GetAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountResponse) ProtoMessage() {}

func (x *GetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountResponse.ProtoReflect.Descriptor instead.
func (*GetAccountResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetAccountResponse) GetValue() *Account {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetAccountByAddressRequest is the StateQuery/GetAccountByAddressRequest request type.
type GetAccountByAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAccountByAddressRequest) Reset() {
	*x = GetAccountByAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByAddressRequest) ProtoMessage() {}

func (x *GetAccountByAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByAddressRequest.ProtoReflect.Descriptor instead.
func (*GetAccountByAddressRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetAccountByAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// GetAccountByAddressResponse is the StateQuery/GetAccountByAddressResponse response type.
type GetAccountByAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Account `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetAccountByAddressResponse) Reset() {
	*x = GetAccountByAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByAddressResponse) ProtoMessage() {}

func (x *GetAccountByAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByAddressResponse.ProtoReflect.Descriptor instead.
func (*GetAccountByAddressResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccountByAddressResponse) GetValue() *Account {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetAccountByPublicKeyRequest is the StateQuery/GetAccountByPublicKeyRequest request type.
type GetAccountByPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *GetAccountByPublicKeyRequest) Reset() {
	*x = GetAccountByPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByPublicKeyRequest) ProtoMessage() {}

func (x *GetAccountByPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAccountByPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{4}
}

func (x *GetAccountByPublicKeyRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// GetAccountByPublicKeyResponse is the StateQuery/GetAccountByPublicKeyResponse response type.
type GetAccountByPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Account `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetAccountByPublicKeyResponse) Reset() {
	*x = GetAccountByPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByPublicKeyResponse) ProtoMessage() {}

func (x *GetAccountByPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetAccountByPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccountByPublicKeyResponse) GetValue() *Account {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListAccountRequest is the StateQuery/ListAccountRequest request type.
type ListAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListAccountRequest_PrefixQuery
	//	*ListAccountRequest_RangeQuery_
	Query isListAccountRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAccountRequest) Reset() {
	*x = ListAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest) ProtoMessage() {}

func (x *ListAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest.ProtoReflect.Descriptor instead.
func (*ListAccountRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6}
}

func (m *ListAccountRequest) GetQuery() isListAccountRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListAccountRequest) GetPrefixQuery() *ListAccountRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListAccountRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListAccountRequest) GetRangeQuery() *ListAccountRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListAccountRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListAccountRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListAccountRequest_Query interface {
	isListAccountRequest_Query()
}

type ListAccountRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListAccountRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListAccountRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListAccountRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListAccountRequest_PrefixQuery) isListAccountRequest_Query() {}

func (*ListAccountRequest_RangeQuery_) isListAccountRequest_Query() {}

// ListAccountResponse is the StateQuery/ListAccountResponse response type.
type ListAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Account `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAccountResponse) Reset() {
	*x = ListAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountResponse) ProtoMessage() {}

func (x *ListAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountResponse.ProtoReflect.Descriptor instead.
func (*ListAccountResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{7}
}

func (x *ListAccountResponse) GetValues() []*Account {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListAccountResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetBlockchainRequest is the StateQuery/GetBlockchainRequest request type.
type GetBlockchainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index specifies the value of the index field in the primary key.
	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetBlockchainRequest) Reset() {
	*x = GetBlockchainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainRequest) ProtoMessage() {}

func (x *GetBlockchainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainRequest.ProtoReflect.Descriptor instead.
func (*GetBlockchainRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{8}
}

func (x *GetBlockchainRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

// GetBlockchainResponse is the StateQuery/GetBlockchainResponse response type.
type GetBlockchainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Blockchain `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetBlockchainResponse) Reset() {
	*x = GetBlockchainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainResponse) ProtoMessage() {}

func (x *GetBlockchainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainResponse.ProtoReflect.Descriptor instead.
func (*GetBlockchainResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{9}
}

func (x *GetBlockchainResponse) GetValue() *Blockchain {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetBlockchainByChainIdRequest is the StateQuery/GetBlockchainByChainIdRequest request type.
type GetBlockchainByChainIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *GetBlockchainByChainIdRequest) Reset() {
	*x = GetBlockchainByChainIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainByChainIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainByChainIdRequest) ProtoMessage() {}

func (x *GetBlockchainByChainIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainByChainIdRequest.ProtoReflect.Descriptor instead.
func (*GetBlockchainByChainIdRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{10}
}

func (x *GetBlockchainByChainIdRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

// GetBlockchainByChainIdResponse is the StateQuery/GetBlockchainByChainIdResponse response type.
type GetBlockchainByChainIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Blockchain `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetBlockchainByChainIdResponse) Reset() {
	*x = GetBlockchainByChainIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainByChainIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainByChainIdResponse) ProtoMessage() {}

func (x *GetBlockchainByChainIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainByChainIdResponse.ProtoReflect.Descriptor instead.
func (*GetBlockchainByChainIdResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{11}
}

func (x *GetBlockchainByChainIdResponse) GetValue() *Blockchain {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetBlockchainByNameRequest is the StateQuery/GetBlockchainByNameRequest request type.
type GetBlockchainByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetBlockchainByNameRequest) Reset() {
	*x = GetBlockchainByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainByNameRequest) ProtoMessage() {}

func (x *GetBlockchainByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainByNameRequest.ProtoReflect.Descriptor instead.
func (*GetBlockchainByNameRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{12}
}

func (x *GetBlockchainByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetBlockchainByNameResponse is the StateQuery/GetBlockchainByNameResponse response type.
type GetBlockchainByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Blockchain `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetBlockchainByNameResponse) Reset() {
	*x = GetBlockchainByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainByNameResponse) ProtoMessage() {}

func (x *GetBlockchainByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainByNameResponse.ProtoReflect.Descriptor instead.
func (*GetBlockchainByNameResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlockchainByNameResponse) GetValue() *Blockchain {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListBlockchainRequest is the StateQuery/ListBlockchainRequest request type.
type ListBlockchainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListBlockchainRequest_PrefixQuery
	//	*ListBlockchainRequest_RangeQuery_
	Query isListBlockchainRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListBlockchainRequest) Reset() {
	*x = ListBlockchainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest) ProtoMessage() {}

func (x *ListBlockchainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14}
}

func (m *ListBlockchainRequest) GetQuery() isListBlockchainRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListBlockchainRequest) GetPrefixQuery() *ListBlockchainRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListBlockchainRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListBlockchainRequest) GetRangeQuery() *ListBlockchainRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListBlockchainRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListBlockchainRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListBlockchainRequest_Query interface {
	isListBlockchainRequest_Query()
}

type ListBlockchainRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListBlockchainRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListBlockchainRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListBlockchainRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListBlockchainRequest_PrefixQuery) isListBlockchainRequest_Query() {}

func (*ListBlockchainRequest_RangeQuery_) isListBlockchainRequest_Query() {}

// ListBlockchainResponse is the StateQuery/ListBlockchainResponse response type.
type ListBlockchainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Blockchain `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListBlockchainResponse) Reset() {
	*x = ListBlockchainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainResponse) ProtoMessage() {}

func (x *ListBlockchainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainResponse.ProtoReflect.Descriptor instead.
func (*ListBlockchainResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{15}
}

func (x *ListBlockchainResponse) GetValues() []*Blockchain {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListBlockchainResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetIdentifierRequest is the StateQuery/GetIdentifierRequest request type.
type GetIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index specifies the value of the index field in the primary key.
	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetIdentifierRequest) Reset() {
	*x = GetIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentifierRequest) ProtoMessage() {}

func (x *GetIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentifierRequest.ProtoReflect.Descriptor instead.
func (*GetIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{16}
}

func (x *GetIdentifierRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

// GetIdentifierResponse is the StateQuery/GetIdentifierResponse response type.
type GetIdentifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Identifier `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetIdentifierResponse) Reset() {
	*x = GetIdentifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentifierResponse) ProtoMessage() {}

func (x *GetIdentifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentifierResponse.ProtoReflect.Descriptor instead.
func (*GetIdentifierResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{17}
}

func (x *GetIdentifierResponse) GetValue() *Identifier {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListIdentifierRequest is the StateQuery/ListIdentifierRequest request type.
type ListIdentifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListIdentifierRequest_PrefixQuery
	//	*ListIdentifierRequest_RangeQuery_
	Query isListIdentifierRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListIdentifierRequest) Reset() {
	*x = ListIdentifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdentifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentifierRequest) ProtoMessage() {}

func (x *ListIdentifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentifierRequest.ProtoReflect.Descriptor instead.
func (*ListIdentifierRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{18}
}

func (m *ListIdentifierRequest) GetQuery() isListIdentifierRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListIdentifierRequest) GetPrefixQuery() *ListIdentifierRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListIdentifierRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListIdentifierRequest) GetRangeQuery() *ListIdentifierRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListIdentifierRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListIdentifierRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListIdentifierRequest_Query interface {
	isListIdentifierRequest_Query()
}

type ListIdentifierRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListIdentifierRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListIdentifierRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListIdentifierRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListIdentifierRequest_PrefixQuery) isListIdentifierRequest_Query() {}

func (*ListIdentifierRequest_RangeQuery_) isListIdentifierRequest_Query() {}

// ListIdentifierResponse is the StateQuery/ListIdentifierResponse response type.
type ListIdentifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Identifier `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListIdentifierResponse) Reset() {
	*x = ListIdentifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdentifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentifierResponse) ProtoMessage() {}

func (x *ListIdentifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentifierResponse.ProtoReflect.Descriptor instead.
func (*ListIdentifierResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{19}
}

func (x *ListIdentifierResponse) GetValues() []*Identifier {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListIdentifierResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListAccountRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListAccountRequest_IndexKey_Sequence_
	//	*ListAccountRequest_IndexKey_Address_
	//	*ListAccountRequest_IndexKey_PublicKey_
	Key isListAccountRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListAccountRequest_IndexKey) Reset() {
	*x = ListAccountRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_IndexKey) ProtoMessage() {}

func (x *ListAccountRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 0}
}

func (m *ListAccountRequest_IndexKey) GetKey() isListAccountRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListAccountRequest_IndexKey) GetSequence() *ListAccountRequest_IndexKey_Sequence {
	if x, ok := x.GetKey().(*ListAccountRequest_IndexKey_Sequence_); ok {
		return x.Sequence
	}
	return nil
}

func (x *ListAccountRequest_IndexKey) GetAddress() *ListAccountRequest_IndexKey_Address {
	if x, ok := x.GetKey().(*ListAccountRequest_IndexKey_Address_); ok {
		return x.Address
	}
	return nil
}

func (x *ListAccountRequest_IndexKey) GetPublicKey() *ListAccountRequest_IndexKey_PublicKey {
	if x, ok := x.GetKey().(*ListAccountRequest_IndexKey_PublicKey_); ok {
		return x.PublicKey
	}
	return nil
}

type isListAccountRequest_IndexKey_Key interface {
	isListAccountRequest_IndexKey_Key()
}

type ListAccountRequest_IndexKey_Sequence_ struct {
	// sequence specifies the value of the Sequence index key to use in the query.
	Sequence *ListAccountRequest_IndexKey_Sequence `protobuf:"bytes,1,opt,name=sequence,proto3,oneof"`
}

type ListAccountRequest_IndexKey_Address_ struct {
	// address specifies the value of the Address index key to use in the query.
	Address *ListAccountRequest_IndexKey_Address `protobuf:"bytes,2,opt,name=address,proto3,oneof"`
}

type ListAccountRequest_IndexKey_PublicKey_ struct {
	// public_key specifies the value of the PublicKey index key to use in the query.
	PublicKey *ListAccountRequest_IndexKey_PublicKey `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3,oneof"`
}

func (*ListAccountRequest_IndexKey_Sequence_) isListAccountRequest_IndexKey_Key() {}

func (*ListAccountRequest_IndexKey_Address_) isListAccountRequest_IndexKey_Key() {}

func (*ListAccountRequest_IndexKey_PublicKey_) isListAccountRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListAccountRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListAccountRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListAccountRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListAccountRequest_RangeQuery) Reset() {
	*x = ListAccountRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_RangeQuery) ProtoMessage() {}

func (x *ListAccountRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ListAccountRequest_RangeQuery) GetFrom() *ListAccountRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListAccountRequest_RangeQuery) GetTo() *ListAccountRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListAccountRequest_IndexKey_Sequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sequence is the value of the sequence field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Sequence *uint64 `protobuf:"varint,1,opt,name=sequence,proto3,oneof" json:"sequence,omitempty"`
}

func (x *ListAccountRequest_IndexKey_Sequence) Reset() {
	*x = ListAccountRequest_IndexKey_Sequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_IndexKey_Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_IndexKey_Sequence) ProtoMessage() {}

func (x *ListAccountRequest_IndexKey_Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_IndexKey_Sequence.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_IndexKey_Sequence) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *ListAccountRequest_IndexKey_Sequence) GetSequence() uint64 {
	if x != nil && x.Sequence != nil {
		return *x.Sequence
	}
	return 0
}

type ListAccountRequest_IndexKey_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is the value of the address field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Address *string `protobuf:"bytes,1,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *ListAccountRequest_IndexKey_Address) Reset() {
	*x = ListAccountRequest_IndexKey_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_IndexKey_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_IndexKey_Address) ProtoMessage() {}

func (x *ListAccountRequest_IndexKey_Address) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_IndexKey_Address.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_IndexKey_Address) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 0, 1}
}

func (x *ListAccountRequest_IndexKey_Address) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type ListAccountRequest_IndexKey_PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// public_key is the value of the public_key field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3,oneof" json:"public_key,omitempty"`
}

func (x *ListAccountRequest_IndexKey_PublicKey) Reset() {
	*x = ListAccountRequest_IndexKey_PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_IndexKey_PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_IndexKey_PublicKey) ProtoMessage() {}

func (x *ListAccountRequest_IndexKey_PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_IndexKey_PublicKey.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_IndexKey_PublicKey) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 0, 2}
}

func (x *ListAccountRequest_IndexKey_PublicKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListBlockchainRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListBlockchainRequest_IndexKey_Index_
	//	*ListBlockchainRequest_IndexKey_ChainId_
	//	*ListBlockchainRequest_IndexKey_Name_
	Key isListBlockchainRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListBlockchainRequest_IndexKey) Reset() {
	*x = ListBlockchainRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_IndexKey) ProtoMessage() {}

func (x *ListBlockchainRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0}
}

func (m *ListBlockchainRequest_IndexKey) GetKey() isListBlockchainRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListBlockchainRequest_IndexKey) GetIndex() *ListBlockchainRequest_IndexKey_Index {
	if x, ok := x.GetKey().(*ListBlockchainRequest_IndexKey_Index_); ok {
		return x.Index
	}
	return nil
}

func (x *ListBlockchainRequest_IndexKey) GetChainId() *ListBlockchainRequest_IndexKey_ChainId {
	if x, ok := x.GetKey().(*ListBlockchainRequest_IndexKey_ChainId_); ok {
		return x.ChainId
	}
	return nil
}

func (x *ListBlockchainRequest_IndexKey) GetName() *ListBlockchainRequest_IndexKey_Name {
	if x, ok := x.GetKey().(*ListBlockchainRequest_IndexKey_Name_); ok {
		return x.Name
	}
	return nil
}

type isListBlockchainRequest_IndexKey_Key interface {
	isListBlockchainRequest_IndexKey_Key()
}

type ListBlockchainRequest_IndexKey_Index_ struct {
	// index specifies the value of the Index index key to use in the query.
	Index *ListBlockchainRequest_IndexKey_Index `protobuf:"bytes,1,opt,name=index,proto3,oneof"`
}

type ListBlockchainRequest_IndexKey_ChainId_ struct {
	// chain_id specifies the value of the ChainId index key to use in the query.
	ChainId *ListBlockchainRequest_IndexKey_ChainId `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3,oneof"`
}

type ListBlockchainRequest_IndexKey_Name_ struct {
	// name specifies the value of the Name index key to use in the query.
	Name *ListBlockchainRequest_IndexKey_Name `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

func (*ListBlockchainRequest_IndexKey_Index_) isListBlockchainRequest_IndexKey_Key() {}

func (*ListBlockchainRequest_IndexKey_ChainId_) isListBlockchainRequest_IndexKey_Key() {}

func (*ListBlockchainRequest_IndexKey_Name_) isListBlockchainRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListBlockchainRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListBlockchainRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListBlockchainRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListBlockchainRequest_RangeQuery) Reset() {
	*x = ListBlockchainRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_RangeQuery) ProtoMessage() {}

func (x *ListBlockchainRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 1}
}

func (x *ListBlockchainRequest_RangeQuery) GetFrom() *ListBlockchainRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListBlockchainRequest_RangeQuery) GetTo() *ListBlockchainRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListBlockchainRequest_IndexKey_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index is the value of the index field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Index *uint64 `protobuf:"varint,1,opt,name=index,proto3,oneof" json:"index,omitempty"`
}

func (x *ListBlockchainRequest_IndexKey_Index) Reset() {
	*x = ListBlockchainRequest_IndexKey_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_IndexKey_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_IndexKey_Index) ProtoMessage() {}

func (x *ListBlockchainRequest_IndexKey_Index) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_IndexKey_Index.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_IndexKey_Index) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *ListBlockchainRequest_IndexKey_Index) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type ListBlockchainRequest_IndexKey_ChainId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// chain_id is the value of the chain_id field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	ChainId *string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
}

func (x *ListBlockchainRequest_IndexKey_ChainId) Reset() {
	*x = ListBlockchainRequest_IndexKey_ChainId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_IndexKey_ChainId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_IndexKey_ChainId) ProtoMessage() {}

func (x *ListBlockchainRequest_IndexKey_ChainId) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_IndexKey_ChainId.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_IndexKey_ChainId) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 1}
}

func (x *ListBlockchainRequest_IndexKey_ChainId) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

type ListBlockchainRequest_IndexKey_Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the value of the name field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *ListBlockchainRequest_IndexKey_Name) Reset() {
	*x = ListBlockchainRequest_IndexKey_Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_IndexKey_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_IndexKey_Name) ProtoMessage() {}

func (x *ListBlockchainRequest_IndexKey_Name) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_IndexKey_Name.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_IndexKey_Name) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 2}
}

func (x *ListBlockchainRequest_IndexKey_Name) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListIdentifierRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListIdentifierRequest_IndexKey_Index_
	Key isListIdentifierRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListIdentifierRequest_IndexKey) Reset() {
	*x = ListIdentifierRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdentifierRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentifierRequest_IndexKey) ProtoMessage() {}

func (x *ListIdentifierRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentifierRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListIdentifierRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{18, 0}
}

func (m *ListIdentifierRequest_IndexKey) GetKey() isListIdentifierRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListIdentifierRequest_IndexKey) GetIndex() *ListIdentifierRequest_IndexKey_Index {
	if x, ok := x.GetKey().(*ListIdentifierRequest_IndexKey_Index_); ok {
		return x.Index
	}
	return nil
}

type isListIdentifierRequest_IndexKey_Key interface {
	isListIdentifierRequest_IndexKey_Key()
}

type ListIdentifierRequest_IndexKey_Index_ struct {
	// index specifies the value of the Index index key to use in the query.
	Index *ListIdentifierRequest_IndexKey_Index `protobuf:"bytes,1,opt,name=index,proto3,oneof"`
}

func (*ListIdentifierRequest_IndexKey_Index_) isListIdentifierRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListIdentifierRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListIdentifierRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListIdentifierRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListIdentifierRequest_RangeQuery) Reset() {
	*x = ListIdentifierRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdentifierRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentifierRequest_RangeQuery) ProtoMessage() {}

func (x *ListIdentifierRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentifierRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListIdentifierRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{18, 1}
}

func (x *ListIdentifierRequest_RangeQuery) GetFrom() *ListIdentifierRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListIdentifierRequest_RangeQuery) GetTo() *ListIdentifierRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListIdentifierRequest_IndexKey_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index is the value of the index field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Index *uint64 `protobuf:"varint,1,opt,name=index,proto3,oneof" json:"index,omitempty"`
}

func (x *ListIdentifierRequest_IndexKey_Index) Reset() {
	*x = ListIdentifierRequest_IndexKey_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdentifierRequest_IndexKey_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentifierRequest_IndexKey_Index) ProtoMessage() {}

func (x *ListIdentifierRequest_IndexKey_Index) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentifierRequest_IndexKey_Index.ProtoReflect.Descriptor instead.
func (*ListIdentifierRequest_IndexKey_Index) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{18, 0, 0}
}

func (x *ListIdentifierRequest_IndexKey_Index) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

var File_sonrhq_sonr_identity_module_v1_state_query_proto protoreflect.FileDescriptor

var file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDesc = []byte{
	0x0a, 0x30, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x53, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x36, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x5e, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc7, 0x07, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x0c,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x60,
	0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xee, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4b, 0x65, 0x79, 0x12, 0x62, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4b, 0x65, 0x79, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48,
	0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x66, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x1a, 0x38, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f,
	0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x34, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x1a, 0x3e, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0xaa, 0x01, 0x0a, 0x0a, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4f, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4b, 0x65, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4b, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b,
	0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x9f, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x2c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x59, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa7, 0x07,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52,
	0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x63, 0x0a, 0x0b,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbf, 0x03, 0x0a, 0x08, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x12, 0x5c, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x63, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x48, 0x00,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x2c, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x1a, 0x36, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x1a, 0x28, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0xb0, 0x01, 0x0a, 0x0a,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x52, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xa5, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x59, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x85, 0x05, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x63, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x63, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9d, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65,
	0x79, 0x12, 0x5c, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x1a,
	0x2c, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x05, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x1a, 0xb0, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x52, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65,
	0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x22, 0xa5, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xe7, 0x0a, 0x0a, 0x11, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x3c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x78, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x32, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x34, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x35, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81,
	0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x35, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0xa1, 0x02, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2f,
	0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x78, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x53, 0x53,
	0x49, 0x4d, 0xaa, 0x02, 0x1e, 0x53, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x53, 0x6f, 0x6e, 0x72,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x1e, 0x53, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x5c, 0x53, 0x6f, 0x6e,
	0x72, 0x5c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5c, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2a, 0x53, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x5c, 0x53, 0x6f,
	0x6e, 0x72, 0x5c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5c, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x22, 0x53, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x3a, 0x3a, 0x53, 0x6f, 0x6e, 0x72,
	0x3a, 0x3a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescOnce sync.Once
	file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescData = file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDesc
)

func file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescGZIP() []byte {
	file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescOnce.Do(func() {
		file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescData)
	})
	return file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDescData
}

var file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_sonrhq_sonr_identity_module_v1_state_query_proto_goTypes = []interface{}{
	(*GetAccountRequest)(nil),                      // 0: sonrhq.sonr.identity.module.v1.GetAccountRequest
	(*GetAccountResponse)(nil),                     // 1: sonrhq.sonr.identity.module.v1.GetAccountResponse
	(*GetAccountByAddressRequest)(nil),             // 2: sonrhq.sonr.identity.module.v1.GetAccountByAddressRequest
	(*GetAccountByAddressResponse)(nil),            // 3: sonrhq.sonr.identity.module.v1.GetAccountByAddressResponse
	(*GetAccountByPublicKeyRequest)(nil),           // 4: sonrhq.sonr.identity.module.v1.GetAccountByPublicKeyRequest
	(*GetAccountByPublicKeyResponse)(nil),          // 5: sonrhq.sonr.identity.module.v1.GetAccountByPublicKeyResponse
	(*ListAccountRequest)(nil),                     // 6: sonrhq.sonr.identity.module.v1.ListAccountRequest
	(*ListAccountResponse)(nil),                    // 7: sonrhq.sonr.identity.module.v1.ListAccountResponse
	(*GetBlockchainRequest)(nil),                   // 8: sonrhq.sonr.identity.module.v1.GetBlockchainRequest
	(*GetBlockchainResponse)(nil),                  // 9: sonrhq.sonr.identity.module.v1.GetBlockchainResponse
	(*GetBlockchainByChainIdRequest)(nil),          // 10: sonrhq.sonr.identity.module.v1.GetBlockchainByChainIdRequest
	(*GetBlockchainByChainIdResponse)(nil),         // 11: sonrhq.sonr.identity.module.v1.GetBlockchainByChainIdResponse
	(*GetBlockchainByNameRequest)(nil),             // 12: sonrhq.sonr.identity.module.v1.GetBlockchainByNameRequest
	(*GetBlockchainByNameResponse)(nil),            // 13: sonrhq.sonr.identity.module.v1.GetBlockchainByNameResponse
	(*ListBlockchainRequest)(nil),                  // 14: sonrhq.sonr.identity.module.v1.ListBlockchainRequest
	(*ListBlockchainResponse)(nil),                 // 15: sonrhq.sonr.identity.module.v1.ListBlockchainResponse
	(*GetIdentifierRequest)(nil),                   // 16: sonrhq.sonr.identity.module.v1.GetIdentifierRequest
	(*GetIdentifierResponse)(nil),                  // 17: sonrhq.sonr.identity.module.v1.GetIdentifierResponse
	(*ListIdentifierRequest)(nil),                  // 18: sonrhq.sonr.identity.module.v1.ListIdentifierRequest
	(*ListIdentifierResponse)(nil),                 // 19: sonrhq.sonr.identity.module.v1.ListIdentifierResponse
	(*ListAccountRequest_IndexKey)(nil),            // 20: sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey
	(*ListAccountRequest_RangeQuery)(nil),          // 21: sonrhq.sonr.identity.module.v1.ListAccountRequest.RangeQuery
	(*ListAccountRequest_IndexKey_Sequence)(nil),   // 22: sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey.Sequence
	(*ListAccountRequest_IndexKey_Address)(nil),    // 23: sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey.Address
	(*ListAccountRequest_IndexKey_PublicKey)(nil),  // 24: sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey.PublicKey
	(*ListBlockchainRequest_IndexKey)(nil),         // 25: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey
	(*ListBlockchainRequest_RangeQuery)(nil),       // 26: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.RangeQuery
	(*ListBlockchainRequest_IndexKey_Index)(nil),   // 27: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey.Index
	(*ListBlockchainRequest_IndexKey_ChainId)(nil), // 28: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey.ChainId
	(*ListBlockchainRequest_IndexKey_Name)(nil),    // 29: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey.Name
	(*ListIdentifierRequest_IndexKey)(nil),         // 30: sonrhq.sonr.identity.module.v1.ListIdentifierRequest.IndexKey
	(*ListIdentifierRequest_RangeQuery)(nil),       // 31: sonrhq.sonr.identity.module.v1.ListIdentifierRequest.RangeQuery
	(*ListIdentifierRequest_IndexKey_Index)(nil),   // 32: sonrhq.sonr.identity.module.v1.ListIdentifierRequest.IndexKey.Index
	(*Account)(nil),                                // 33: sonrhq.sonr.identity.module.v1.Account
	(*v1beta1.PageRequest)(nil),                    // 34: cosmos.base.query.v1beta1.PageRequest
	(*v1beta1.PageResponse)(nil),                   // 35: cosmos.base.query.v1beta1.PageResponse
	(*Blockchain)(nil),                             // 36: sonrhq.sonr.identity.module.v1.Blockchain
	(*Identifier)(nil),                             // 37: sonrhq.sonr.identity.module.v1.Identifier
}
var file_sonrhq_sonr_identity_module_v1_state_query_proto_depIdxs = []int32{
	33, // 0: sonrhq.sonr.identity.module.v1.GetAccountResponse.value:type_name -> sonrhq.sonr.identity.module.v1.Account
	33, // 1: sonrhq.sonr.identity.module.v1.GetAccountByAddressResponse.value:type_name -> sonrhq.sonr.identity.module.v1.Account
	33, // 2: sonrhq.sonr.identity.module.v1.GetAccountByPublicKeyResponse.value:type_name -> sonrhq.sonr.identity.module.v1.Account
	20, // 3: sonrhq.sonr.identity.module.v1.ListAccountRequest.prefix_query:type_name -> sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey
	21, // 4: sonrhq.sonr.identity.module.v1.ListAccountRequest.range_query:type_name -> sonrhq.sonr.identity.module.v1.ListAccountRequest.RangeQuery
	34, // 5: sonrhq.sonr.identity.module.v1.ListAccountRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	33, // 6: sonrhq.sonr.identity.module.v1.ListAccountResponse.values:type_name -> sonrhq.sonr.identity.module.v1.Account
	35, // 7: sonrhq.sonr.identity.module.v1.ListAccountResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	36, // 8: sonrhq.sonr.identity.module.v1.GetBlockchainResponse.value:type_name -> sonrhq.sonr.identity.module.v1.Blockchain
	36, // 9: sonrhq.sonr.identity.module.v1.GetBlockchainByChainIdResponse.value:type_name -> sonrhq.sonr.identity.module.v1.Blockchain
	36, // 10: sonrhq.sonr.identity.module.v1.GetBlockchainByNameResponse.value:type_name -> sonrhq.sonr.identity.module.v1.Blockchain
	25, // 11: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.prefix_query:type_name -> sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey
	26, // 12: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.range_query:type_name -> sonrhq.sonr.identity.module.v1.ListBlockchainRequest.RangeQuery
	34, // 13: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	36, // 14: sonrhq.sonr.identity.module.v1.ListBlockchainResponse.values:type_name -> sonrhq.sonr.identity.module.v1.Blockchain
	35, // 15: sonrhq.sonr.identity.module.v1.ListBlockchainResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	37, // 16: sonrhq.sonr.identity.module.v1.GetIdentifierResponse.value:type_name -> sonrhq.sonr.identity.module.v1.Identifier
	30, // 17: sonrhq.sonr.identity.module.v1.ListIdentifierRequest.prefix_query:type_name -> sonrhq.sonr.identity.module.v1.ListIdentifierRequest.IndexKey
	31, // 18: sonrhq.sonr.identity.module.v1.ListIdentifierRequest.range_query:type_name -> sonrhq.sonr.identity.module.v1.ListIdentifierRequest.RangeQuery
	34, // 19: sonrhq.sonr.identity.module.v1.ListIdentifierRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	37, // 20: sonrhq.sonr.identity.module.v1.ListIdentifierResponse.values:type_name -> sonrhq.sonr.identity.module.v1.Identifier
	35, // 21: sonrhq.sonr.identity.module.v1.ListIdentifierResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	22, // 22: sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey.sequence:type_name -> sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey.Sequence
	23, // 23: sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey.address:type_name -> sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey.Address
	24, // 24: sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey.public_key:type_name -> sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey.PublicKey
	20, // 25: sonrhq.sonr.identity.module.v1.ListAccountRequest.RangeQuery.from:type_name -> sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey
	20, // 26: sonrhq.sonr.identity.module.v1.ListAccountRequest.RangeQuery.to:type_name -> sonrhq.sonr.identity.module.v1.ListAccountRequest.IndexKey
	27, // 27: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey.index:type_name -> sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey.Index
	28, // 28: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey.chain_id:type_name -> sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey.ChainId
	29, // 29: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey.name:type_name -> sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey.Name
	25, // 30: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.RangeQuery.from:type_name -> sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey
	25, // 31: sonrhq.sonr.identity.module.v1.ListBlockchainRequest.RangeQuery.to:type_name -> sonrhq.sonr.identity.module.v1.ListBlockchainRequest.IndexKey
	32, // 32: sonrhq.sonr.identity.module.v1.ListIdentifierRequest.IndexKey.index:type_name -> sonrhq.sonr.identity.module.v1.ListIdentifierRequest.IndexKey.Index
	30, // 33: sonrhq.sonr.identity.module.v1.ListIdentifierRequest.RangeQuery.from:type_name -> sonrhq.sonr.identity.module.v1.ListIdentifierRequest.IndexKey
	30, // 34: sonrhq.sonr.identity.module.v1.ListIdentifierRequest.RangeQuery.to:type_name -> sonrhq.sonr.identity.module.v1.ListIdentifierRequest.IndexKey
	0,  // 35: sonrhq.sonr.identity.module.v1.StateQueryService.GetAccount:input_type -> sonrhq.sonr.identity.module.v1.GetAccountRequest
	2,  // 36: sonrhq.sonr.identity.module.v1.StateQueryService.GetAccountByAddress:input_type -> sonrhq.sonr.identity.module.v1.GetAccountByAddressRequest
	4,  // 37: sonrhq.sonr.identity.module.v1.StateQueryService.GetAccountByPublicKey:input_type -> sonrhq.sonr.identity.module.v1.GetAccountByPublicKeyRequest
	6,  // 38: sonrhq.sonr.identity.module.v1.StateQueryService.ListAccount:input_type -> sonrhq.sonr.identity.module.v1.ListAccountRequest
	8,  // 39: sonrhq.sonr.identity.module.v1.StateQueryService.GetBlockchain:input_type -> sonrhq.sonr.identity.module.v1.GetBlockchainRequest
	10, // 40: sonrhq.sonr.identity.module.v1.StateQueryService.GetBlockchainByChainId:input_type -> sonrhq.sonr.identity.module.v1.GetBlockchainByChainIdRequest
	12, // 41: sonrhq.sonr.identity.module.v1.StateQueryService.GetBlockchainByName:input_type -> sonrhq.sonr.identity.module.v1.GetBlockchainByNameRequest
	14, // 42: sonrhq.sonr.identity.module.v1.StateQueryService.ListBlockchain:input_type -> sonrhq.sonr.identity.module.v1.ListBlockchainRequest
	16, // 43: sonrhq.sonr.identity.module.v1.StateQueryService.GetIdentifier:input_type -> sonrhq.sonr.identity.module.v1.GetIdentifierRequest
	18, // 44: sonrhq.sonr.identity.module.v1.StateQueryService.ListIdentifier:input_type -> sonrhq.sonr.identity.module.v1.ListIdentifierRequest
	1,  // 45: sonrhq.sonr.identity.module.v1.StateQueryService.GetAccount:output_type -> sonrhq.sonr.identity.module.v1.GetAccountResponse
	3,  // 46: sonrhq.sonr.identity.module.v1.StateQueryService.GetAccountByAddress:output_type -> sonrhq.sonr.identity.module.v1.GetAccountByAddressResponse
	5,  // 47: sonrhq.sonr.identity.module.v1.StateQueryService.GetAccountByPublicKey:output_type -> sonrhq.sonr.identity.module.v1.GetAccountByPublicKeyResponse
	7,  // 48: sonrhq.sonr.identity.module.v1.StateQueryService.ListAccount:output_type -> sonrhq.sonr.identity.module.v1.ListAccountResponse
	9,  // 49: sonrhq.sonr.identity.module.v1.StateQueryService.GetBlockchain:output_type -> sonrhq.sonr.identity.module.v1.GetBlockchainResponse
	11, // 50: sonrhq.sonr.identity.module.v1.StateQueryService.GetBlockchainByChainId:output_type -> sonrhq.sonr.identity.module.v1.GetBlockchainByChainIdResponse
	13, // 51: sonrhq.sonr.identity.module.v1.StateQueryService.GetBlockchainByName:output_type -> sonrhq.sonr.identity.module.v1.GetBlockchainByNameResponse
	15, // 52: sonrhq.sonr.identity.module.v1.StateQueryService.ListBlockchain:output_type -> sonrhq.sonr.identity.module.v1.ListBlockchainResponse
	17, // 53: sonrhq.sonr.identity.module.v1.StateQueryService.GetIdentifier:output_type -> sonrhq.sonr.identity.module.v1.GetIdentifierResponse
	19, // 54: sonrhq.sonr.identity.module.v1.StateQueryService.ListIdentifier:output_type -> sonrhq.sonr.identity.module.v1.ListIdentifierResponse
	45, // [45:55] is the sub-list for method output_type
	35, // [35:45] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_sonrhq_sonr_identity_module_v1_state_query_proto_init() }
func file_sonrhq_sonr_identity_module_v1_state_query_proto_init() {
	if File_sonrhq_sonr_identity_module_v1_state_query_proto != nil {
		return
	}
	file_sonrhq_sonr_identity_module_v1_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainByChainIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainByChainIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdentifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdentifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_IndexKey_Sequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_IndexKey_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_IndexKey_PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_IndexKey_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_IndexKey_ChainId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_IndexKey_Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdentifierRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdentifierRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdentifierRequest_IndexKey_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ListAccountRequest_PrefixQuery)(nil),
		(*ListAccountRequest_RangeQuery_)(nil),
	}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ListBlockchainRequest_PrefixQuery)(nil),
		(*ListBlockchainRequest_RangeQuery_)(nil),
	}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*ListIdentifierRequest_PrefixQuery)(nil),
		(*ListIdentifierRequest_RangeQuery_)(nil),
	}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*ListAccountRequest_IndexKey_Sequence_)(nil),
		(*ListAccountRequest_IndexKey_Address_)(nil),
		(*ListAccountRequest_IndexKey_PublicKey_)(nil),
	}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*ListBlockchainRequest_IndexKey_Index_)(nil),
		(*ListBlockchainRequest_IndexKey_ChainId_)(nil),
		(*ListBlockchainRequest_IndexKey_Name_)(nil),
	}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*ListIdentifierRequest_IndexKey_Index_)(nil),
	}
	file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes[32].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sonrhq_sonr_identity_module_v1_state_query_proto_goTypes,
		DependencyIndexes: file_sonrhq_sonr_identity_module_v1_state_query_proto_depIdxs,
		MessageInfos:      file_sonrhq_sonr_identity_module_v1_state_query_proto_msgTypes,
	}.Build()
	File_sonrhq_sonr_identity_module_v1_state_query_proto = out.File
	file_sonrhq_sonr_identity_module_v1_state_query_proto_rawDesc = nil
	file_sonrhq_sonr_identity_module_v1_state_query_proto_goTypes = nil
	file_sonrhq_sonr_identity_module_v1_state_query_proto_depIdxs = nil
}
