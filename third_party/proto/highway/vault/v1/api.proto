syntax = "proto3";

// Package Motor is used for defining a Motor node and its properties.
package sonrhq.highway.vault.v1;
option go_package = "github.com/sonr-hq/sonr/third_party/types/highway/vault/v1";

message KeygenRequest {
    bytes id = 1;
}

message KeygenResponse {
    bytes id = 1;
}

message RefreshRequest {
    bytes id = 1;
}

message RefreshResponse {
    bytes id = 1;
}

message SignRequest {
    bytes id = 1;
    bytes data = 2;
}

message SignResponse {
    bytes id = 1;
    bytes signature = 2;
}

message DeriveRequest {
    bytes id = 1;
    bytes data = 2;
}

message DeriveResponse {
    bytes id = 1;
    bytes derived = 2;
}

service Vault {
    // Keygen generates a new keypair and returns the public key.
    rpc Keygen(KeygenRequest) returns (KeygenResponse);

    // Refresh refreshes the keypair and returns the public key.
    rpc Refresh(RefreshRequest) returns (RefreshResponse);

    // Sign signs the data with the private key and returns the signature.
    rpc Sign(SignRequest) returns (SignResponse);

    // Derive derives a new key from the private key and returns the public key.
    rpc Derive(DeriveRequest) returns (DeriveResponse);
}
