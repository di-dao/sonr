// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/common/core.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Internet Connection Type
type Connection int32

const (
	Connection_OFFLINE  Connection = 0 // No Internet Connection
	Connection_WIFI     Connection = 1 // Wifi Connection
	Connection_MOBILE   Connection = 2 // Mobile Connection
	Connection_ETHERNET Connection = 3 // Ethernet Connection
)

// Enum value maps for Connection.
var (
	Connection_name = map[int32]string{
		0: "OFFLINE",
		1: "WIFI",
		2: "MOBILE",
		3: "ETHERNET",
	}
	Connection_value = map[string]int32{
		"OFFLINE":  0,
		"WIFI":     1,
		"MOBILE":   2,
		"ETHERNET": 3,
	}
)

func (x Connection) Enum() *Connection {
	p := new(Connection)
	*p = x
	return p
}

func (x Connection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Connection) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_core_proto_enumTypes[0].Descriptor()
}

func (Connection) Type() protoreflect.EnumType {
	return &file_proto_common_core_proto_enumTypes[0]
}

func (x Connection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Connection.Descriptor instead.
func (Connection) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{0}
}

// Environment Type Configuration
type Environment int32

const (
	Environment_DEVELOPMENT Environment = 0 // Development Environment
	Environment_PRODUCTION  Environment = 1 // Production Environment
)

// Enum value maps for Environment.
var (
	Environment_name = map[int32]string{
		0: "DEVELOPMENT",
		1: "PRODUCTION",
	}
	Environment_value = map[string]int32{
		"DEVELOPMENT": 0,
		"PRODUCTION":  1,
	}
)

func (x Environment) Enum() *Environment {
	p := new(Environment)
	*p = x
	return p
}

func (x Environment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Environment) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_core_proto_enumTypes[1].Descriptor()
}

func (Environment) Type() protoreflect.EnumType {
	return &file_proto_common_core_proto_enumTypes[1]
}

func (x Environment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Environment.Descriptor instead.
func (Environment) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{1}
}

type MIME_Type int32

const (
	MIME_OTHER    MIME_Type = 0 // Other File Type - If cannot derive from Subtype
	MIME_AUDIO    MIME_Type = 1 // Sound, Audio Files
	MIME_DOCUMENT MIME_Type = 2 // Document Files - PDF, Word, Excel, etc.
	MIME_IMAGE    MIME_Type = 3 // Image Files
	MIME_TEXT     MIME_Type = 4 // Text Based Files
	MIME_VIDEO    MIME_Type = 5 // Video Files
	MIME_URL      MIME_Type = 6 // URL Links
)

// Enum value maps for MIME_Type.
var (
	MIME_Type_name = map[int32]string{
		0: "OTHER",
		1: "AUDIO",
		2: "DOCUMENT",
		3: "IMAGE",
		4: "TEXT",
		5: "VIDEO",
		6: "URL",
	}
	MIME_Type_value = map[string]int32{
		"OTHER":    0,
		"AUDIO":    1,
		"DOCUMENT": 2,
		"IMAGE":    3,
		"TEXT":     4,
		"VIDEO":    5,
		"URL":      6,
	}
)

func (x MIME_Type) Enum() *MIME_Type {
	p := new(MIME_Type)
	*p = x
	return p
}

func (x MIME_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MIME_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_core_proto_enumTypes[2].Descriptor()
}

func (MIME_Type) Type() protoreflect.EnumType {
	return &file_proto_common_core_proto_enumTypes[2]
}

func (x MIME_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MIME_Type.Descriptor instead.
func (MIME_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{2, 0}
}

// Peers Active Status
type Peer_Status int32

const (
	Peer_OFFLINE Peer_Status = 0 // Offline - Not Online or Not a Full Node
	Peer_ONLINE  Peer_Status = 1 // Online - Full Node Available
	Peer_AWAY    Peer_Status = 2 // Away - Not Online, but has a full node
	Peer_BUSY    Peer_Status = 3 // Busy - Online, but busy with Transfer
)

// Enum value maps for Peer_Status.
var (
	Peer_Status_name = map[int32]string{
		0: "OFFLINE",
		1: "ONLINE",
		2: "AWAY",
		3: "BUSY",
	}
	Peer_Status_value = map[string]int32{
		"OFFLINE": 0,
		"ONLINE":  1,
		"AWAY":    2,
		"BUSY":    3,
	}
)

func (x Peer_Status) Enum() *Peer_Status {
	p := new(Peer_Status)
	*p = x
	return p
}

func (x Peer_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Peer_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_core_proto_enumTypes[3].Descriptor()
}

func (Peer_Status) Type() protoreflect.EnumType {
	return &file_proto_common_core_proto_enumTypes[3]
}

func (x Peer_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Peer_Status.Descriptor instead.
func (Peer_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{3, 0}
}

// Social Type
type Social_Media int32

const (
	Social_OTHER     Social_Media = 0 // Other Social Network
	Social_FACEBOOK  Social_Media = 1 // Facebook
	Social_TWITTER   Social_Media = 2 // Twitter
	Social_MEDIUM    Social_Media = 3 // Medium
	Social_TIKTOK    Social_Media = 4 // TikTok
	Social_INSTAGRAM Social_Media = 5 // Instagram
	Social_YOUTUBE   Social_Media = 6 // YouTube
	Social_GITHUB    Social_Media = 7 // GitHub
	Social_SNAPCHAT  Social_Media = 8 // Snapchat
	Social_SPOTIFY   Social_Media = 9 // Spotify
)

// Enum value maps for Social_Media.
var (
	Social_Media_name = map[int32]string{
		0: "OTHER",
		1: "FACEBOOK",
		2: "TWITTER",
		3: "MEDIUM",
		4: "TIKTOK",
		5: "INSTAGRAM",
		6: "YOUTUBE",
		7: "GITHUB",
		8: "SNAPCHAT",
		9: "SPOTIFY",
	}
	Social_Media_value = map[string]int32{
		"OTHER":     0,
		"FACEBOOK":  1,
		"TWITTER":   2,
		"MEDIUM":    3,
		"TIKTOK":    4,
		"INSTAGRAM": 5,
		"YOUTUBE":   6,
		"GITHUB":    7,
		"SNAPCHAT":  8,
		"SPOTIFY":   9,
	}
)

func (x Social_Media) Enum() *Social_Media {
	p := new(Social_Media)
	*p = x
	return p
}

func (x Social_Media) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Social_Media) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_core_proto_enumTypes[4].Descriptor()
}

func (Social_Media) Type() protoreflect.EnumType {
	return &file_proto_common_core_proto_enumTypes[4]
}

func (x Social_Media) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Social_Media.Descriptor instead.
func (Social_Media) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{5, 0}
}

// Location from GeoIP and OLC information
type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Location Latitude
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// Location Longitude
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// Location Placemark Information - Generated
	Placemark *Location_Placemark `protobuf:"bytes,3,opt,name=placemark,proto3" json:"placemark,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetPlacemark() *Location_Placemark {
	if x != nil {
		return x.Placemark
	}
	return nil
}

// Shared Metadata for Messages on all Protocols
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix timestamp
	NodeId    string `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`        // Node ID
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`  // Signature of the message
	PublicKey []byte `protobuf:"bytes,4,opt,name=publicKey,proto3" json:"publicKey,omitempty"`  // Public Key of the message sender
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Metadata) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Metadata) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Metadata) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Standard MIME with Additional Extensions
type MIME struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    MIME_Type `protobuf:"varint,1,opt,name=type,proto3,enum=sonr.core.MIME_Type" json:"type,omitempty"` // Type of File
	Subtype string    `protobuf:"bytes,2,opt,name=subtype,proto3" json:"subtype,omitempty"`                     // Extension of File
	Value   string    `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                         // Type/Subtype i.e. (image/jpeg)
}

func (x *MIME) Reset() {
	*x = MIME{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MIME) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MIME) ProtoMessage() {}

func (x *MIME) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MIME.ProtoReflect.Descriptor instead.
func (*MIME) Descriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{2}
}

func (x *MIME) GetType() MIME_Type {
	if x != nil {
		return x.Type
	}
	return MIME_OTHER
}

func (x *MIME) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *MIME) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Basic Info Sent to Peers to Establish Connections
type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SName     string       `protobuf:"bytes,1,opt,name=sName,proto3" json:"sName,omitempty"`                               // User Sonr Domain
	Status    Peer_Status  `protobuf:"varint,2,opt,name=status,proto3,enum=sonr.core.Peer_Status" json:"status,omitempty"` // Peer Status
	Device    *Peer_Device `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`                             // Peer Device Info
	Profile   *Profile     `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty"`                           // Peers General Information
	PublicKey []byte       `protobuf:"bytes,5,opt,name=publicKey,proto3" json:"publicKey,omitempty"`                       // Public Key of the Peer
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{3}
}

func (x *Peer) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *Peer) GetStatus() Peer_Status {
	if x != nil {
		return x.Status
	}
	return Peer_OFFLINE
}

func (x *Peer) GetDevice() *Peer_Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *Peer) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Peer) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// General Information about Peer passed during Authentication
type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SName     string    `protobuf:"bytes,1,opt,name=sName,proto3" json:"sName,omitempty"`         // Sonr Based Username
	FirstName string    `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"` // General Info
	LastName  string    `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`   // General Info
	Picture   []byte    `protobuf:"bytes,4,opt,name=picture,proto3" json:"picture,omitempty"`     // Profile Picture
	Bio       string    `protobuf:"bytes,6,opt,name=bio,proto3" json:"bio,omitempty"`             // User Biography
	Socials   []*Social `protobuf:"bytes,7,rep,name=socials,proto3" json:"socials,omitempty"`     // Social Media
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_core_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_core_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{4}
}

func (x *Profile) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *Profile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Profile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Profile) GetPicture() []byte {
	if x != nil {
		return x.Picture
	}
	return nil
}

func (x *Profile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Profile) GetSocials() []*Social {
	if x != nil {
		return x.Socials
	}
	return nil
}

// Social Media Item Information
type Social struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid    bool         `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`                             // Whether this is a valid Social
	Username string       `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                        // Username of Social
	Url      string       `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                                  // URL to Social
	Picture  []byte       `protobuf:"bytes,4,opt,name=picture,proto3" json:"picture,omitempty"`                          // Profile Picture
	Media    Social_Media `protobuf:"varint,5,opt,name=media,proto3,enum=sonr.core.Social_Media" json:"media,omitempty"` // Type of Social
}

func (x *Social) Reset() {
	*x = Social{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_core_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Social) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Social) ProtoMessage() {}

func (x *Social) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_core_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Social.ProtoReflect.Descriptor instead.
func (*Social) Descriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{5}
}

func (x *Social) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *Social) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Social) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Social) GetPicture() []byte {
	if x != nil {
		return x.Picture
	}
	return nil
}

func (x *Social) GetMedia() Social_Media {
	if x != nil {
		return x.Media
	}
	return Social_OTHER
}

// Contains detailed placemark information.
type Location_Placemark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name associated with the placemark.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The street associated with the placemark.
	Street string `protobuf:"bytes,2,opt,name=street,proto3" json:"street,omitempty"`
	// The abbreviated country name, according to the two letter (alpha-2) [ISO
	// standard](https://www.iso.org/iso-3166-country-codes.html).
	IsoCountryCode string `protobuf:"bytes,3,opt,name=isoCountryCode,proto3" json:"isoCountryCode,omitempty"`
	// The name of the country associated with the placemark.
	Country string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	// The postal code associated with the placemark.
	PostalCode string `protobuf:"bytes,5,opt,name=postalCode,proto3" json:"postalCode,omitempty"`
	// The name of the state or province associated with the placemark.
	AdministrativeArea string `protobuf:"bytes,6,opt,name=administrativeArea,proto3" json:"administrativeArea,omitempty"`
	// Additional administrative area information for the placemark.
	SubAdministrativeArea string `protobuf:"bytes,7,opt,name=subAdministrativeArea,proto3" json:"subAdministrativeArea,omitempty"`
	// The name of the city associated with the placemark.
	Locality string `protobuf:"bytes,8,opt,name=locality,proto3" json:"locality,omitempty"`
	// Additional city-level information for the placemark.
	SubLocality string `protobuf:"bytes,9,opt,name=subLocality,proto3" json:"subLocality,omitempty"`
	// The street address associated with the placemark.
	Thoroughfare string `protobuf:"bytes,10,opt,name=thoroughfare,proto3" json:"thoroughfare,omitempty"`
	// Additional street address information for the placemark.
	SubThoroughfare string `protobuf:"bytes,11,opt,name=subThoroughfare,proto3" json:"subThoroughfare,omitempty"`
}

func (x *Location_Placemark) Reset() {
	*x = Location_Placemark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_core_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location_Placemark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location_Placemark) ProtoMessage() {}

func (x *Location_Placemark) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_core_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location_Placemark.ProtoReflect.Descriptor instead.
func (*Location_Placemark) Descriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Location_Placemark) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Location_Placemark) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Location_Placemark) GetIsoCountryCode() string {
	if x != nil {
		return x.IsoCountryCode
	}
	return ""
}

func (x *Location_Placemark) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Location_Placemark) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Location_Placemark) GetAdministrativeArea() string {
	if x != nil {
		return x.AdministrativeArea
	}
	return ""
}

func (x *Location_Placemark) GetSubAdministrativeArea() string {
	if x != nil {
		return x.SubAdministrativeArea
	}
	return ""
}

func (x *Location_Placemark) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

func (x *Location_Placemark) GetSubLocality() string {
	if x != nil {
		return x.SubLocality
	}
	return ""
}

func (x *Location_Placemark) GetThoroughfare() string {
	if x != nil {
		return x.Thoroughfare
	}
	return ""
}

func (x *Location_Placemark) GetSubThoroughfare() string {
	if x != nil {
		return x.SubThoroughfare
	}
	return ""
}

// Peer Info for Device
type Peer_Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             // Peer Device ID
	HostName string `protobuf:"bytes,2,opt,name=hostName,proto3" json:"hostName,omitempty"` // Peer Host Name
	Os       string `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`             // Peer Operating System
	Arch     string `protobuf:"bytes,4,opt,name=arch,proto3" json:"arch,omitempty"`         // Peer Architecture
	Model    string `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`       // Peers Device Model
}

func (x *Peer_Device) Reset() {
	*x = Peer_Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_core_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer_Device) ProtoMessage() {}

func (x *Peer_Device) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_core_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer_Device.ProtoReflect.Descriptor instead.
func (*Peer_Device) Descriptor() ([]byte, []int) {
	return file_proto_common_core_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Peer_Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Peer_Device) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *Peer_Device) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Peer_Device) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Peer_Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

var File_proto_common_core_proto protoreflect.FileDescriptor

var file_proto_common_core_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0x8f, 0x04, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x1a, 0x8b, 0x03, 0x0a, 0x09, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x6f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x72, 0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x72, 0x65, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x75, 0x62, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x6f, 0x72,
	0x6f, 0x75, 0x67, 0x68, 0x66, 0x61, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x68, 0x6f, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x66, 0x61, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x54, 0x68, 0x6f, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x66, 0x61, 0x72, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x54, 0x68, 0x6f, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x66, 0x61, 0x72, 0x65, 0x22, 0x7c, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x22, 0xb5, 0x01, 0x0a, 0x04, 0x4d, 0x49, 0x4d, 0x45, 0x12, 0x28, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x49, 0x4d, 0x45, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x53, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55,
	0x44, 0x49, 0x4f, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x10, 0x06, 0x22, 0xef, 0x02, 0x0a,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0x6e, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x57,
	0x41, 0x59, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x55, 0x53, 0x59, 0x10, 0x03, 0x22, 0xb2,
	0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x07, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x06, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x05,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22, 0x88, 0x01, 0x0a, 0x05,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x54, 0x57, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d,
	0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x49, 0x4b, 0x54, 0x4f,
	0x4b, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x47, 0x52, 0x41, 0x4d,
	0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x59, 0x4f, 0x55, 0x54, 0x55, 0x42, 0x45, 0x10, 0x06, 0x12,
	0x0a, 0x0a, 0x06, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x53,
	0x4e, 0x41, 0x50, 0x43, 0x48, 0x41, 0x54, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x50, 0x4f,
	0x54, 0x49, 0x46, 0x59, 0x10, 0x09, 0x2a, 0x3d, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x49, 0x46, 0x49, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d,
	0x4f, 0x42, 0x49, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x54, 0x48, 0x45, 0x52,
	0x4e, 0x45, 0x54, 0x10, 0x03, 0x2a, 0x2e, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_common_core_proto_rawDescOnce sync.Once
	file_proto_common_core_proto_rawDescData = file_proto_common_core_proto_rawDesc
)

func file_proto_common_core_proto_rawDescGZIP() []byte {
	file_proto_common_core_proto_rawDescOnce.Do(func() {
		file_proto_common_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_common_core_proto_rawDescData)
	})
	return file_proto_common_core_proto_rawDescData
}

var file_proto_common_core_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_common_core_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_common_core_proto_goTypes = []interface{}{
	(Connection)(0),            // 0: sonr.core.Connection
	(Environment)(0),           // 1: sonr.core.Environment
	(MIME_Type)(0),             // 2: sonr.core.MIME.Type
	(Peer_Status)(0),           // 3: sonr.core.Peer.Status
	(Social_Media)(0),          // 4: sonr.core.Social.Media
	(*Location)(nil),           // 5: sonr.core.Location
	(*Metadata)(nil),           // 6: sonr.core.Metadata
	(*MIME)(nil),               // 7: sonr.core.MIME
	(*Peer)(nil),               // 8: sonr.core.Peer
	(*Profile)(nil),            // 9: sonr.core.Profile
	(*Social)(nil),             // 10: sonr.core.Social
	(*Location_Placemark)(nil), // 11: sonr.core.Location.Placemark
	(*Peer_Device)(nil),        // 12: sonr.core.Peer.Device
}
var file_proto_common_core_proto_depIdxs = []int32{
	11, // 0: sonr.core.Location.placemark:type_name -> sonr.core.Location.Placemark
	2,  // 1: sonr.core.MIME.type:type_name -> sonr.core.MIME.Type
	3,  // 2: sonr.core.Peer.status:type_name -> sonr.core.Peer.Status
	12, // 3: sonr.core.Peer.device:type_name -> sonr.core.Peer.Device
	9,  // 4: sonr.core.Peer.profile:type_name -> sonr.core.Profile
	10, // 5: sonr.core.Profile.socials:type_name -> sonr.core.Social
	4,  // 6: sonr.core.Social.media:type_name -> sonr.core.Social.Media
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_common_core_proto_init() }
func file_proto_common_core_proto_init() {
	if File_proto_common_core_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_common_core_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_core_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_core_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MIME); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_core_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_core_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_core_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Social); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_core_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location_Placemark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_core_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer_Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_common_core_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_common_core_proto_goTypes,
		DependencyIndexes: file_proto_common_core_proto_depIdxs,
		EnumInfos:         file_proto_common_core_proto_enumTypes,
		MessageInfos:      file_proto_common_core_proto_msgTypes,
	}.Build()
	File_proto_common_core_proto = out.File
	file_proto_common_core_proto_rawDesc = nil
	file_proto_common_core_proto_goTypes = nil
	file_proto_common_core_proto_depIdxs = nil
}
