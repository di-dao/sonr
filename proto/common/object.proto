syntax = "proto3";

// Package common defines commonly used types agnostic to the node role on the Sonr network.
package common;
option go_package = "github.com/sonr-io/core/common";

// Bucket is a collection of objects.
message Bucket {
    // Label is human-readable name of the bucket.
    string label = 1;

    // Description is a human-readable description of the bucket.
    string description = 2;

    // Type is the kind of bucket for either App specific or User specific data.
    BucketType type = 3;

    // Did is the identifier of the bucket.
    string did = 4;

    // Objects are stored in a tree structure.
    repeated ObjectDoc objects = 5;
}

// BucketType is the type of a bucket.
enum BucketType {
    // BucketTypeUnspecified is the default value.
    BUCKET_TYPE_UNSPECIFIED = 0;

    // BucketTypeApp is an App specific bucket. For Assets regarding the service.
    BUCKET_TYPE_APP = 1;

    // BucketTypeUser is a User specific bucket. For any remote user data that is required
    // to be stored in the Network.
    BUCKET_TYPE_USER = 2;
}

// ObjectDoc is a document for an Object stored in the graph.
message ObjectDoc {
    // Did is the identifier of the object.
    string did = 1;

    // Service is the service that created the object.
    string service = 2;

    // Tags are the tags associated with the object.
    repeated string tags = 3;

    // Fields are the fields associated with the object.
    map<string, ObjectField> fields = 4;
}

// ObjectField is a field of an Object.
message ObjectField {
    // Name is the name of the field
    string name = 1;

    // Type is the type of the field
    ObjectFieldType type = 2;

    // Value is the value of the field
    oneof value {
      // String is the value of the field
      string string_value = 3;

      // Int is the value of the field
      int32 int_value = 4;

      // Float is the value of the field
      double float_value = 5;

      // Bool is the value of the field
      bool bool_value = 6;

      // Date is defined by milliseconds since epoch.
      int64 date_value = 7;

      // Blob is the value of the field
      bytes blob_value = 8;

      // Reference is the value of the field
      string reference_value = 9;
    }

    // Metadata is additional info about the field
    map<string, string> metadata = 10;
}

 // ObjectFieldType is the type of the field
enum ObjectFieldType {
    // ObjectFieldTypeUnspecified is the default value
    OBJECT_FIELD_TYPE_UNSPECIFIED = 0;

    // ObjectFieldTypeString is a string or text field
    OBJECT_FIELD_TYPE_STRING = 1;

    // ObjectFieldTypeInt is an integer
    OBJECT_FIELD_TYPE_INT = 2;

    // ObjectFieldTypeFloat is a floating point number
    OBJECT_FIELD_TYPE_FLOAT = 3;

    // ObjectFieldTypeBool is a boolean
    OBJECT_FIELD_TYPE_BOOL = 4;

    // ObjectFieldTypeDateTime is a datetime
    OBJECT_FIELD_TYPE_DATETIME = 5;

    // ObjectFieldTypeBlob is a blob which is a byte array
    OBJECT_FIELD_TYPE_BLOB = 6;

    // ObjectFieldTypeReference is a reference to another object
    OBJECT_FIELD_TYPE_REFERENCE = 7;
}
