info:
  contact: {}
paths:
  /createAccount/{coinType}:
    post:
      consumes:
      - application/json
      description: Creates a new account with a given coin type and name.
      parameters:
      - description: Coin Type Name
        in: path
        name: coinType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Account Info
          schema:
            additionalProperties: true
            type: object
      summary: Create an account
  /currentUser:
    get:
      consumes:
      - application/json
      description: Returns the current user's details.
      produces:
      - application/json
      responses:
        "200":
          description: JWT Token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Missing JWT
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: No JWT cookie found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Current user's details
  /exportWallet:
    get:
      consumes:
      - application/json
      description: Returns the encoded Sonr Wallet structure with an encrypted keyshare.
      produces:
      - application/json
      responses:
        "200":
          description: Wallet Export Info
          schema:
            additionalProperties: true
            type: object
      summary: Export Wallet
  /getAccount/{did}:
    get:
      consumes:
      - application/json
      description: Returns an account's details given its DID.
      parameters:
      - description: DID of Account
        in: path
        name: did
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Account Info
          schema:
            additionalProperties: true
            type: object
      summary: Get an account's details
  /getBlockHeight:
    get:
      consumes:
      - application/json
      description: Returns the current block height.
      produces:
      - application/json
      responses:
        "200":
          description: Block Height
          schema:
            additionalProperties:
              type: integer
            type: object
      summary: Current block height
  /getCredentialAssertionParams/{origin}/{alias}:
    get:
      consumes:
      - application/json
      description: Returns the credential assertion options to start account login.
      parameters:
      - description: Origin
        in: path
        name: origin
        required: true
        type: string
      - description: Alias
        in: path
        name: alias
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get credential assertion parameters
  /getCredentialAttestationParams/{origin}/{alias}:
    get:
      consumes:
      - application/json
      description: Returns the credential creation options to start account registration.
      parameters:
      - description: Origin
        in: path
        name: origin
        required: true
        type: string
      - description: Alias
        in: path
        name: alias
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get credential attestation parameters
  /getEmailAssertionParams:
    get:
      consumes:
      - application/json
      description: Returns a JWT for the email controller. After it is confirmed,
        the user will claim one of their unclaimed Keyshares.
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get email assertion parameters
  /getHealth:
    get:
      consumes:
      - application/json
      description: Returns the health of the service.
      produces:
      - application/json
      responses:
        "200":
          description: Status message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health of the service
  /getValidatorSet:
    get:
      consumes:
      - application/json
      description: Returns the current validator set.
      produces:
      - application/json
      responses:
        "200":
          description: Validators
          schema:
            additionalProperties:
              items:
                type: string
              type: array
            type: object
      summary: Current validator set
  /listAccounts:
    get:
      consumes:
      - application/json
      description: Returns a list of wallet accounts given a coin type.
      produces:
      - application/json
      responses:
        "200":
          description: Accounts List
          schema:
            additionalProperties: true
            type: object
      summary: List wallet accounts
  /registerControllerIdentity/{origin}/{alias}:
    post:
      consumes:
      - application/json
      description: Registers a credential for a given Unclaimed Wallet.
      parameters:
      - description: Origin
        in: path
        name: origin
        required: true
        type: string
      - description: Alias
        in: path
        name: alias
        required: true
        type: string
      - description: Attestation
        in: query
        name: attestation
        required: true
        type: string
      - description: Challenge
        in: query
        name: challenge
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "412":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register controller identity
  /registerEscrowIdentity:
    get:
      consumes:
      - application/json
      description: Returns the credential assertion options to start account login.
      parameters:
      - description: Amount
        in: query
        name: amount
        required: true
        type: string
      - description: Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register escrow identity
  /signInWithCredential/{origin}/{alias}:
    post:
      consumes:
      - application/json
      description: Verifies a credential for a given account and returns the JWT Keyshare.
      parameters:
      - description: Origin
        in: path
        name: origin
        required: true
        type: string
      - description: Alias
        in: path
        name: alias
        required: true
        type: string
      - description: Assertion
        in: query
        name: assertion
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            additionalProperties: true
            type: object
        "441":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "442":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "443":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "444":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
        "445":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Sign in with credential
  /signInWithEmail:
    post:
      consumes:
      - application/json
      description: Registers a DIDDocument for a given email authorized jwt.
      parameters:
      - description: JWT
        in: query
        name: jwt
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Sign in with email
  /signWithAccount/{did}:
    post:
      consumes:
      - application/json
      description: Signs a message with an account given its DID. Requires the JWT
        of their Keyshare.
      parameters:
      - description: DID of Account
        in: path
        name: did
        required: true
        type: string
      - description: Message to Sign
        in: query
        name: msg
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Signature Info
          schema:
            additionalProperties: true
            type: object
      summary: Sign a message with an account
  /verifyWithAccount/{did}:
    post:
      consumes:
      - application/json
      description: Verifies a signature with an account.
      parameters:
      - description: DID of Account
        in: path
        name: did
        required: true
        type: string
      - description: Message
        in: query
        name: msg
        required: true
        type: string
      - description: Signature
        in: query
        name: sig
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Verification Result
          schema:
            additionalProperties: true
            type: object
      summary: Verify a signature with an account
swagger: "2.0"
