syntax = "proto3";

package core.domain;

import "core/domain/params.proto";
import "core/domain/record.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/sonr-io/core/x/domain/types";

// Query defines the gRPC querier service.
// It provides methods to query parameters and UsernameRecords.
service Query {
  // Params queries the parameters of the module.
  // It returns the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/core/domain/params";
  }

  // UsernameRecord queries a list of UsernameRecords items by index.
  // It returns a list of UsernameRecords items.
  rpc UsernameRecord(QueryGetUsernameRecordsRequest)
      returns (QueryGetUsernameRecordsResponse) {
    option (google.api.http).get = "/core/domain/username/{index}";
  }

  // UsernameRecordAll queries all UsernameRecords items.
  // It returns all UsernameRecords items.
  rpc UsernameRecordAll(QueryAllUsernameRecordsRequest)
      returns (QueryAllUsernameRecordsResponse) {
    option (google.api.http).get = "/core/domain/username";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
// It holds all the parameters of this module.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryGetUsernameRecordsRequest is the request type for the
// Query/UsernameRecord RPC method. It contains the index of the UsernameRecords
// to be queried.
message QueryGetUsernameRecordsRequest { string index = 1; }

// QueryGetUsernameRecordsResponse is the response type for the
// Query/UsernameRecord RPC method. It contains the queried UsernameRecords.
message QueryGetUsernameRecordsResponse {
  UsernameRecord usernameRecords = 1 [ (gogoproto.nullable) = false ];
}

// QueryAllUsernameRecordsRequest is the request type for the
// Query/UsernameRecordAll RPC method. It contains the pagination information
// for the query.
message QueryAllUsernameRecordsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllUsernameRecordsResponse is the response type for the
// Query/UsernameRecordAll RPC method. It contains all queried UsernameRecords
// and the pagination information.
message QueryAllUsernameRecordsResponse {
  repeated UsernameRecord usernameRecords = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
