syntax = "proto3";

package highway.wallet.v1;

import "core/crypto/coin.proto";
import "google/api/annotations.proto";

option go_package = "github.com/sonrhq/core/types/highway/wallet/v1;walletpb";

service WalletService {
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse) {
    option (google.api.http).post = "/highway/wallet/accounts/create";
  }
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {
    option (google.api.http).post = "/highway/wallet/accounts/get";
  }
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse) {
    option (google.api.http).post = "/highway/wallet/accounts/list";
  }

  rpc SignMessage(SignWithAccountRequest) returns (SignWithAccountResponse) {
    option (google.api.http).post = "/highway/wallet/accounts/sign";
  }

  rpc VerifySignature(VerifyWithAccountRequest) returns (VerifyWithAccountResponse) {
    option (google.api.http).post = "/highway/wallet/accounts/verify";
  }

  rpc ExportWallet(ExportWalletRequest) returns (ExportWalletResponse) {
    option (google.api.http).post = "/highway/wallet/export";
  }
}

message CreateAccountRequest {
  string jwt = 1;
  string name = 2;
  core.crypto.CoinType coin_type = 3;
  string network = 4;
}

message CreateAccountResponse {
  bool success = 1;
  string message = 2;
  string address = 3;
  core.crypto.CoinType coin_type = 4;
  string owner = 5;
}

message GetAccountRequest {
  string jwt = 1;
  string address = 2;
}

message GetAccountResponse {
  bool success = 1;
  string message = 2;
  string address = 3;
  core.crypto.CoinType coin_type = 4;
  string owner = 5;
}

message ListAccountsRequest {
  string jwt = 1;
}

message ListAccountsResponse {
  bool success = 1;
  string message = 2;
  repeated string accounts = 3;
}

message SignWithAccountRequest {
  string jwt = 1;
  string address = 2;
  bytes message = 3;
}

message SignWithAccountResponse {
  bool success = 1;
  string message = 2;
  bytes signature = 3;
}

message VerifyWithAccountRequest {
  string jwt = 1;
  string address = 2;
  bytes message = 3;
  bytes signature = 4;
}

message VerifyWithAccountResponse {
  bool success = 1;
  string message = 2;
  bool message_verified = 3;
}

message ExportWalletRequest {
  string jwt = 1;
  string address = 2;
}

message ExportWalletResponse {
  bool success = 1;
  string message = 2;
  string encrypted_wallet_buffer = 3;
}
