syntax = "proto3";

package core.identity;

import "core/identity/account.proto";
import "core/identity/did.proto";

option go_package = "github.com/sonrhq/sonr/x/identity/types";

// Msg defines the Msg service.
// This service provides methods for managing identities.
service Msg {
  // RegisterIdentity registers a new identity.
  rpc RegisterIdentity(MsgRegisterIdentity)
      returns (MsgRegisterIdentityResponse);

  // CreateControllerAccount creates a new controller account.
  rpc CreateControllerAccount(MsgCreateControllerAccount)
      returns (MsgCreateControllerAccountResponse);

  // UpdateControllerAccount updates an existing controller account.
  rpc UpdateControllerAccount(MsgUpdateControllerAccount)
      returns (MsgUpdateControllerAccountResponse);

  // DeleteControllerAccount deletes a controller account.
  rpc DeleteControllerAccount(MsgDeleteControllerAccount)
      returns (MsgDeleteControllerAccountResponse);
}

// MsgRegisterIdentity represents a request to register a new identity.
message MsgRegisterIdentity {
  string creator = 1; // The creator of the identity.
  DIDDocument did_document =
      2;                // The DID document associated with the identity.
  uint64 wallet_id = 3; // The wallet ID associated with the identity.
}

// MsgRegisterIdentityResponse represents the response to a register identity
// request.
message MsgRegisterIdentityResponse {
  bool success = 1; // Indicates if the registration was successful.
  DIDDocument did_document =
      2; // The DID document associated with the registered identity.
}

// MsgCreateControllerAccount represents a request to create a new controller
// account.
message MsgCreateControllerAccount {
  string address = 1;   // The address of the controller account.
  string publicKey = 3; // The public key of the controller account.
  repeated string authenticators =
      4; // The authenticators of the controller account.
  repeated string wallets =
      5; // The wallets associated with the controller account.
}

// MsgCreateControllerAccountResponse represents the response to a create
// controller account request.
message MsgCreateControllerAccountResponse {
  uint64 id = 1;                 // The ID of the created controller account.
  ControllerAccount account = 2; // The created controller account.
}

// MsgUpdateControllerAccount represents a request to update an existing
// controller account.
message MsgUpdateControllerAccount {
  string address = 1; // The address of the controller account to be updated.
  uint64 id = 2;      // The ID of the controller account to be updated.
  repeated string authenticators =
      4; // The updated authenticators of the controller account.
  repeated string wallets =
      5; // The updated wallets associated with the controller account.
}

// MsgUpdateControllerAccountResponse represents the response to an update
// controller account request.
message MsgUpdateControllerAccountResponse {
  ControllerAccount account = 1; // The updated controller account.
}

// MsgDeleteControllerAccount represents a request to delete a controller
// account.
message MsgDeleteControllerAccount {
  string creator = 1; // The creator of the controller account.
  string address = 2; // The address of the controller account to be deleted.
}

// MsgDeleteControllerAccountResponse represents the response to a delete
// controller account request.
message MsgDeleteControllerAccountResponse {}
