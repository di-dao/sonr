package login

templ getPasskeyForm() {
	<form>
		<div class="space-y-4">
			<div>
				<label class="block text-sm text-slate-300 font-medium mb-1" for="email">Email <span class="text-rose-500">*</span></label>
				<input id="email" class="form-input w-full" type="email" placeholder="markrossi@company.com" required/>
			</div>
		</div>
		<div class="mt-6">
			<button class="btn text-sm text-slate-900 bg-gradient-to-r from-white/80 via-white to-white/80 hover:bg-white w-full shadow-sm group">
				<span class="mr-1">
					<svg xmlns="http://www.w3.org/2000/svg" width="19" height="18" fill="none" viewBox="0 0 24 24"><path fill="#000" d="M12 2C9.51472 2 7.5 4.01472 7.5 6.5 7.5 8.98528 9.51472 11 12 11 14.4853 11 16.5 8.98528 16.5 6.5 16.5 4.01472 14.4853 2 12 2ZM12.0012 12C8.18331 12 5.32396 14.4854 4.21894 17.882 3.65812 19.6059 5.13839 21 6.6844 21H15.25V17.5619C14.1869 16.7399 13.5 15.4512 13.5 14 13.5 13.3638 13.632 12.7584 13.8702 12.2098 13.2778 12.0725 12.6535 12 12.0012 12Z"></path><path fill="#000" fill-rule="evenodd" d="M18 11C16.3431 11 15 12.3431 15 14C15 15.2107 15.7172 16.254 16.75 16.728V20.2597C16.75 20.4116 16.819 20.5552 16.9377 20.6501L17.6877 21.2501C17.8703 21.3962 18.1297 21.3962 18.3123 21.2501L19.0623 20.6501C19.181 20.5552 19.25 20.4116 19.25 20.2597V19.6492C19.25 19.5078 19.1901 19.3729 19.085 19.2781L18.5 18.75L19.1036 18.1464C19.1973 18.0527 19.25 17.9255 19.25 17.7929V16.728C20.2828 16.254 21 15.2107 21 14C21 12.3431 19.6569 11 18 11ZM17 14C17 13.4477 17.4477 13 18 13C18.5523 13 19 13.4477 19 14C19 14.5523 18.5523 15 18 15C17.4477 15 17 14.5523 17 14Z" clip-rule="evenodd"></path></svg>
				</span>
				Continue with PassKey <span class="tracking-normal text-stone-700 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-&gt;</span>
			</button>
		</div>
	</form>
}

script GetCredential(rpName, rpId, challenge string) {
	const publicKeyCredentialRequestOptions = {
		challenge: Uint8Array.from(challenge, c => c.charCodeAt(0)),
		allowCredentials: [{
			id: Uint8Array.from(
				credentialId, c => c.charCodeAt(0)),
			type: 'public-key',
			transports: ['usb', 'ble', 'nfc'],
		}],
		timeout: 60000,
	}

	const assertion = navigator.credentials.get({
		publicKey: publicKeyCredentialRequestOptions
	}).then((credential) => {
		console.log(credential);
	});
}
