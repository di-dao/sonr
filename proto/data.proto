syntax = "proto3";
package data;
import "peer.proto";

// Require Go Package
option go_package = "/data";

// Contact is Extensive User Info that can be passed
message Contact {
  bool isPublic = 1;   // If Contact card is Public
  Profile profile = 2; // General Profile Information
  General general = 3; // Base General Contact Fields, Key is Label
  Design design = 4;   // Card Design Properties

  map<string, Address> addresses = 5; // Address Fields, Key is Label
  map<string, Social> socials = 6;    // Social Media Fields, Key is Username
  map<string, URLLink> websites = 7;  // Website Links
  int32 lastUpdated = 8;              // UnixTime of last Updated

  // Address: Field for Contact field
  message Address {
    bool isPrimary = 1;     // If this is the Primary field for Address
    string label = 2;       // Address Label for Type
    string street = 3;      // Address First Line Street
    string streetTwo = 4;   // Address Second Line Street
    string city = 5;        // City of Address
    string state = 6;       // Address State
    string zipcode = 7;     // Address Zip Code
    string country = 8;     // Address Country
    string countryCode = 9; // Address Country Code
  }

  // Design: Card Design Values
  message Design {
    int32 card = 1;    // Background Card Value
    Color primary = 2; // Primary Color
    Color accent = 3;  // Accent Color for Text/Buttons

    enum Color {
      Transparent = 0;  // Clear Color
      Primary = 1;      // Blue Varient
      Secondary = 2;    // Purple Varient
      Tertiary = 3;     // Green Varient
      Critical = 4;     // Red Varient
      AccentPink = 5;   // Light Pink
      AccentBlue = 6;   // Light Blue
      AccentNavy = 7;   // Strong Navy
      AccentPurple = 8; // Light Purple
      Black = 9;        // Black Varient
      White = 10;       // White Varient
      Grey = 11;        // Grey Varient
    }
  }

  // Field : General Field for Contact field
  message General {
    string bio = 1;    // If this is the Primary field for Kind
    string sName = 2;  // Type of Field
    Name name = 3;     // Name of Field
    Date date = 4;     // Date of Field
    Gender gender = 5; // User Gender
    Phone phone = 6;   // User Phone Number
    Email email = 7;   // User Email Address
    Title title = 8;   // User Work Title

    message Name {
      string prefix = 1;     // Name Prefix
      string suffix = 2;     // Name Suffix
      string middleName = 3; // Middlename
      string nickName = 4;   // Nickname
    }

    // Date Field - MillisecondsFromEpoch
    message Date {
      int32 birthday = 1;           // Birthday
      map<string, int32> dates = 2; // Additional Dates
    }

    // Gender
    message Gender {
      Options value = 1; // Gender Option Value

      enum Options {
        Unspecified = 0; // Default
        Male = 1;        // Male Gender
        Female = 2;      // Female Gender
      }
    }

    // Phone Numbers
    message Phone {
      string primary = 1;              // Primary Phone
      map<string, string> numbers = 2; // Additional Phones
    }

    // Email Addresses
    message Email {
      Address primary = 1;                // Primary Email
      map<string, Address> addresses = 2; // Additional Addresses

      // Email Address
      message Address {
        string label = 1;    // User Defined Label
        string value = 2;    // Full Email Value
        string host = 3;     // Email Hosting Provider
        string username = 4; // Email Username
      }
    }

    // Employment Info
    message Title {
      string company = 1;  // Company
      string position = 2; // Position at Company
    }
  }

  // Social: Field provides Display Information and Provider Information
  message Social {
    // Properties
    bool isPrimary = 1; // If this is the Primary field for SocialMedia Provider
    string name = 2;    // Profile Name Provided
    string username = 3;       // Username for Social
    string picture = 4;        // User Social Picture Link
    Visibility visibility = 5; // Is the User's Account Private

    // Display Tile Type
    oneof tile {
      Icon icon = 6;
      Feed feed = 7;
      Playlist playlist = 8;
      Post post = 9;
    }

    // Provider for Social Field
    oneof provider {
      Media media = 10;     // Media Provider
      Music music = 11;     // Music Provider
      Payment payment = 12; // Payment Provider
    }

    // Simple Icon Button
    message Icon {
      int32 page = 1;   // Page Displayed
      int32 index = 2;  // Position in Contact Array
      URLLink link = 3; // Link Provided
    }

    // Feed Display
    message Feed {
      int32 page = 1;   // Page Displayed
      int32 index = 2;  // Position in Contact Array
      URLLink link = 3; // Link Provided
    }

    // Playlist Display
    message Playlist {
      int32 page = 1;   // Page Displayed
      int32 index = 2;  // Position in Contact Array
      URLLink link = 3; // Link Provided
    }

    // Post Display
    message Post {
      int32 page = 1;   // Page Displayed
      int32 index = 2;  // Position in Contact Array
      URLLink link = 3; // Link Provided
    }

    // Social Media Service
    enum Media {
      Instagram = 0;  // Feed/Post/Link
      TikTok = 1;     // Post/Link
      Facebook = 2;   // Link Only
      YouTube = 3;    // Post/Link
      Medium = 5;     // Feed/Post/Link
      Twitter = 6;    // Feed/Post/Link
      Snapchat = 7;   // Link Only
      Github = 8;     // Link Only
      LinkedIn = 9;   // Link Only
      Twitch = 10;    // Link Only
      Pinterest = 11; // Link Only
      Vimeo = 12;     // Link Only
      Gumroad = 13;   // Link and Items
    }

    // Music Service
    enum Music {
      Spotify = 0;    // Live Listening
      AppleMusic = 1; // Last Listening
      SoundCloud = 2; // Link Only
    }

    // Payment Service
    enum Payment {
      CashApp = 0;  // Link Only
      Venmo = 1;    // Link Only
      PayPal = 2;   // Link Only
      Bitcoin = 3;  // QR Code/ Address
      Ethereum = 4; // QR Code/ Address
    }

    // Social Tile Visibility
    enum Visibility {
      Unknown = 0;       // No Visibility Set
      Private = 1;       // Private Account
      Public = 2;        // Public Account
      PrivateHidden = 3; // Private and Hidden
      PublicHidden = 4;  // Public and Hidden
    }
  }
}

// Standard MIME with Additional Extensions
message MIME {
  Type type = 1;      // Type of File
  string subtype = 2; // Extension of File
  string value = 3;   // Type/Subtype i.e. (image/jpeg)

  enum Type {
    OTHER = 0;        // Other File Type - If cannot derive from Subtype
    AUDIO = 1;        // Sound, Audio Files
    IMAGE = 2;        // Image Files
    TEXT = 3;         // Text Based Files
    PDF = 4;          // PDF Format
    PRESENTATION = 5; // PPT type Files
    SPREADSHEET = 6;  // CSV/Excel type files
    VIDEO = 7;        // Video Files
    SNR = 8;          // SNR Files
  }
}

// Payload is type of Data being transferred
enum Payload {
  NONE = 0;    // Not Specified
  CONTACT = 1; // Sonr Based Contact
  FILE = 2;    // File Transfer
  FILES = 3;   // Multiple Files
  URL = 4;     // Link to Site
  MEDIA = 5;   // Media Payload - (Audio, Photo, Video)
  ALBUM = 6;   // Multiple Media Transfer
}

// For Transfer File Payload
message SFile {
  // Payload of File
  Payload payload = 1;

  // Total Transfer Count
  int32 count = 2;

  // Total Transfer Size
  int32 size = 3;

  // List of Files as Metadata
  repeated Item items = 4;

  // For Received Transfer File Information
  message Item {
    string id = 1;   // Local Asset ID
    string name = 2; // File Name without Path
    string path = 3; // File Location
    int32 size = 4;  // File Size in Bytes
    MIME mime = 5;   // Standard Mime Type

    // Thumbnail Preview of File
    oneof thumbnail {
      bytes thumbBuffer = 6; // Thumbnail Buffer
      string thumbPath = 7;  // Thumbnail Path
    }

    Properties properties = 8; // Media Properties
    message Properties {
      bool isAudio = 1;      // If File is Audio
      bool isImage = 2;      // If File is Image
      bool isVideo = 3;      // If File is Video
      bool hasThumbnail = 4; // If File has thumbnail
      bool isThumbPath = 5;  // If Thumbnail Path is Provided

      int32 width = 6;    // Media Width
      int32 height = 7;   // Media Height
      int32 duration = 8; // Length of Video - Optional
    }
  }
}

// Transfer is Data thats being Passed
message Transfer {
  int32 id = 1;        // SQL: Id reference
  Payload payload = 2; // SQL: Type of Data received
  int32 received = 3;  // SQL: UnixTime of received Date/Time

  Profile receiver = 4; // PROFILE: General Receiver Info
  Profile owner = 5;    // PROFILE: General Sender Info

  // Attached Data
  oneof data {
    Contact contact = 6; // DATA(Optional): Received Contact Information
    SFile file = 7;      // DATA(Optional): Received a File
    URLLink url = 8;     // DATA(Optional): Received a Website Link
  }
}

// URLLink Contains metadata of provided URL
message URLLink {
  bool initialized = 1;                // Whether URL Metadata has been Loaded
  string url = 2;                      // OG URL Link
  string title = 3;                    // Meta Field for Title
  string type = 4;                     // OG Type
  string site = 5;                     // Meta field for site
  string siteName = 6;                 // Meta field for sitename
  string description = 7;              // Meta field for description
  string locale = 8;                   // Meta field for locale
  repeated OpenGraphImage images = 9;  // Images
  repeated OpenGraphVideo videos = 10; // Videos
  repeated OpenGraphAudio audios = 11; // Audios
  TwitterCard twitter = 12;            // Twitter Card
  string content = 13;                 // URL Content

  // OpenGraph Image
  message OpenGraphImage {
    string url = 1;       // `meta:"og:image,og:image:url"`
    string secureUrl = 2; // `meta:"og:image:secure_url"`
    int32 width = 3;      // `meta:"og:image:width"`
    int32 height = 4;     // `meta:"og:image:height"`
    string type = 5;      // `meta:"og:image:type"`
  }

  // OpenGraph Video
  message OpenGraphVideo {
    string url = 1;       // `meta:"og:video,og:video:url"`
    string secureUrl = 2; // `meta:"og:video:secure_url"`
    int32 width = 3;      // `meta:"og:video:width"`
    int32 height = 4;     // `meta:"og:video:height"`
    string type = 5;      // `meta:"og:video:type"`
  }

  // OpenGraph Audio
  message OpenGraphAudio {
    string url = 1;       // `meta:"og:audio,og:audio:url"`
    string secureUrl = 2; // `meta:"og:audio:secure_url"`
    string type = 3;      // `meta:"og:audio:type"`
  }

  // Twitter Card
  message TwitterCard {
    string card = 1;            // `meta:"twitter:card"`
    string site = 2;            // `meta:"twitter:site"`
    string siteId = 3;          // `meta:"twitter:site:id"`
    string creator = 4;         // `meta:"twitter:creator"`
    string creatorId = 5;       // `meta:"twitter:creator:id"`
    string description = 6;     // `meta:"twitter:description"`
    string title = 7;           // `meta:"twitter:title"`
    string image = 8;           // `meta:"twitter:image,twitter:image:src"`
    string imageAlt = 9;        // `meta:"twitter:image:alt"`
    string url = 10;            // `meta:"twitter:url"`
    Player player = 11;         // Twitter Item Player
    IPhone iphone = 12;         // Twitter iPhone Data
    IPad ipad = 13;             // Twitter iPad Data
    GooglePlay googlePlay = 14; // Twitter Android Data

    message Player {
      string url = 1;    // `meta:"twitter:player"`
      int32 width = 2;   // `meta:"twitter:width"`
      int32 height = 3;  // `meta:"twitter:height"`
      string stream = 4; // `meta:"twitter:stream"`
    }

    message IPhone {
      string name = 1; // `meta:"twitter:app:name:iphone"`
      string id = 2;   // `meta:"twitter:app:id:iphone"`
      string url = 3;  // `meta:"twitter:app:url:iphone"`
    }

    message IPad {
      string name = 1; // `meta:"twitter:app:name:ipad"`
      string id = 2;   // `meta:"twitter:app:id:ipad"`
      string url = 3;  // `meta:"twitter:app:url:ipad"`
    }

    message GooglePlay {
      string name = 1; // `meta:"twitter:app:name:googleplay"`
      string id = 2;   // `meta:"twitter:app:id:googleplay"`
      string url = 3;  // `meta:"twitter:app:url:googleplay"`
    }
  }
}
