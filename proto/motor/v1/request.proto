syntax = "proto3";

// Package Motor is used for defining a Motor node and its properties.
package sonrio.motor.api.v1;

import "schema/v1/schema.proto";

option go_package = "github.com/sonr-io/sonr/thirdparty/types/motor";

// -----------------------------------------------------------------------------
// Motor Node API
// -----------------------------------------------------------------------------
// (Client) InitializeRequest Message to Establish Sonr Host/API/Room
message InitializeRequest {
  // Identifier of this Device
  string device_id = 1;

  // Device Home Directory
  string home_dir = 2;

  // Device Library Support Directory
  string support_dir = 3;

  // Device Temporary Storage Directory
  string temp_dir = 4;

  // Enable Libp2p Host
  bool enable_host = 5;

  // Enable Discovery Service
  bool enable_discovery = 6;

  // Discovery Latitude
  double discovery_latitude = 7; //optional - Default: 40.673010

  // Discovery Longitude
  double discovery_longitude = 8; //optional - Default: -73.994450

  // Public Key used for Device Authentication as DID Controller
  bytes device_keyprint_pub = 9; // optional
}

// CreateAccount Request contains the three keys needed to create an account on Sonr
message CreateAccountRequest {
  string password = 1;
  bytes aes_dsc_key = 2;
  map<string, string> metadata = 3;
}

// Login requires the DID of the account being logged into,
// and optionally a password if the vault pw is being used
// The PSK and DSC will be fetched from the keychain
message LoginRequest {
  string did = 1;
  string password = 2;
  bytes aes_dsc_key = 3;
  bytes aes_psk_key = 4;
}

message CreateSchemaRequest {
  string label = 1;
  map<string, sonrio.sonr.schema.SchemaKind> fields = 2;
  map<string, string> metadata = 3;
}

message QueryWhatIsRequest {
  string creator = 1;
  string did = 2;
}

message QuerySchemaRequest {
  string creator = 1;
  string did = 2;
}

message SendTokenRequest {
  string to = 1;
  string from = 2;
  int64 amount = 3;
  string memo = 4;
}
