syntax = "proto3";
package sonrio.sonr.registry;
import "registry/did.proto";
option go_package = "github.com/sonr-io/sonr/x/registry/types";

message WhoIs {
// Owner is the top level DID of the User or Application derived from the multisignature wallet.
  string owner = 1;

  // IsActive is the status of the DID Document
  bool is_active = 2;

  // DIDDocument is the bytes representation of DIDDocument within the WhoIs. Initially marshalled as JSON.
  DIDDocument did_document = 3;

  // Alias is the list of registered `alsoKnownAs` identifiers of the User or Application
  repeated Alias alias = 4;

  // Controllers is the list of controllers of the User or Application.
  repeated string controllers = 5;

  // Type is the kind of the entity. Possible values are: "user", "application"
  WhoIsType type = 6;

  // Metadata is a map of key-value pairs that can be used to store additional information about the DID.
  map<string, string> metadata = 7;

  // Timestamp is the time of the last update of the DID Document
  int64 timestamp = 8;
}

// WhoIsType is the type of DIDDocument stored in the registry module
enum WhoIsType {
  // User is the type of the registered name
  USER = 0;

  // Application is the type of the registered name
  APPLICATION = 1;
}

// Alias is a message detailing a known "alsoKnownAs" identifier of a DIDDocument and contains properties for transfer/exchange
message Alias {
  // Name is the string name of an Alias
  string name = 1;

  // IsForSale is the boolean value indicating if the Alias is for sale
  bool is_for_sale = 2;

  // Amount is the amount listed for purchasing the Alias from the User/Application
  int32 amount = 3;
}


