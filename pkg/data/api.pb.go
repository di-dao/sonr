// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: api.proto

package data

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Method enum for Node to Perform
type Action int32

const (
	Action_PING         Action = 0 // Ping Node
	Action_LOCATION     Action = 1 // Get Location
	Action_URL_LINK     Action = 2 // Get URL Link
	Action_PAUSE        Action = 3 // Pause Node
	Action_RESUME       Action = 4 // Resume Node
	Action_STOP         Action = 5 // Stop Node
	Action_RESTART      Action = 6 // Restart Node
	Action_LIST_LINKERS Action = 7 // List Linkers
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "PING",
		1: "LOCATION",
		2: "URL_LINK",
		3: "PAUSE",
		4: "RESUME",
		5: "STOP",
		6: "RESTART",
		7: "LIST_LINKERS",
	}
	Action_value = map[string]int32{
		"PING":         0,
		"LOCATION":     1,
		"URL_LINK":     2,
		"PAUSE":        3,
		"RESUME":       4,
		"STOP":         5,
		"RESTART":      6,
		"LIST_LINKERS": 7,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

// Enum for Decision to Perform
type Decision int32

const (
	Decision_ACCEPT  Decision = 0 // Accept Invite
	Decision_DECLINE Decision = 1 // Decline Invite
	Decision_IGNORE  Decision = 2 // Ignore Invite
	Decision_CANCEL  Decision = 3 // Cancel Invite
)

// Enum value maps for Decision.
var (
	Decision_name = map[int32]string{
		0: "ACCEPT",
		1: "DECLINE",
		2: "IGNORE",
		3: "CANCEL",
	}
	Decision_value = map[string]int32{
		"ACCEPT":  0,
		"DECLINE": 1,
		"IGNORE":  2,
		"CANCEL":  3,
	}
)

func (x Decision) Enum() *Decision {
	p := new(Decision)
	*p = x
	return p
}

func (x Decision) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Decision) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (Decision) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x Decision) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Decision.Descriptor instead.
func (Decision) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

// Client Type
type InitializeRequest_Client int32

const (
	InitializeRequest_DART InitializeRequest_Client = 0 // Dart Client from Binded Framework
	InitializeRequest_RPC  InitializeRequest_Client = 1 // gRPC Client from Other Language
)

// Enum value maps for InitializeRequest_Client.
var (
	InitializeRequest_Client_name = map[int32]string{
		0: "DART",
		1: "RPC",
	}
	InitializeRequest_Client_value = map[string]int32{
		"DART": 0,
		"RPC":  1,
	}
)

func (x InitializeRequest_Client) Enum() *InitializeRequest_Client {
	p := new(InitializeRequest_Client)
	*p = x
	return p
}

func (x InitializeRequest_Client) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitializeRequest_Client) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[2].Descriptor()
}

func (InitializeRequest_Client) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[2]
}

func (x InitializeRequest_Client) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitializeRequest_Client.Descriptor instead.
func (InitializeRequest_Client) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4, 0}
}

// Logging Details
type InitializeRequest_LogLevel int32

const (
	InitializeRequest_FATAL    InitializeRequest_LogLevel = 0 // Only show FATAL Errors
	InitializeRequest_CRITICAL InitializeRequest_LogLevel = 1 // Only show CRITICAL Errors
	InitializeRequest_WARNING  InitializeRequest_LogLevel = 2 // Only show WARNING Errors
	InitializeRequest_DEBUG    InitializeRequest_LogLevel = 3 // Show all Errors
	InitializeRequest_INFO     InitializeRequest_LogLevel = 4 // Show all Errors
	InitializeRequest_NONE     InitializeRequest_LogLevel = 5 // No Logging
)

// Enum value maps for InitializeRequest_LogLevel.
var (
	InitializeRequest_LogLevel_name = map[int32]string{
		0: "FATAL",
		1: "CRITICAL",
		2: "WARNING",
		3: "DEBUG",
		4: "INFO",
		5: "NONE",
	}
	InitializeRequest_LogLevel_value = map[string]int32{
		"FATAL":    0,
		"CRITICAL": 1,
		"WARNING":  2,
		"DEBUG":    3,
		"INFO":     4,
		"NONE":     5,
	}
)

func (x InitializeRequest_LogLevel) Enum() *InitializeRequest_LogLevel {
	p := new(InitializeRequest_LogLevel)
	*p = x
	return p
}

func (x InitializeRequest_LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitializeRequest_LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[3].Descriptor()
}

func (InitializeRequest_LogLevel) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[3]
}

func (x InitializeRequest_LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitializeRequest_LogLevel.Descriptor instead.
func (InitializeRequest_LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4, 1}
}

// Internet Connection Type
type ConnectionRequest_InternetType int32

const (
	ConnectionRequest_OFFLINE  ConnectionRequest_InternetType = 0 // No Internet Connection
	ConnectionRequest_WIFI     ConnectionRequest_InternetType = 1 // Wifi Connection
	ConnectionRequest_MOBILE   ConnectionRequest_InternetType = 2 // Mobile Connection
	ConnectionRequest_ETHERNET ConnectionRequest_InternetType = 3 // Ethernet Connection
)

// Enum value maps for ConnectionRequest_InternetType.
var (
	ConnectionRequest_InternetType_name = map[int32]string{
		0: "OFFLINE",
		1: "WIFI",
		2: "MOBILE",
		3: "ETHERNET",
	}
	ConnectionRequest_InternetType_value = map[string]int32{
		"OFFLINE":  0,
		"WIFI":     1,
		"MOBILE":   2,
		"ETHERNET": 3,
	}
)

func (x ConnectionRequest_InternetType) Enum() *ConnectionRequest_InternetType {
	p := new(ConnectionRequest_InternetType)
	*p = x
	return p
}

func (x ConnectionRequest_InternetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionRequest_InternetType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[4].Descriptor()
}

func (ConnectionRequest_InternetType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[4]
}

func (x ConnectionRequest_InternetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionRequest_InternetType.Descriptor instead.
func (ConnectionRequest_InternetType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5, 0}
}

type ConnectionRequest_IPAddress_Family int32

const (
	ConnectionRequest_IPAddress_IPV4 ConnectionRequest_IPAddress_Family = 0 // IPv4 Address
	ConnectionRequest_IPAddress_IPV6 ConnectionRequest_IPAddress_Family = 1 // IPv6 Address
)

// Enum value maps for ConnectionRequest_IPAddress_Family.
var (
	ConnectionRequest_IPAddress_Family_name = map[int32]string{
		0: "IPV4",
		1: "IPV6",
	}
	ConnectionRequest_IPAddress_Family_value = map[string]int32{
		"IPV4": 0,
		"IPV6": 1,
	}
)

func (x ConnectionRequest_IPAddress_Family) Enum() *ConnectionRequest_IPAddress_Family {
	p := new(ConnectionRequest_IPAddress_Family)
	*p = x
	return p
}

func (x ConnectionRequest_IPAddress_Family) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionRequest_IPAddress_Family) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[5].Descriptor()
}

func (ConnectionRequest_IPAddress_Family) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[5]
}

func (x ConnectionRequest_IPAddress_Family) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionRequest_IPAddress_Family.Descriptor instead.
func (ConnectionRequest_IPAddress_Family) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5, 2, 0}
}

type DecisionRequest_Type int32

const (
	DecisionRequest_NONE   DecisionRequest_Type = 0 // No Type
	DecisionRequest_LOCAL  DecisionRequest_Type = 1 // Local Transfer
	DecisionRequest_FLAT   DecisionRequest_Type = 2 // Flat Transfer
	DecisionRequest_REMOTE DecisionRequest_Type = 3 // Remote Transfer
)

// Enum value maps for DecisionRequest_Type.
var (
	DecisionRequest_Type_name = map[int32]string{
		0: "NONE",
		1: "LOCAL",
		2: "FLAT",
		3: "REMOTE",
	}
	DecisionRequest_Type_value = map[string]int32{
		"NONE":   0,
		"LOCAL":  1,
		"FLAT":   2,
		"REMOTE": 3,
	}
)

func (x DecisionRequest_Type) Enum() *DecisionRequest_Type {
	p := new(DecisionRequest_Type)
	*p = x
	return p
}

func (x DecisionRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DecisionRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[6].Descriptor()
}

func (DecisionRequest_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[6]
}

func (x DecisionRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DecisionRequest_Type.Descriptor instead.
func (DecisionRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7, 0}
}

type DeviceRequest_Method int32

const (
	DeviceRequest_OPEN   DeviceRequest_Method = 0 // Open File or URL on Device
	DeviceRequest_GHOST  DeviceRequest_Method = 1 // Set Device as Ghost Mode
	DeviceRequest_ACTIVE DeviceRequest_Method = 2 // Set Device as Active Mode
	DeviceRequest_PUSH   DeviceRequest_Method = 3 // Push Data to Device
)

// Enum value maps for DeviceRequest_Method.
var (
	DeviceRequest_Method_name = map[int32]string{
		0: "OPEN",
		1: "GHOST",
		2: "ACTIVE",
		3: "PUSH",
	}
	DeviceRequest_Method_value = map[string]int32{
		"OPEN":   0,
		"GHOST":  1,
		"ACTIVE": 2,
		"PUSH":   3,
	}
)

func (x DeviceRequest_Method) Enum() *DeviceRequest_Method {
	p := new(DeviceRequest_Method)
	*p = x
	return p
}

func (x DeviceRequest_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceRequest_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[7].Descriptor()
}

func (DeviceRequest_Method) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[7]
}

func (x DeviceRequest_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceRequest_Method.Descriptor instead.
func (DeviceRequest_Method) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9, 0}
}

// Type of Link
type LinkRequest_Type int32

const (
	LinkRequest_NONE    LinkRequest_Type = 0 // No Type
	LinkRequest_RECEIVE LinkRequest_Type = 1 // Receive Link
	LinkRequest_SEND    LinkRequest_Type = 2 // Send Link
	LinkRequest_CANCEL  LinkRequest_Type = 3 // Cancel Link
)

// Enum value maps for LinkRequest_Type.
var (
	LinkRequest_Type_name = map[int32]string{
		0: "NONE",
		1: "RECEIVE",
		2: "SEND",
		3: "CANCEL",
	}
	LinkRequest_Type_value = map[string]int32{
		"NONE":    0,
		"RECEIVE": 1,
		"SEND":    2,
		"CANCEL":  3,
	}
)

func (x LinkRequest_Type) Enum() *LinkRequest_Type {
	p := new(LinkRequest_Type)
	*p = x
	return p
}

func (x LinkRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[8].Descriptor()
}

func (LinkRequest_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[8]
}

func (x LinkRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkRequest_Type.Descriptor instead.
func (LinkRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11, 0}
}

// Type of Link
type LinkResponse_Type int32

const (
	LinkResponse_NONE    LinkResponse_Type = 0 // No Type
	LinkResponse_RECEIVE LinkResponse_Type = 1 // Receive Link
	LinkResponse_SEND    LinkResponse_Type = 2 // Send Link
	LinkResponse_CANCEL  LinkResponse_Type = 3 // Cancel Link
)

// Enum value maps for LinkResponse_Type.
var (
	LinkResponse_Type_name = map[int32]string{
		0: "NONE",
		1: "RECEIVE",
		2: "SEND",
		3: "CANCEL",
	}
	LinkResponse_Type_value = map[string]int32{
		"NONE":    0,
		"RECEIVE": 1,
		"SEND":    2,
		"CANCEL":  3,
	}
)

func (x LinkResponse_Type) Enum() *LinkResponse_Type {
	p := new(LinkResponse_Type)
	*p = x
	return p
}

func (x LinkResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[9].Descriptor()
}

func (LinkResponse_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[9]
}

func (x LinkResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkResponse_Type.Descriptor instead.
func (LinkResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12, 0}
}

type InviteRequest_Type int32

const (
	InviteRequest_NONE   InviteRequest_Type = 0 // No Type
	InviteRequest_LOCAL  InviteRequest_Type = 1 // Local Transfer
	InviteRequest_DIRECT InviteRequest_Type = 2 // Direct Transfer
	InviteRequest_REMOTE InviteRequest_Type = 3 // Remote Transfer
)

// Enum value maps for InviteRequest_Type.
var (
	InviteRequest_Type_name = map[int32]string{
		0: "NONE",
		1: "LOCAL",
		2: "DIRECT",
		3: "REMOTE",
	}
	InviteRequest_Type_value = map[string]int32{
		"NONE":   0,
		"LOCAL":  1,
		"DIRECT": 2,
		"REMOTE": 3,
	}
)

func (x InviteRequest_Type) Enum() *InviteRequest_Type {
	p := new(InviteRequest_Type)
	*p = x
	return p
}

func (x InviteRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[10].Descriptor()
}

func (InviteRequest_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[10]
}

func (x InviteRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteRequest_Type.Descriptor instead.
func (InviteRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13, 0}
}

type InviteResponse_Type int32

const (
	InviteResponse_NONE   InviteResponse_Type = 0 // No Type
	InviteResponse_LOCAL  InviteResponse_Type = 1 // Local Transfer
	InviteResponse_FLAT   InviteResponse_Type = 2 // Flat Transfer
	InviteResponse_REMOTE InviteResponse_Type = 3 // Remote Transfer
)

// Enum value maps for InviteResponse_Type.
var (
	InviteResponse_Type_name = map[int32]string{
		0: "NONE",
		1: "LOCAL",
		2: "FLAT",
		3: "REMOTE",
	}
	InviteResponse_Type_value = map[string]int32{
		"NONE":   0,
		"LOCAL":  1,
		"FLAT":   2,
		"REMOTE": 3,
	}
)

func (x InviteResponse_Type) Enum() *InviteResponse_Type {
	p := new(InviteResponse_Type)
	*p = x
	return p
}

func (x InviteResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[11].Descriptor()
}

func (InviteResponse_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[11]
}

func (x InviteResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteResponse_Type.Descriptor instead.
func (InviteResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14, 0}
}

// Mailbox Action
type MailboxRequest_Action int32

const (
	MailboxRequest_NONE   MailboxRequest_Action = 0 // No Action
	MailboxRequest_READ   MailboxRequest_Action = 1 // Read Message
	MailboxRequest_DELETE MailboxRequest_Action = 2 // Delete Message
)

// Enum value maps for MailboxRequest_Action.
var (
	MailboxRequest_Action_name = map[int32]string{
		0: "NONE",
		1: "READ",
		2: "DELETE",
	}
	MailboxRequest_Action_value = map[string]int32{
		"NONE":   0,
		"READ":   1,
		"DELETE": 2,
	}
)

func (x MailboxRequest_Action) Enum() *MailboxRequest_Action {
	p := new(MailboxRequest_Action)
	*p = x
	return p
}

func (x MailboxRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailboxRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[12].Descriptor()
}

func (MailboxRequest_Action) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[12]
}

func (x MailboxRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailboxRequest_Action.Descriptor instead.
func (MailboxRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15, 0}
}

// Mailbox Action
type MailboxResponse_Action int32

const (
	MailboxResponse_NONE   MailboxResponse_Action = 0 // No Action
	MailboxResponse_READ   MailboxResponse_Action = 1 // Read Message
	MailboxResponse_DELETE MailboxResponse_Action = 2 // Delete Message
)

// Enum value maps for MailboxResponse_Action.
var (
	MailboxResponse_Action_name = map[int32]string{
		0: "NONE",
		1: "READ",
		2: "DELETE",
	}
	MailboxResponse_Action_value = map[string]int32{
		"NONE":   0,
		"READ":   1,
		"DELETE": 2,
	}
)

func (x MailboxResponse_Action) Enum() *MailboxResponse_Action {
	p := new(MailboxResponse_Action)
	*p = x
	return p
}

func (x MailboxResponse_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailboxResponse_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[13].Descriptor()
}

func (MailboxResponse_Action) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[13]
}

func (x MailboxResponse_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailboxResponse_Action.Descriptor instead.
func (MailboxResponse_Action) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16, 0}
}

// Request Type
type VerifyRequest_Type int32

const (
	VerifyRequest_VERIFY VerifyRequest_Type = 0 // Verify Signature
	VerifyRequest_READ   VerifyRequest_Type = 1 // Read Value
)

// Enum value maps for VerifyRequest_Type.
var (
	VerifyRequest_Type_name = map[int32]string{
		0: "VERIFY",
		1: "READ",
	}
	VerifyRequest_Type_value = map[string]int32{
		"VERIFY": 0,
		"READ":   1,
	}
)

func (x VerifyRequest_Type) Enum() *VerifyRequest_Type {
	p := new(VerifyRequest_Type)
	*p = x
	return p
}

func (x VerifyRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerifyRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[14].Descriptor()
}

func (VerifyRequest_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[14]
}

func (x VerifyRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerifyRequest_Type.Descriptor instead.
func (VerifyRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18, 0}
}

// Traffic Direction of Session
type CompleteEvent_Direction int32

const (
	CompleteEvent_DEFAULT  CompleteEvent_Direction = 0 // From Memory/Viewing
	CompleteEvent_INCOMING CompleteEvent_Direction = 1 // Incoming Transfer
	CompleteEvent_OUTGOING CompleteEvent_Direction = 2 // Outgoing Transfer
)

// Enum value maps for CompleteEvent_Direction.
var (
	CompleteEvent_Direction_name = map[int32]string{
		0: "DEFAULT",
		1: "INCOMING",
		2: "OUTGOING",
	}
	CompleteEvent_Direction_value = map[string]int32{
		"DEFAULT":  0,
		"INCOMING": 1,
		"OUTGOING": 2,
	}
)

func (x CompleteEvent_Direction) Enum() *CompleteEvent_Direction {
	p := new(CompleteEvent_Direction)
	*p = x
	return p
}

func (x CompleteEvent_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompleteEvent_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[15].Descriptor()
}

func (CompleteEvent_Direction) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[15]
}

func (x CompleteEvent_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompleteEvent_Direction.Descriptor instead.
func (CompleteEvent_Direction) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20, 0}
}

// Local Type Event
type RoomEvent_Subject int32

const (
	RoomEvent_JOIN    RoomEvent_Subject = 0 // Peer has joined wants Info
	RoomEvent_STANDBY RoomEvent_Subject = 1 // Peer is taking break from lobby
	RoomEvent_RESUME  RoomEvent_Subject = 2 // Peer has rejoined Lobby
	RoomEvent_UPDATE  RoomEvent_Subject = 3 // Peer has changed position
	RoomEvent_LINKER  RoomEvent_Subject = 4 // Peer is a Linker
	RoomEvent_EXIT    RoomEvent_Subject = 5 // Peer has Exited
)

// Enum value maps for RoomEvent_Subject.
var (
	RoomEvent_Subject_name = map[int32]string{
		0: "JOIN",
		1: "STANDBY",
		2: "RESUME",
		3: "UPDATE",
		4: "LINKER",
		5: "EXIT",
	}
	RoomEvent_Subject_value = map[string]int32{
		"JOIN":    0,
		"STANDBY": 1,
		"RESUME":  2,
		"UPDATE":  3,
		"LINKER":  4,
		"EXIT":    5,
	}
)

func (x RoomEvent_Subject) Enum() *RoomEvent_Subject {
	p := new(RoomEvent_Subject)
	*p = x
	return p
}

func (x RoomEvent_Subject) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomEvent_Subject) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[16].Descriptor()
}

func (RoomEvent_Subject) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[16]
}

func (x RoomEvent_Subject) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomEvent_Subject.Descriptor instead.
func (RoomEvent_Subject) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24, 0}
}

// Local Type Event
type SyncEvent_Subject int32

const (
	SyncEvent_UPDATE SyncEvent_Subject = 0 // Peer has changed position
	SyncEvent_EXIT   SyncEvent_Subject = 1 // Peer has Exited
)

// Enum value maps for SyncEvent_Subject.
var (
	SyncEvent_Subject_name = map[int32]string{
		0: "UPDATE",
		1: "EXIT",
	}
	SyncEvent_Subject_value = map[string]int32{
		"UPDATE": 0,
		"EXIT":   1,
	}
)

func (x SyncEvent_Subject) Enum() *SyncEvent_Subject {
	p := new(SyncEvent_Subject)
	*p = x
	return p
}

func (x SyncEvent_Subject) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncEvent_Subject) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[17].Descriptor()
}

func (SyncEvent_Subject) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[17]
}

func (x SyncEvent_Subject) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncEvent_Subject.Descriptor instead.
func (SyncEvent_Subject) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26, 0}
}

type GenericRequest_Type int32

const (
	GenericRequest_NONE   GenericRequest_Type = 0 // Blank Request
	GenericRequest_INVITE GenericRequest_Type = 1 // Invite Request
)

// Enum value maps for GenericRequest_Type.
var (
	GenericRequest_Type_name = map[int32]string{
		0: "NONE",
		1: "INVITE",
	}
	GenericRequest_Type_value = map[string]int32{
		"NONE":   0,
		"INVITE": 1,
	}
)

func (x GenericRequest_Type) Enum() *GenericRequest_Type {
	p := new(GenericRequest_Type)
	*p = x
	return p
}

func (x GenericRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenericRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[18].Descriptor()
}

func (GenericRequest_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[18]
}

func (x GenericRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenericRequest_Type.Descriptor instead.
func (GenericRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27, 0}
}

type GenericResponse_Type int32

const (
	GenericResponse_NONE       GenericResponse_Type = 0 // Blank Response
	GenericResponse_CONNECTION GenericResponse_Type = 1 // Connection Response
	GenericResponse_REPLY      GenericResponse_Type = 2 // Invite Response
)

// Enum value maps for GenericResponse_Type.
var (
	GenericResponse_Type_name = map[int32]string{
		0: "NONE",
		1: "CONNECTION",
		2: "REPLY",
	}
	GenericResponse_Type_value = map[string]int32{
		"NONE":       0,
		"CONNECTION": 1,
		"REPLY":      2,
	}
)

func (x GenericResponse_Type) Enum() *GenericResponse_Type {
	p := new(GenericResponse_Type)
	*p = x
	return p
}

func (x GenericResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenericResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[19].Descriptor()
}

func (GenericResponse_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[19]
}

func (x GenericResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenericResponse_Type.Descriptor instead.
func (GenericResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28, 0}
}

// Type of Event
type GenericEvent_Type int32

const (
	GenericEvent_BLANK    GenericEvent_Type = 0 // Blank Event
	GenericEvent_COMPLETE GenericEvent_Type = 1 // Transfer Completed
	GenericEvent_MAIL     GenericEvent_Type = 2 // New Mailbox Invite
	GenericEvent_PROGRESS GenericEvent_Type = 3 // Transfer Progress
	GenericEvent_ROOM     GenericEvent_Type = 4 // Local Room Update
	GenericEvent_LINK     GenericEvent_Type = 5 // Linking Response
	GenericEvent_SYNC     GenericEvent_Type = 6 // Sync Response
)

// Enum value maps for GenericEvent_Type.
var (
	GenericEvent_Type_name = map[int32]string{
		0: "BLANK",
		1: "COMPLETE",
		2: "MAIL",
		3: "PROGRESS",
		4: "ROOM",
		5: "LINK",
		6: "SYNC",
	}
	GenericEvent_Type_value = map[string]int32{
		"BLANK":    0,
		"COMPLETE": 1,
		"MAIL":     2,
		"PROGRESS": 3,
		"ROOM":     4,
		"LINK":     5,
		"SYNC":     6,
	}
)

func (x GenericEvent_Type) Enum() *GenericEvent_Type {
	p := new(GenericEvent_Type)
	*p = x
	return p
}

func (x GenericEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenericEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[20].Descriptor()
}

func (GenericEvent_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[20]
}

func (x GenericEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenericEvent_Type.Descriptor instead.
func (GenericEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29, 0}
}

// ActionRequest performs action on Node
type ActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action Action `protobuf:"varint,1,opt,name=action,proto3,enum=data.Action" json:"action,omitempty"` // required action
	Data   string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                       // optional data (String for URL)
}

func (x *ActionRequest) Reset() {
	*x = ActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionRequest) ProtoMessage() {}

func (x *ActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionRequest.ProtoReflect.Descriptor instead.
func (*ActionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *ActionRequest) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_PING
}

func (x *ActionRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// ActionResponse returns result of action
type ActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action  Action `protobuf:"varint,1,opt,name=action,proto3,enum=data.Action" json:"action,omitempty"` // provided action
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                // success or failure
	// Returned Data
	//
	// Types that are assignable to Data:
	//	*ActionResponse_Location
	//	*ActionResponse_UrlLink
	//	*ActionResponse_Lifecycle
	//	*ActionResponse_Linkers
	Data isActionResponse_Data `protobuf_oneof:"data"`
}

func (x *ActionResponse) Reset() {
	*x = ActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse) ProtoMessage() {}

func (x *ActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse.ProtoReflect.Descriptor instead.
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *ActionResponse) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_PING
}

func (x *ActionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (m *ActionResponse) GetData() isActionResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ActionResponse) GetLocation() *Location {
	if x, ok := x.GetData().(*ActionResponse_Location); ok {
		return x.Location
	}
	return nil
}

func (x *ActionResponse) GetUrlLink() *URLLink {
	if x, ok := x.GetData().(*ActionResponse_UrlLink); ok {
		return x.UrlLink
	}
	return nil
}

func (x *ActionResponse) GetLifecycle() Lifecycle {
	if x, ok := x.GetData().(*ActionResponse_Lifecycle); ok {
		return x.Lifecycle
	}
	return Lifecycle_ACTIVE
}

func (x *ActionResponse) GetLinkers() *Linkers {
	if x, ok := x.GetData().(*ActionResponse_Linkers); ok {
		return x.Linkers
	}
	return nil
}

type isActionResponse_Data interface {
	isActionResponse_Data()
}

type ActionResponse_Location struct {
	Location *Location `protobuf:"bytes,3,opt,name=location,proto3,oneof"` // location of node
}

type ActionResponse_UrlLink struct {
	UrlLink *URLLink `protobuf:"bytes,4,opt,name=urlLink,proto3,oneof"` // URL Link of node
}

type ActionResponse_Lifecycle struct {
	Lifecycle Lifecycle `protobuf:"varint,5,opt,name=lifecycle,proto3,enum=data.Lifecycle,oneof"` // current state of node
}

type ActionResponse_Linkers struct {
	Linkers *Linkers `protobuf:"bytes,6,opt,name=linkers,proto3,oneof"` // list of linkers
}

func (*ActionResponse_Location) isActionResponse_Data() {}

func (*ActionResponse_UrlLink) isActionResponse_Data() {}

func (*ActionResponse_Lifecycle) isActionResponse_Data() {}

func (*ActionResponse_Linkers) isActionResponse_Data() {}

// Message for Signing Request (Hmac Sha256)
type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value to be signed
	SName    string `protobuf:"bytes,1,opt,name=sName,proto3" json:"sName,omitempty"`       // SName combined with Device ID and Hashed
	Mnemonic string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"` // Mnemonic Hashed with private key for fingerprint
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *AuthRequest) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *AuthRequest) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

// Message for Signing Response (Hmac Sha256)
type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSigned bool `protobuf:"varint,1,opt,name=isSigned,proto3" json:"isSigned,omitempty"` // If Values were Signed
	// Resulting Signed Values
	SignedPrefix      string `protobuf:"bytes,2,opt,name=signedPrefix,proto3" json:"signedPrefix,omitempty"`           // Message for List of Bytes
	SignedFingerprint string `protobuf:"bytes,3,opt,name=signedFingerprint,proto3" json:"signedFingerprint,omitempty"` // Fingerprint Value
	PublicKey         string `protobuf:"bytes,4,opt,name=publicKey,proto3" json:"publicKey,omitempty"`                 // Base64 Encoded Public Key
	GivenSName        string `protobuf:"bytes,5,opt,name=givenSName,proto3" json:"givenSName,omitempty"`               // Provided SName
	GivenMnemonic     string `protobuf:"bytes,6,opt,name=givenMnemonic,proto3" json:"givenMnemonic,omitempty"`         // Provided Mnemonic
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *AuthResponse) GetIsSigned() bool {
	if x != nil {
		return x.IsSigned
	}
	return false
}

func (x *AuthResponse) GetSignedPrefix() string {
	if x != nil {
		return x.SignedPrefix
	}
	return ""
}

func (x *AuthResponse) GetSignedFingerprint() string {
	if x != nil {
		return x.SignedFingerprint
	}
	return ""
}

func (x *AuthResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *AuthResponse) GetGivenSName() string {
	if x != nil {
		return x.GivenSName
	}
	return ""
}

func (x *AuthResponse) GetGivenMnemonic() string {
	if x != nil {
		return x.GivenMnemonic
	}
	return ""
}

// First Message Sent with Device and API Keys
type InitializeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device   *Device                     `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`                                                 // Users Device
	ApiKeys  *APIKeys                    `protobuf:"bytes,2,opt,name=apiKeys,proto3" json:"apiKeys,omitempty"`                                               // Client Keys
	LogLevel *InitializeRequest_LogLevel `protobuf:"varint,3,opt,name=logLevel,proto3,enum=data.InitializeRequest_LogLevel,oneof" json:"logLevel,omitempty"` // Set Logging Config
	Options  *InitializeRequest_Options  `protobuf:"bytes,4,opt,name=options,proto3,oneof" json:"options,omitempty"`                                         // Reset KeyPair for Migration
	Client   InitializeRequest_Client    `protobuf:"varint,5,opt,name=client,proto3,enum=data.InitializeRequest_Client" json:"client,omitempty"`             // Client Type
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *InitializeRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *InitializeRequest) GetApiKeys() *APIKeys {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

func (x *InitializeRequest) GetLogLevel() InitializeRequest_LogLevel {
	if x != nil && x.LogLevel != nil {
		return *x.LogLevel
	}
	return InitializeRequest_FATAL
}

func (x *InitializeRequest) GetOptions() *InitializeRequest_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *InitializeRequest) GetClient() InitializeRequest_Client {
	if x != nil {
		return x.Client
	}
	return InitializeRequest_DART
}

// Connection Message to Establish Sonr Host/API/Room
type ConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKeys        *APIKeys                          `protobuf:"bytes,1,opt,name=apiKeys,proto3" json:"apiKeys,omitempty"`                                     // Client Keys
	Location       *Location                         `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`                                   // Current Runtime Location
	Contact        *Contact                          `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`                                     // Users Contact Card
	Type           ConnectionRequest_InternetType    `protobuf:"varint,4,opt,name=type,proto3,enum=data.ConnectionRequest_InternetType" json:"type,omitempty"` // Internet Connection Type
	HostOptions    *ConnectionRequest_HostOptions    `protobuf:"bytes,5,opt,name=hostOptions,proto3,oneof" json:"hostOptions,omitempty"`                       // Libp2p Host config
	ServiceOptions *ConnectionRequest_ServiceOptions `protobuf:"bytes,6,opt,name=serviceOptions,proto3,oneof" json:"serviceOptions,omitempty"`                 // Service Config
	IsLinker       bool                              `protobuf:"varint,7,opt,name=isLinker,proto3" json:"isLinker,omitempty"`                                  // Is Linker Node and not a Full Peer
}

func (x *ConnectionRequest) Reset() {
	*x = ConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest) ProtoMessage() {}

func (x *ConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest.ProtoReflect.Descriptor instead.
func (*ConnectionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectionRequest) GetApiKeys() *APIKeys {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

func (x *ConnectionRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ConnectionRequest) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *ConnectionRequest) GetType() ConnectionRequest_InternetType {
	if x != nil {
		return x.Type
	}
	return ConnectionRequest_OFFLINE
}

func (x *ConnectionRequest) GetHostOptions() *ConnectionRequest_HostOptions {
	if x != nil {
		return x.HostOptions
	}
	return nil
}

func (x *ConnectionRequest) GetServiceOptions() *ConnectionRequest_ServiceOptions {
	if x != nil {
		return x.ServiceOptions
	}
	return nil
}

func (x *ConnectionRequest) GetIsLinker() bool {
	if x != nil {
		return x.IsLinker
	}
	return false
}

// Response from Connection Request
type ConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostActive    bool                                         `protobuf:"varint,1,opt,name=hostActive,proto3" json:"hostActive,omitempty"`                                                                                  // True if Host is Active
	MdnsActive    bool                                         `protobuf:"varint,2,opt,name=mdnsActive,proto3" json:"mdnsActive,omitempty"`                                                                                  // True if MDNS is Active
	TextileActive bool                                         `protobuf:"varint,3,opt,name=textileActive,proto3" json:"textileActive,omitempty"`                                                                            // True if Textile is Active
	LocalRoom     *Room                                        `protobuf:"bytes,4,opt,name=localRoom,proto3" json:"localRoom,omitempty"`                                                                                     // Local Room
	Threads       map[string]*ConnectionResponse_TextileThread `protobuf:"bytes,5,rep,name=threads,proto3" json:"threads,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // ID, Thread
}

func (x *ConnectionResponse) Reset() {
	*x = ConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionResponse) ProtoMessage() {}

func (x *ConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionResponse.ProtoReflect.Descriptor instead.
func (*ConnectionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectionResponse) GetHostActive() bool {
	if x != nil {
		return x.HostActive
	}
	return false
}

func (x *ConnectionResponse) GetMdnsActive() bool {
	if x != nil {
		return x.MdnsActive
	}
	return false
}

func (x *ConnectionResponse) GetTextileActive() bool {
	if x != nil {
		return x.TextileActive
	}
	return false
}

func (x *ConnectionResponse) GetLocalRoom() *Room {
	if x != nil {
		return x.LocalRoom
	}
	return nil
}

func (x *ConnectionResponse) GetThreads() map[string]*ConnectionResponse_TextileThread {
	if x != nil {
		return x.Threads
	}
	return nil
}

// Message for a Response to an Invite Request
type DecisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decision Decision             `protobuf:"varint,1,opt,name=decision,proto3,enum=data.Decision" json:"decision,omitempty"`     // Value to be Decided
	Payload  Payload              `protobuf:"varint,2,opt,name=payload,proto3,enum=data.Payload" json:"payload,omitempty"`        // Type of Transfer
	From     *Member              `protobuf:"bytes,3,opt,name=from,proto3,oneof" json:"from,omitempty"`                           // Users Peer Data
	To       *Member              `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`                                     // Receivers Peer Data
	Transfer *Transfer            `protobuf:"bytes,5,opt,name=transfer,proto3" json:"transfer,omitempty"`                         // Attached Data
	Type     DecisionRequest_Type `protobuf:"varint,6,opt,name=type,proto3,enum=data.DecisionRequest_Type" json:"type,omitempty"` // Type of Invite
	Protocol string               `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`                         // Protocol for Invite
}

func (x *DecisionRequest) Reset() {
	*x = DecisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionRequest) ProtoMessage() {}

func (x *DecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionRequest.ProtoReflect.Descriptor instead.
func (*DecisionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *DecisionRequest) GetDecision() Decision {
	if x != nil {
		return x.Decision
	}
	return Decision_ACCEPT
}

func (x *DecisionRequest) GetPayload() Payload {
	if x != nil {
		return x.Payload
	}
	return Payload_NONE
}

func (x *DecisionRequest) GetFrom() *Member {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *DecisionRequest) GetTo() *Member {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *DecisionRequest) GetTransfer() *Transfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

func (x *DecisionRequest) GetType() DecisionRequest_Type {
	if x != nil {
		return x.Type
	}
	return DecisionRequest_NONE
}

func (x *DecisionRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

// Message for a Response to an DecisionRequest
type DecisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // True if Decision was Successful
	Body    string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`        // Response Body
}

func (x *DecisionResponse) Reset() {
	*x = DecisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionResponse) ProtoMessage() {}

func (x *DecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionResponse.ProtoReflect.Descriptor instead.
func (*DecisionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *DecisionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DecisionResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type DeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *Device              `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`                                 // Users Device
	Method DeviceRequest_Method `protobuf:"varint,2,opt,name=method,proto3,enum=data.DeviceRequest_Method" json:"method,omitempty"` // Method to be Used
	Data   string               `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                     // Data to be Used (Optional) - URL or File
}

func (x *DeviceRequest) Reset() {
	*x = DeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceRequest) ProtoMessage() {}

func (x *DeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceRequest.ProtoReflect.Descriptor instead.
func (*DeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *DeviceRequest) GetMethod() DeviceRequest_Method {
	if x != nil {
		return x.Method
	}
	return DeviceRequest_OPEN
}

func (x *DeviceRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// Message for DeviceRequest Response
type DeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // True if Device was Successful
	Body    string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`        // Response Body
}

func (x *DeviceResponse) Reset() {
	*x = DeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceResponse) ProtoMessage() {}

func (x *DeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceResponse.ProtoReflect.Descriptor instead.
func (*DeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *DeviceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeviceResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

//  Message for a LinkRequest
type LinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    LinkRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=data.LinkRequest_Type" json:"type,omitempty"` // Type of Link
	ShortID string           `protobuf:"bytes,2,opt,name=shortID,proto3" json:"shortID,omitempty"`                       // Short ID of Link
	From    *Peer            `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                             // Users Peer Data
	To      *Peer            `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`                                 // Receivers Peer Data
	Contact *Contact         `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`                       // Users Contact Card
}

func (x *LinkRequest) Reset() {
	*x = LinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkRequest) ProtoMessage() {}

func (x *LinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkRequest.ProtoReflect.Descriptor instead.
func (*LinkRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *LinkRequest) GetType() LinkRequest_Type {
	if x != nil {
		return x.Type
	}
	return LinkRequest_NONE
}

func (x *LinkRequest) GetShortID() string {
	if x != nil {
		return x.ShortID
	}
	return ""
}

func (x *LinkRequest) GetFrom() *Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *LinkRequest) GetTo() *Peer {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *LinkRequest) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

// Message for Verification Response
type LinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                       // Result for Verification
	Type    LinkResponse_Type `protobuf:"varint,2,opt,name=type,proto3,enum=data.LinkResponse_Type" json:"type,omitempty"` // Type of Link
	Device  *Device           `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`                          // Device used for Link
	From    *Peer             `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`                              // Users Peer Data
	To      *Peer             `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`                                  // Receivers Peer Data
	Contact *Contact          `protobuf:"bytes,6,opt,name=contact,proto3" json:"contact,omitempty"`                        // Users Contact Card
}

func (x *LinkResponse) Reset() {
	*x = LinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkResponse) ProtoMessage() {}

func (x *LinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkResponse.ProtoReflect.Descriptor instead.
func (*LinkResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *LinkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LinkResponse) GetType() LinkResponse_Type {
	if x != nil {
		return x.Type
	}
	return LinkResponse_NONE
}

func (x *LinkResponse) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *LinkResponse) GetFrom() *Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *LinkResponse) GetTo() *Peer {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *LinkResponse) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

// Invitation Message sent on RPC
type InviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload  Payload            `protobuf:"varint,1,opt,name=payload,proto3,enum=data.Payload" json:"payload,omitempty"`      // Type of Transfer
	From     *Member            `protobuf:"bytes,2,opt,name=from,proto3,oneof" json:"from,omitempty"`                         // Users Member Data
	To       *Member            `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`                                   // Receivers Member Data
	Transfer *Transfer          `protobuf:"bytes,4,opt,name=transfer,proto3" json:"transfer,omitempty"`                       // Attached Data
	Type     InviteRequest_Type `protobuf:"varint,5,opt,name=type,proto3,enum=data.InviteRequest_Type" json:"type,omitempty"` // Type of Invite
	Protocol *string            `protobuf:"bytes,6,opt,name=protocol,proto3,oneof" json:"protocol,omitempty"`                 // Protocol for Invite
}

func (x *InviteRequest) Reset() {
	*x = InviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteRequest) ProtoMessage() {}

func (x *InviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteRequest.ProtoReflect.Descriptor instead.
func (*InviteRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *InviteRequest) GetPayload() Payload {
	if x != nil {
		return x.Payload
	}
	return Payload_NONE
}

func (x *InviteRequest) GetFrom() *Member {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *InviteRequest) GetTo() *Member {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *InviteRequest) GetTransfer() *Transfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

func (x *InviteRequest) GetType() InviteRequest_Type {
	if x != nil {
		return x.Type
	}
	return InviteRequest_NONE
}

func (x *InviteRequest) GetProtocol() string {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return ""
}

// Reply Message sent on RPC
type InviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decision Decision            `protobuf:"varint,1,opt,name=decision,proto3,enum=data.Decision" json:"decision,omitempty"`    // Peer Decision for Invite Request
	Payload  Payload             `protobuf:"varint,2,opt,name=payload,proto3,enum=data.Payload" json:"payload,omitempty"`       // Type of Transfer
	From     *Member             `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                                // Users Member Data
	To       *Member             `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`                                    // Receivers Member Data
	Transfer *Transfer           `protobuf:"bytes,5,opt,name=transfer,proto3" json:"transfer,omitempty"`                        // Attached Data
	Type     InviteResponse_Type `protobuf:"varint,6,opt,name=type,proto3,enum=data.InviteResponse_Type" json:"type,omitempty"` // Type of Invite
	Protocol string              `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`                        // Protocol for Invite
}

func (x *InviteResponse) Reset() {
	*x = InviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteResponse) ProtoMessage() {}

func (x *InviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteResponse.ProtoReflect.Descriptor instead.
func (*InviteResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *InviteResponse) GetDecision() Decision {
	if x != nil {
		return x.Decision
	}
	return Decision_ACCEPT
}

func (x *InviteResponse) GetPayload() Payload {
	if x != nil {
		return x.Payload
	}
	return Payload_NONE
}

func (x *InviteResponse) GetFrom() *Member {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *InviteResponse) GetTo() *Member {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *InviteResponse) GetTransfer() *Transfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

func (x *InviteResponse) GetType() InviteResponse_Type {
	if x != nil {
		return x.Type
	}
	return InviteResponse_NONE
}

func (x *InviteResponse) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

// Mailbox message handling
type MailboxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string                `protobuf:"bytes,1,opt,name=iD,proto3" json:"iD,omitempty"`                                          // Unique ID for Message
	Action MailboxRequest_Action `protobuf:"varint,2,opt,name=action,proto3,enum=data.MailboxRequest_Action" json:"action,omitempty"` // Action to be performed on Message
}

func (x *MailboxRequest) Reset() {
	*x = MailboxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailboxRequest) ProtoMessage() {}

func (x *MailboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailboxRequest.ProtoReflect.Descriptor instead.
func (*MailboxRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *MailboxRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MailboxRequest) GetAction() MailboxRequest_Action {
	if x != nil {
		return x.Action
	}
	return MailboxRequest_NONE
}

// Mailbox message handling
type MailboxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      string                 `protobuf:"bytes,1,opt,name=iD,proto3" json:"iD,omitempty"`                                           // Unique ID for Message
	Action  MailboxResponse_Action `protobuf:"varint,2,opt,name=action,proto3,enum=data.MailboxResponse_Action" json:"action,omitempty"` // Action to be performed on Message
	Success bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`                                // Successful Action
}

func (x *MailboxResponse) Reset() {
	*x = MailboxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailboxResponse) ProtoMessage() {}

func (x *MailboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailboxResponse.ProtoReflect.Descriptor instead.
func (*MailboxResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *MailboxResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MailboxResponse) GetAction() MailboxResponse_Action {
	if x != nil {
		return x.Action
	}
	return MailboxResponse_NONE
}

func (x *MailboxResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Updated Peer Info Request
type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*UpdateRequest_Properties
	//	*UpdateRequest_Contact
	//	*UpdateRequest_Position
	Data isUpdateRequest_Data `protobuf_oneof:"data"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (m *UpdateRequest) GetData() isUpdateRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UpdateRequest) GetProperties() *Peer_Properties {
	if x, ok := x.GetData().(*UpdateRequest_Properties); ok {
		return x.Properties
	}
	return nil
}

func (x *UpdateRequest) GetContact() *Contact {
	if x, ok := x.GetData().(*UpdateRequest_Contact); ok {
		return x.Contact
	}
	return nil
}

func (x *UpdateRequest) GetPosition() *Position {
	if x, ok := x.GetData().(*UpdateRequest_Position); ok {
		return x.Position
	}
	return nil
}

type isUpdateRequest_Data interface {
	isUpdateRequest_Data()
}

type UpdateRequest_Properties struct {
	Properties *Peer_Properties `protobuf:"bytes,1,opt,name=properties,proto3,oneof"` // Updated Peer Properties
}

type UpdateRequest_Contact struct {
	Contact *Contact `protobuf:"bytes,2,opt,name=contact,proto3,oneof"` // Users Updated Contact Card
}

type UpdateRequest_Position struct {
	Position *Position `protobuf:"bytes,3,opt,name=position,proto3,oneof"` // Users updated Position
}

func (*UpdateRequest_Properties) isUpdateRequest_Data() {}

func (*UpdateRequest_Contact) isUpdateRequest_Data() {}

func (*UpdateRequest_Position) isUpdateRequest_Data() {}

// Message for Verification Request
type VerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data is the original value
	//
	// Types that are assignable to Data:
	//	*VerifyRequest_BufferValue
	//	*VerifyRequest_TextValue
	Data isVerifyRequest_Data `protobuf_oneof:"data"`
	// Sig is the value to be verified against data
	//
	// Types that are assignable to Sig:
	//	*VerifyRequest_SignedBuffer
	//	*VerifyRequest_SignedText
	Sig  isVerifyRequest_Sig `protobuf_oneof:"sig"`
	Type VerifyRequest_Type  `protobuf:"varint,5,opt,name=type,proto3,enum=data.VerifyRequest_Type" json:"type,omitempty"` // Either Signing New Mnemonic or Reading Existing
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (m *VerifyRequest) GetData() isVerifyRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *VerifyRequest) GetBufferValue() []byte {
	if x, ok := x.GetData().(*VerifyRequest_BufferValue); ok {
		return x.BufferValue
	}
	return nil
}

func (x *VerifyRequest) GetTextValue() string {
	if x, ok := x.GetData().(*VerifyRequest_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (m *VerifyRequest) GetSig() isVerifyRequest_Sig {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (x *VerifyRequest) GetSignedBuffer() []byte {
	if x, ok := x.GetSig().(*VerifyRequest_SignedBuffer); ok {
		return x.SignedBuffer
	}
	return nil
}

func (x *VerifyRequest) GetSignedText() string {
	if x, ok := x.GetSig().(*VerifyRequest_SignedText); ok {
		return x.SignedText
	}
	return ""
}

func (x *VerifyRequest) GetType() VerifyRequest_Type {
	if x != nil {
		return x.Type
	}
	return VerifyRequest_VERIFY
}

type isVerifyRequest_Data interface {
	isVerifyRequest_Data()
}

type VerifyRequest_BufferValue struct {
	BufferValue []byte `protobuf:"bytes,1,opt,name=bufferValue,proto3,oneof"` // Buffer Value
}

type VerifyRequest_TextValue struct {
	TextValue string `protobuf:"bytes,2,opt,name=textValue,proto3,oneof"` // Text Value
}

func (*VerifyRequest_BufferValue) isVerifyRequest_Data() {}

func (*VerifyRequest_TextValue) isVerifyRequest_Data() {}

type isVerifyRequest_Sig interface {
	isVerifyRequest_Sig()
}

type VerifyRequest_SignedBuffer struct {
	SignedBuffer []byte `protobuf:"bytes,3,opt,name=signedBuffer,proto3,oneof"` // Signed Buffer
}

type VerifyRequest_SignedText struct {
	SignedText string `protobuf:"bytes,4,opt,name=signedText,proto3,oneof"` // Signed Text
}

func (*VerifyRequest_SignedBuffer) isVerifyRequest_Sig() {}

func (*VerifyRequest_SignedText) isVerifyRequest_Sig() {}

// Message for Verification Response
type VerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`    // Result for Verification
	PublicKey string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"` // Base64 Encoded Public Key
	ShortID   string `protobuf:"bytes,3,opt,name=shortID,proto3" json:"shortID,omitempty"`     // Short ID generated from HMac and Device
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *VerifyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VerifyResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *VerifyResponse) GetShortID() string {
	if x != nil {
		return x.ShortID
	}
	return ""
}

// --------------------------- //
// -------- Events ----------- //
// --------------------------- //
// Message Sent after Completed Transfer
type CompleteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction CompleteEvent_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=data.CompleteEvent_Direction" json:"direction,omitempty"` // Transfer Direction
	Transfer  *Transfer               `protobuf:"bytes,2,opt,name=transfer,proto3" json:"transfer,omitempty"`                                      // Transfer Data
}

func (x *CompleteEvent) Reset() {
	*x = CompleteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteEvent) ProtoMessage() {}

func (x *CompleteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteEvent.ProtoReflect.Descriptor instead.
func (*CompleteEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *CompleteEvent) GetDirection() CompleteEvent_Direction {
	if x != nil {
		return x.Direction
	}
	return CompleteEvent_DEFAULT
}

func (x *CompleteEvent) GetTransfer() *Transfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

// Message for Linking Response (Hmac Sha256)
type LinkEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // ID of Device to Link
	Device  *Device  `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`    // Device of Peer to Link
	Contact *Contact `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`  // Contact Card of User
}

func (x *LinkEvent) Reset() {
	*x = LinkEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkEvent) ProtoMessage() {}

func (x *LinkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkEvent.ProtoReflect.Descriptor instead.
func (*LinkEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (x *LinkEvent) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LinkEvent) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *LinkEvent) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

// Received Mail Event
type MailEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt int32          `protobuf:"varint,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // Time of Creation
	To        string         `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`                // Recipient
	Invite    *InviteRequest `protobuf:"bytes,3,opt,name=invite,proto3" json:"invite,omitempty"`        // Invite Request
	From      string         `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`            // Sender
	ReadAt    int32          `protobuf:"varint,5,opt,name=readAt,proto3" json:"readAt,omitempty"`       // Time of Read
	Signature []byte         `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`  // Signature for Verification
	ID        string         `protobuf:"bytes,7,opt,name=iD,proto3" json:"iD,omitempty"`                // Unique ID for Message
}

func (x *MailEvent) Reset() {
	*x = MailEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailEvent) ProtoMessage() {}

func (x *MailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailEvent.ProtoReflect.Descriptor instead.
func (*MailEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{22}
}

func (x *MailEvent) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MailEvent) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MailEvent) GetInvite() *InviteRequest {
	if x != nil {
		return x.Invite
	}
	return nil
}

func (x *MailEvent) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MailEvent) GetReadAt() int32 {
	if x != nil {
		return x.ReadAt
	}
	return 0
}

func (x *MailEvent) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *MailEvent) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

// Transfer Progress Event
type ProgressEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int32   `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`    // Current Transfer Item
	Total    int32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`        // Total Transfer Progress
	Progress float64 `protobuf:"fixed64,3,opt,name=progress,proto3" json:"progress,omitempty"` // Current Transfer Progress
}

func (x *ProgressEvent) Reset() {
	*x = ProgressEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressEvent) ProtoMessage() {}

func (x *ProgressEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressEvent.ProtoReflect.Descriptor instead.
func (*ProgressEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{23}
}

func (x *ProgressEvent) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ProgressEvent) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProgressEvent) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

// Message Sent when peer messages Local Room
type RoomEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room    *Room             `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`                                    // Event Room Type
	Id      string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                        // Peer ID
	Member  *Member           `protobuf:"bytes,3,opt,name=member,proto3" json:"member,omitempty"`                                // User Information
	Subject RoomEvent_Subject `protobuf:"varint,4,opt,name=subject,proto3,enum=data.RoomEvent_Subject" json:"subject,omitempty"` // Local Event Subject
}

func (x *RoomEvent) Reset() {
	*x = RoomEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEvent) ProtoMessage() {}

func (x *RoomEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEvent.ProtoReflect.Descriptor instead.
func (*RoomEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{24}
}

func (x *RoomEvent) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *RoomEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoomEvent) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *RoomEvent) GetSubject() RoomEvent_Subject {
	if x != nil {
		return x.Subject
	}
	return RoomEvent_JOIN
}

// Message for Status Update Event
type StatusEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value Status `protobuf:"varint,1,opt,name=value,proto3,enum=data.Status" json:"value,omitempty"` // Status Value
}

func (x *StatusEvent) Reset() {
	*x = StatusEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusEvent) ProtoMessage() {}

func (x *StatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusEvent.ProtoReflect.Descriptor instead.
func (*StatusEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{25}
}

func (x *StatusEvent) GetValue() Status {
	if x != nil {
		return x.Value
	}
	return Status_DEFAULT
}

// Message for Sync Device Event - Sent from Primary Device
type SyncEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room        *Room             `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`                                    // Event Room Type
	Member      *Member           `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`                                // Member of Sync
	Contact     *Contact          `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`                              // Latest Contact Card of User
	LastUpdated int32             `protobuf:"varint,4,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`                     // Last Updated Time
	Subject     SyncEvent_Subject `protobuf:"varint,5,opt,name=subject,proto3,enum=data.SyncEvent_Subject" json:"subject,omitempty"` // Subject of Event
}

func (x *SyncEvent) Reset() {
	*x = SyncEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncEvent) ProtoMessage() {}

func (x *SyncEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncEvent.ProtoReflect.Descriptor instead.
func (*SyncEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{26}
}

func (x *SyncEvent) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *SyncEvent) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *SyncEvent) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *SyncEvent) GetLastUpdated() int32 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *SyncEvent) GetSubject() SyncEvent_Subject {
	if x != nil {
		return x.Subject
	}
	return SyncEvent_UPDATE
}

// Generic Request Message
type GenericRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type GenericRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=data.GenericRequest_Type" json:"type,omitempty"` // Type of Request
	Data []byte              `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                                // Data for Request
}

func (x *GenericRequest) Reset() {
	*x = GenericRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericRequest) ProtoMessage() {}

func (x *GenericRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericRequest.ProtoReflect.Descriptor instead.
func (*GenericRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{27}
}

func (x *GenericRequest) GetType() GenericRequest_Type {
	if x != nil {
		return x.Type
	}
	return GenericRequest_NONE
}

func (x *GenericRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Generic Response Message
type GenericResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type GenericResponse_Type `protobuf:"varint,1,opt,name=type,proto3,enum=data.GenericResponse_Type" json:"type,omitempty"` // Type of Response
	Data []byte               `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                                 // Data for Response
}

func (x *GenericResponse) Reset() {
	*x = GenericResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericResponse) ProtoMessage() {}

func (x *GenericResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericResponse.ProtoReflect.Descriptor instead.
func (*GenericResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{28}
}

func (x *GenericResponse) GetType() GenericResponse_Type {
	if x != nil {
		return x.Type
	}
	return GenericResponse_NONE
}

func (x *GenericResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Generic Event Message
type GenericEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type GenericEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=data.GenericEvent_Type" json:"type,omitempty"` // Type of Event
	Data []byte            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                              // Data for Event
}

func (x *GenericEvent) Reset() {
	*x = GenericEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericEvent) ProtoMessage() {}

func (x *GenericEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericEvent.ProtoReflect.Descriptor instead.
func (*GenericEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{29}
}

func (x *GenericEvent) GetType() GenericEvent_Type {
	if x != nil {
		return x.Type
	}
	return GenericEvent_BLANK
}

func (x *GenericEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------------------- //
// -------- RPC Service ----------- //
// -------------------------------- //
// Blank Message for Nil Request
type NoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoRequest) Reset() {
	*x = NoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoRequest) ProtoMessage() {}

func (x *NoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoRequest.ProtoReflect.Descriptor instead.
func (*NoRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{30}
}

// Blank Message for Nil Response
type NoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoResponse) Reset() {
	*x = NoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoResponse) ProtoMessage() {}

func (x *NoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoResponse.ProtoReflect.Descriptor instead.
func (*NoResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{31}
}

// Keychain/Account Options
type InitializeRequest_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsVerified *bool   `protobuf:"varint,1,opt,name=isVerified,proto3,oneof" json:"isVerified,omitempty"` // Is Account Verified on Frontend
	IsPairing  *bool   `protobuf:"varint,2,opt,name=isPairing,proto3,oneof" json:"isPairing,omitempty"`   // Is Device Pairing Enabled for Linkers
	ResetKeys  *bool   `protobuf:"varint,3,opt,name=resetKeys,proto3,oneof" json:"resetKeys,omitempty"`   // Reset KeyPair for Migration
	Mnemonic   *string `protobuf:"bytes,4,opt,name=mnemonic,proto3,oneof" json:"mnemonic,omitempty"`      // Mnemonic for Fingerprint
}

func (x *InitializeRequest_Options) Reset() {
	*x = InitializeRequest_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest_Options) ProtoMessage() {}

func (x *InitializeRequest_Options) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest_Options.ProtoReflect.Descriptor instead.
func (*InitializeRequest_Options) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4, 0}
}

func (x *InitializeRequest_Options) GetIsVerified() bool {
	if x != nil && x.IsVerified != nil {
		return *x.IsVerified
	}
	return false
}

func (x *InitializeRequest_Options) GetIsPairing() bool {
	if x != nil && x.IsPairing != nil {
		return *x.IsPairing
	}
	return false
}

func (x *InitializeRequest_Options) GetResetKeys() bool {
	if x != nil && x.ResetKeys != nil {
		return *x.ResetKeys
	}
	return false
}

func (x *InitializeRequest_Options) GetMnemonic() string {
	if x != nil && x.Mnemonic != nil {
		return *x.Mnemonic
	}
	return ""
}

// Libp2p Host Options
type ConnectionRequest_HostOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuicTransport   *bool                          `protobuf:"varint,1,opt,name=quicTransport,proto3,oneof" json:"quicTransport,omitempty"`     // Enable QUIC Transport
	HttpTransport   *bool                          `protobuf:"varint,2,opt,name=httpTransport,proto3,oneof" json:"httpTransport,omitempty"`     // Enable HTTP Transport
	WebrtcTransport *bool                          `protobuf:"varint,3,opt,name=webrtcTransport,proto3,oneof" json:"webrtcTransport,omitempty"` // Enable WebRTC Transport
	MdnsDiscovery   *bool                          `protobuf:"varint,4,opt,name=mdnsDiscovery,proto3,oneof" json:"mdnsDiscovery,omitempty"`     // Enable MDNS Discovery
	Ipv4Only        *bool                          `protobuf:"varint,5,opt,name=ipv4Only,proto3,oneof" json:"ipv4Only,omitempty"`               // Enable IPv4 Only
	ListenPort      *int32                         `protobuf:"varint,6,opt,name=listenPort,proto3,oneof" json:"listenPort,omitempty"`           // Listen Port for Libp2p
	ListenAddrs     []*ConnectionRequest_IPAddress `protobuf:"bytes,7,rep,name=listenAddrs,proto3" json:"listenAddrs,omitempty"`                // List of Listen Addresses
}

func (x *ConnectionRequest_HostOptions) Reset() {
	*x = ConnectionRequest_HostOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionRequest_HostOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest_HostOptions) ProtoMessage() {}

func (x *ConnectionRequest_HostOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest_HostOptions.ProtoReflect.Descriptor instead.
func (*ConnectionRequest_HostOptions) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ConnectionRequest_HostOptions) GetQuicTransport() bool {
	if x != nil && x.QuicTransport != nil {
		return *x.QuicTransport
	}
	return false
}

func (x *ConnectionRequest_HostOptions) GetHttpTransport() bool {
	if x != nil && x.HttpTransport != nil {
		return *x.HttpTransport
	}
	return false
}

func (x *ConnectionRequest_HostOptions) GetWebrtcTransport() bool {
	if x != nil && x.WebrtcTransport != nil {
		return *x.WebrtcTransport
	}
	return false
}

func (x *ConnectionRequest_HostOptions) GetMdnsDiscovery() bool {
	if x != nil && x.MdnsDiscovery != nil {
		return *x.MdnsDiscovery
	}
	return false
}

func (x *ConnectionRequest_HostOptions) GetIpv4Only() bool {
	if x != nil && x.Ipv4Only != nil {
		return *x.Ipv4Only
	}
	return false
}

func (x *ConnectionRequest_HostOptions) GetListenPort() int32 {
	if x != nil && x.ListenPort != nil {
		return *x.ListenPort
	}
	return 0
}

func (x *ConnectionRequest_HostOptions) GetListenAddrs() []*ConnectionRequest_IPAddress {
	if x != nil {
		return x.ListenAddrs
	}
	return nil
}

// Service Configuration
type ConnectionRequest_ServiceOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Textile    *bool  `protobuf:"varint,1,opt,name=textile,proto3,oneof" json:"textile,omitempty"`       // Enable Textile Client and Threads
	Mailbox    *bool  `protobuf:"varint,2,opt,name=mailbox,proto3,oneof" json:"mailbox,omitempty"`       // Enable Mailbox
	Buckets    *bool  `protobuf:"varint,3,opt,name=buckets,proto3,oneof" json:"buckets,omitempty"`       // Enable Buckets
	Push       *bool  `protobuf:"varint,4,opt,name=push,proto3,oneof" json:"push,omitempty"`             // Enable Push Notifications
	AutoUpdate *bool  `protobuf:"varint,5,opt,name=autoUpdate,proto3,oneof" json:"autoUpdate,omitempty"` // Enable Auto Update Events
	OlcRange   *int32 `protobuf:"varint,6,opt,name=olcRange,proto3,oneof" json:"olcRange,omitempty"`     // OLC Range Value for Local Room (Default: 6)
}

func (x *ConnectionRequest_ServiceOptions) Reset() {
	*x = ConnectionRequest_ServiceOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionRequest_ServiceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest_ServiceOptions) ProtoMessage() {}

func (x *ConnectionRequest_ServiceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest_ServiceOptions.ProtoReflect.Descriptor instead.
func (*ConnectionRequest_ServiceOptions) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5, 1}
}

func (x *ConnectionRequest_ServiceOptions) GetTextile() bool {
	if x != nil && x.Textile != nil {
		return *x.Textile
	}
	return false
}

func (x *ConnectionRequest_ServiceOptions) GetMailbox() bool {
	if x != nil && x.Mailbox != nil {
		return *x.Mailbox
	}
	return false
}

func (x *ConnectionRequest_ServiceOptions) GetBuckets() bool {
	if x != nil && x.Buckets != nil {
		return *x.Buckets
	}
	return false
}

func (x *ConnectionRequest_ServiceOptions) GetPush() bool {
	if x != nil && x.Push != nil {
		return *x.Push
	}
	return false
}

func (x *ConnectionRequest_ServiceOptions) GetAutoUpdate() bool {
	if x != nil && x.AutoUpdate != nil {
		return *x.AutoUpdate
	}
	return false
}

func (x *ConnectionRequest_ServiceOptions) GetOlcRange() int32 {
	if x != nil && x.OlcRange != nil {
		return *x.OlcRange
	}
	return 0
}

// IP Address Interface
type ConnectionRequest_IPAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                   // Name of Interface
	Value    string                             `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`                                                 // IP Address of Interface
	Mac      string                             `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`                                                     // Mac Address of Interface
	Internal bool                               `protobuf:"varint,4,opt,name=internal,proto3" json:"internal,omitempty"`                                          // Wether it is a Loopback Interface
	Family   ConnectionRequest_IPAddress_Family `protobuf:"varint,5,opt,name=family,proto3,enum=data.ConnectionRequest_IPAddress_Family" json:"family,omitempty"` // Address Family
}

func (x *ConnectionRequest_IPAddress) Reset() {
	*x = ConnectionRequest_IPAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionRequest_IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest_IPAddress) ProtoMessage() {}

func (x *ConnectionRequest_IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest_IPAddress.ProtoReflect.Descriptor instead.
func (*ConnectionRequest_IPAddress) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5, 2}
}

func (x *ConnectionRequest_IPAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectionRequest_IPAddress) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ConnectionRequest_IPAddress) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *ConnectionRequest_IPAddress) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *ConnectionRequest_IPAddress) GetFamily() ConnectionRequest_IPAddress_Family {
	if x != nil {
		return x.Family
	}
	return ConnectionRequest_IPAddress_IPV4
}

// Textile Thread
type ConnectionResponse_TextileThread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`               // ThreadID
	Multiaddr string `protobuf:"bytes,2,opt,name=multiaddr,proto3" json:"multiaddr,omitempty"` // Thread MultiAddr
	Key       string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`             // Thread Key
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`           // Thread Name
}

func (x *ConnectionResponse_TextileThread) Reset() {
	*x = ConnectionResponse_TextileThread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionResponse_TextileThread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionResponse_TextileThread) ProtoMessage() {}

func (x *ConnectionResponse_TextileThread) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionResponse_TextileThread.ProtoReflect.Descriptor instead.
func (*ConnectionResponse_TextileThread) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ConnectionResponse_TextileThread) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectionResponse_TextileThread) GetMultiaddr() string {
	if x != nil {
		return x.Multiaddr
	}
	return ""
}

func (x *ConnectionResponse_TextileThread) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConnectionResponse_TextileThread) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x70, 0x65, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x49, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x02,
	0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x07, 0x75, 0x72, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00,
	0x52, 0x07, 0x75, 0x72, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2f, 0x0a, 0x09, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x6c, 0x69,
	0x6e, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x69,
	0x6e, 0x6b, 0x65, 0x72, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a,
	0x0b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0xe0,
	0x01, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x2c, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x69, 0x76, 0x65, 0x6e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x53, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x67,
	0x69, 0x76, 0x65, 0x6e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x22, 0xf4, 0x04, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a,
	0x07, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x07, 0x61,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x1a, 0xcd, 0x01, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a,
	0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x09, 0x69, 0x73, 0x50, 0x61, 0x69, 0x72, 0x69,
	0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x6d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x73,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x50,
	0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x22, 0x1b, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x41, 0x52, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x50, 0x43, 0x10, 0x01, 0x22, 0x4f,
	0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41,
	0x54, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41,
	0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x05, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfb, 0x0a, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x07, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x07,
	0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x38, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x53, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x48, 0x01, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x72, 0x1a, 0xae, 0x03, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x0d, 0x71, 0x75, 0x69, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x71, 0x75,
	0x69, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29,
	0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x77, 0x65, 0x62,
	0x72, 0x74, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x02, 0x52, 0x0f, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x6d, 0x64, 0x6e, 0x73,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x03, 0x52, 0x0d, 0x6d, 0x64, 0x6e, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x70, 0x76, 0x34, 0x4f, 0x6e, 0x6c, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x08, 0x69, 0x70, 0x76, 0x34, 0x4f, 0x6e, 0x6c,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x64, 0x6e, 0x73, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x70, 0x76,
	0x34, 0x4f, 0x6e, 0x6c, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x50, 0x6f, 0x72, 0x74, 0x1a, 0x95, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x74, 0x65, 0x78, 0x74, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x74, 0x65, 0x78, 0x74,
	0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62,
	0x6f, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x03, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x04, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6f, 0x6c, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x08, 0x6f, 0x6c, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x75, 0x73, 0x68,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x6c, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0xc3, 0x01, 0x0a,
	0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x12, 0x40, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x06, 0x66, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x22, 0x1c, 0x0a, 0x06, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x08,
	0x0a, 0x04, 0x49, 0x50, 0x56, 0x34, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x36,
	0x10, 0x01, 0x22, 0x3f, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x57, 0x49, 0x46, 0x49, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x42,
	0x49, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45,
	0x54, 0x10, 0x03, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xae, 0x03, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x64, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x6d, 0x64, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x3f, 0x0a,
	0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x1a, 0x62,
	0x0a, 0x0c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x63, 0x0a, 0x0d, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xdf, 0x02, 0x0a, 0x0f, 0x44, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x25, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x31, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4c,
	0x41, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x10, 0x03,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x40, 0x0a, 0x10, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xb2, 0x01, 0x0a, 0x0d,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x06, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x47, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10, 0x03,
	0x22, 0x3e, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0xed, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x33, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45,
	0x4e, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x03,
	0x22, 0x95, 0x02, 0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1a,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x22, 0x33, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x03, 0x22, 0xc3, 0x02, 0x0a, 0x0d, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x88, 0x01, 0x01, 0x22, 0x33, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x10, 0x03, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xcf,
	0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x31, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4c,
	0x41, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x10, 0x03,
	0x22, 0x7f, 0x0a, 0x0e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x44, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52,
	0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10,
	0x02, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x44, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x28, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22,
	0xa9, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf6, 0x01, 0x0a, 0x0d,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1e, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x24, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52,
	0x45, 0x41, 0x44, 0x10, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x05, 0x0a,
	0x03, 0x73, 0x69, 0x67, 0x22, 0x62, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x22, 0xae, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x22, 0x34, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4f,
	0x55, 0x54, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x74, 0x0a, 0x09, 0x4c, 0x69, 0x6e,
	0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22,
	0xc0, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2b, 0x0a, 0x06, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x44, 0x22, 0x5b, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xe4, 0x01, 0x0a, 0x09, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x4e, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x54, 0x41, 0x4e, 0x44, 0x42, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x53, 0x55,
	0x4d, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03,
	0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x52, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x45, 0x58, 0x49, 0x54, 0x10, 0x05, 0x22, 0x31, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x09, 0x53, 0x79,
	0x6e, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x1f, 0x0a, 0x07, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x58, 0x49, 0x54, 0x10, 0x01, 0x22, 0x71, 0x0a, 0x0e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x01, 0x22,
	0x82, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x50,
	0x4c, 0x59, 0x10, 0x02, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x42, 0x4c, 0x41, 0x4e, 0x4b, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x49, 0x4c, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e,
	0x4b, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x06, 0x22, 0x0b, 0x0a,
	0x09, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0c, 0x0a, 0x0a, 0x4e, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x6e, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x52,
	0x4c, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x55, 0x53,
	0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x4c,
	0x49, 0x4e, 0x4b, 0x45, 0x52, 0x53, 0x10, 0x07, 0x2a, 0x3b, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x43, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x10, 0x03, 0x32, 0xa9, 0x0b, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x12, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x04, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x11, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x04, 0x53, 0x69,
	0x67, 0x6e, 0x12, 0x11, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x31, 0x0a, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x15, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x10, 0x43, 0x61,
	0x6c, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x14, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x12, 0x43, 0x61,
	0x6c, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x41, 0x0a, 0x13, 0x43,
	0x61, 0x6c, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x62,
	0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f,
	0x0a, 0x12, 0x43, 0x61, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x32, 0x0a, 0x08, 0x4f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x2e, 0x0a, 0x06, 0x4f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0f, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x2e, 0x0a, 0x06, 0x4f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0f, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x34, 0x0a, 0x08, 0x4f, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12,
	0x0f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x34, 0x0a, 0x07, 0x4f, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x2e, 0x0a, 0x06, 0x4f, 0x6e, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x0f, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x36, 0x0a, 0x0a, 0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0f, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x36, 0x0a, 0x0a, 0x4f, 0x6e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x30, 0x0a, 0x07, 0x4f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0f, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30,
	0x01, 0x42, 0x07, 0x5a, 0x05, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 21)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_api_proto_goTypes = []interface{}{
	(Action)(0),                              // 0: data.Action
	(Decision)(0),                            // 1: data.Decision
	(InitializeRequest_Client)(0),            // 2: data.InitializeRequest.Client
	(InitializeRequest_LogLevel)(0),          // 3: data.InitializeRequest.LogLevel
	(ConnectionRequest_InternetType)(0),      // 4: data.ConnectionRequest.InternetType
	(ConnectionRequest_IPAddress_Family)(0),  // 5: data.ConnectionRequest.IPAddress.Family
	(DecisionRequest_Type)(0),                // 6: data.DecisionRequest.Type
	(DeviceRequest_Method)(0),                // 7: data.DeviceRequest.Method
	(LinkRequest_Type)(0),                    // 8: data.LinkRequest.Type
	(LinkResponse_Type)(0),                   // 9: data.LinkResponse.Type
	(InviteRequest_Type)(0),                  // 10: data.InviteRequest.Type
	(InviteResponse_Type)(0),                 // 11: data.InviteResponse.Type
	(MailboxRequest_Action)(0),               // 12: data.MailboxRequest.Action
	(MailboxResponse_Action)(0),              // 13: data.MailboxResponse.Action
	(VerifyRequest_Type)(0),                  // 14: data.VerifyRequest.Type
	(CompleteEvent_Direction)(0),             // 15: data.CompleteEvent.Direction
	(RoomEvent_Subject)(0),                   // 16: data.RoomEvent.Subject
	(SyncEvent_Subject)(0),                   // 17: data.SyncEvent.Subject
	(GenericRequest_Type)(0),                 // 18: data.GenericRequest.Type
	(GenericResponse_Type)(0),                // 19: data.GenericResponse.Type
	(GenericEvent_Type)(0),                   // 20: data.GenericEvent.Type
	(*ActionRequest)(nil),                    // 21: data.ActionRequest
	(*ActionResponse)(nil),                   // 22: data.ActionResponse
	(*AuthRequest)(nil),                      // 23: data.AuthRequest
	(*AuthResponse)(nil),                     // 24: data.AuthResponse
	(*InitializeRequest)(nil),                // 25: data.InitializeRequest
	(*ConnectionRequest)(nil),                // 26: data.ConnectionRequest
	(*ConnectionResponse)(nil),               // 27: data.ConnectionResponse
	(*DecisionRequest)(nil),                  // 28: data.DecisionRequest
	(*DecisionResponse)(nil),                 // 29: data.DecisionResponse
	(*DeviceRequest)(nil),                    // 30: data.DeviceRequest
	(*DeviceResponse)(nil),                   // 31: data.DeviceResponse
	(*LinkRequest)(nil),                      // 32: data.LinkRequest
	(*LinkResponse)(nil),                     // 33: data.LinkResponse
	(*InviteRequest)(nil),                    // 34: data.InviteRequest
	(*InviteResponse)(nil),                   // 35: data.InviteResponse
	(*MailboxRequest)(nil),                   // 36: data.MailboxRequest
	(*MailboxResponse)(nil),                  // 37: data.MailboxResponse
	(*UpdateRequest)(nil),                    // 38: data.UpdateRequest
	(*VerifyRequest)(nil),                    // 39: data.VerifyRequest
	(*VerifyResponse)(nil),                   // 40: data.VerifyResponse
	(*CompleteEvent)(nil),                    // 41: data.CompleteEvent
	(*LinkEvent)(nil),                        // 42: data.LinkEvent
	(*MailEvent)(nil),                        // 43: data.MailEvent
	(*ProgressEvent)(nil),                    // 44: data.ProgressEvent
	(*RoomEvent)(nil),                        // 45: data.RoomEvent
	(*StatusEvent)(nil),                      // 46: data.StatusEvent
	(*SyncEvent)(nil),                        // 47: data.SyncEvent
	(*GenericRequest)(nil),                   // 48: data.GenericRequest
	(*GenericResponse)(nil),                  // 49: data.GenericResponse
	(*GenericEvent)(nil),                     // 50: data.GenericEvent
	(*NoRequest)(nil),                        // 51: data.NoRequest
	(*NoResponse)(nil),                       // 52: data.NoResponse
	(*InitializeRequest_Options)(nil),        // 53: data.InitializeRequest.Options
	(*ConnectionRequest_HostOptions)(nil),    // 54: data.ConnectionRequest.HostOptions
	(*ConnectionRequest_ServiceOptions)(nil), // 55: data.ConnectionRequest.ServiceOptions
	(*ConnectionRequest_IPAddress)(nil),      // 56: data.ConnectionRequest.IPAddress
	nil,                                      // 57: data.ConnectionResponse.ThreadsEntry
	(*ConnectionResponse_TextileThread)(nil), // 58: data.ConnectionResponse.TextileThread
	(*Location)(nil),                         // 59: data.Location
	(*URLLink)(nil),                          // 60: data.URLLink
	(Lifecycle)(0),                           // 61: data.Lifecycle
	(*Linkers)(nil),                          // 62: data.Linkers
	(*Device)(nil),                           // 63: data.Device
	(*APIKeys)(nil),                          // 64: data.APIKeys
	(*Contact)(nil),                          // 65: data.Contact
	(*Room)(nil),                             // 66: data.Room
	(Payload)(0),                             // 67: data.Payload
	(*Member)(nil),                           // 68: data.Member
	(*Transfer)(nil),                         // 69: data.Transfer
	(*Peer)(nil),                             // 70: data.Peer
	(*Peer_Properties)(nil),                  // 71: data.Peer.Properties
	(*Position)(nil),                         // 72: data.Position
	(Status)(0),                              // 73: data.Status
	(*ErrorEvent)(nil),                       // 74: data.ErrorEvent
}
var file_api_proto_depIdxs = []int32{
	0,  // 0: data.ActionRequest.action:type_name -> data.Action
	0,  // 1: data.ActionResponse.action:type_name -> data.Action
	59, // 2: data.ActionResponse.location:type_name -> data.Location
	60, // 3: data.ActionResponse.urlLink:type_name -> data.URLLink
	61, // 4: data.ActionResponse.lifecycle:type_name -> data.Lifecycle
	62, // 5: data.ActionResponse.linkers:type_name -> data.Linkers
	63, // 6: data.InitializeRequest.device:type_name -> data.Device
	64, // 7: data.InitializeRequest.apiKeys:type_name -> data.APIKeys
	3,  // 8: data.InitializeRequest.logLevel:type_name -> data.InitializeRequest.LogLevel
	53, // 9: data.InitializeRequest.options:type_name -> data.InitializeRequest.Options
	2,  // 10: data.InitializeRequest.client:type_name -> data.InitializeRequest.Client
	64, // 11: data.ConnectionRequest.apiKeys:type_name -> data.APIKeys
	59, // 12: data.ConnectionRequest.location:type_name -> data.Location
	65, // 13: data.ConnectionRequest.contact:type_name -> data.Contact
	4,  // 14: data.ConnectionRequest.type:type_name -> data.ConnectionRequest.InternetType
	54, // 15: data.ConnectionRequest.hostOptions:type_name -> data.ConnectionRequest.HostOptions
	55, // 16: data.ConnectionRequest.serviceOptions:type_name -> data.ConnectionRequest.ServiceOptions
	66, // 17: data.ConnectionResponse.localRoom:type_name -> data.Room
	57, // 18: data.ConnectionResponse.threads:type_name -> data.ConnectionResponse.ThreadsEntry
	1,  // 19: data.DecisionRequest.decision:type_name -> data.Decision
	67, // 20: data.DecisionRequest.payload:type_name -> data.Payload
	68, // 21: data.DecisionRequest.from:type_name -> data.Member
	68, // 22: data.DecisionRequest.to:type_name -> data.Member
	69, // 23: data.DecisionRequest.transfer:type_name -> data.Transfer
	6,  // 24: data.DecisionRequest.type:type_name -> data.DecisionRequest.Type
	63, // 25: data.DeviceRequest.device:type_name -> data.Device
	7,  // 26: data.DeviceRequest.method:type_name -> data.DeviceRequest.Method
	8,  // 27: data.LinkRequest.type:type_name -> data.LinkRequest.Type
	70, // 28: data.LinkRequest.from:type_name -> data.Peer
	70, // 29: data.LinkRequest.to:type_name -> data.Peer
	65, // 30: data.LinkRequest.contact:type_name -> data.Contact
	9,  // 31: data.LinkResponse.type:type_name -> data.LinkResponse.Type
	63, // 32: data.LinkResponse.device:type_name -> data.Device
	70, // 33: data.LinkResponse.from:type_name -> data.Peer
	70, // 34: data.LinkResponse.to:type_name -> data.Peer
	65, // 35: data.LinkResponse.contact:type_name -> data.Contact
	67, // 36: data.InviteRequest.payload:type_name -> data.Payload
	68, // 37: data.InviteRequest.from:type_name -> data.Member
	68, // 38: data.InviteRequest.to:type_name -> data.Member
	69, // 39: data.InviteRequest.transfer:type_name -> data.Transfer
	10, // 40: data.InviteRequest.type:type_name -> data.InviteRequest.Type
	1,  // 41: data.InviteResponse.decision:type_name -> data.Decision
	67, // 42: data.InviteResponse.payload:type_name -> data.Payload
	68, // 43: data.InviteResponse.from:type_name -> data.Member
	68, // 44: data.InviteResponse.to:type_name -> data.Member
	69, // 45: data.InviteResponse.transfer:type_name -> data.Transfer
	11, // 46: data.InviteResponse.type:type_name -> data.InviteResponse.Type
	12, // 47: data.MailboxRequest.action:type_name -> data.MailboxRequest.Action
	13, // 48: data.MailboxResponse.action:type_name -> data.MailboxResponse.Action
	71, // 49: data.UpdateRequest.properties:type_name -> data.Peer.Properties
	65, // 50: data.UpdateRequest.contact:type_name -> data.Contact
	72, // 51: data.UpdateRequest.position:type_name -> data.Position
	14, // 52: data.VerifyRequest.type:type_name -> data.VerifyRequest.Type
	15, // 53: data.CompleteEvent.direction:type_name -> data.CompleteEvent.Direction
	69, // 54: data.CompleteEvent.transfer:type_name -> data.Transfer
	63, // 55: data.LinkEvent.device:type_name -> data.Device
	65, // 56: data.LinkEvent.contact:type_name -> data.Contact
	34, // 57: data.MailEvent.invite:type_name -> data.InviteRequest
	66, // 58: data.RoomEvent.room:type_name -> data.Room
	68, // 59: data.RoomEvent.member:type_name -> data.Member
	16, // 60: data.RoomEvent.subject:type_name -> data.RoomEvent.Subject
	73, // 61: data.StatusEvent.value:type_name -> data.Status
	66, // 62: data.SyncEvent.room:type_name -> data.Room
	68, // 63: data.SyncEvent.member:type_name -> data.Member
	65, // 64: data.SyncEvent.contact:type_name -> data.Contact
	17, // 65: data.SyncEvent.subject:type_name -> data.SyncEvent.Subject
	18, // 66: data.GenericRequest.type:type_name -> data.GenericRequest.Type
	19, // 67: data.GenericResponse.type:type_name -> data.GenericResponse.Type
	20, // 68: data.GenericEvent.type:type_name -> data.GenericEvent.Type
	56, // 69: data.ConnectionRequest.HostOptions.listenAddrs:type_name -> data.ConnectionRequest.IPAddress
	5,  // 70: data.ConnectionRequest.IPAddress.family:type_name -> data.ConnectionRequest.IPAddress.Family
	58, // 71: data.ConnectionResponse.ThreadsEntry.value:type_name -> data.ConnectionResponse.TextileThread
	25, // 72: data.NodeService.Initialize:input_type -> data.InitializeRequest
	26, // 73: data.NodeService.Connect:input_type -> data.ConnectionRequest
	21, // 74: data.NodeService.Action:input_type -> data.ActionRequest
	32, // 75: data.NodeService.Link:input_type -> data.LinkRequest
	23, // 76: data.NodeService.Sign:input_type -> data.AuthRequest
	39, // 77: data.NodeService.Verify:input_type -> data.VerifyRequest
	38, // 78: data.NodeService.Update:input_type -> data.UpdateRequest
	34, // 79: data.NodeService.Invite:input_type -> data.InviteRequest
	28, // 80: data.NodeService.Respond:input_type -> data.DecisionRequest
	36, // 81: data.NodeService.Mail:input_type -> data.MailboxRequest
	51, // 82: data.NodeService.CallAuthResponse:input_type -> data.NoRequest
	51, // 83: data.NodeService.CallActionResponse:input_type -> data.NoRequest
	51, // 84: data.NodeService.CallLinkResponse:input_type -> data.NoRequest
	51, // 85: data.NodeService.CallDecisionResponse:input_type -> data.NoRequest
	51, // 86: data.NodeService.CallInviteResponse:input_type -> data.NoRequest
	51, // 87: data.NodeService.CallMailboxResponse:input_type -> data.NoRequest
	51, // 88: data.NodeService.CallVerifyResponse:input_type -> data.NoRequest
	51, // 89: data.NodeService.OnStatus:input_type -> data.NoRequest
	51, // 90: data.NodeService.OnLink:input_type -> data.NoRequest
	51, // 91: data.NodeService.OnRoom:input_type -> data.NoRequest
	51, // 92: data.NodeService.OnInvite:input_type -> data.NoRequest
	51, // 93: data.NodeService.OnReply:input_type -> data.NoRequest
	51, // 94: data.NodeService.OnMail:input_type -> data.NoRequest
	51, // 95: data.NodeService.OnProgress:input_type -> data.NoRequest
	51, // 96: data.NodeService.OnComplete:input_type -> data.NoRequest
	51, // 97: data.NodeService.OnError:input_type -> data.NoRequest
	52, // 98: data.NodeService.Initialize:output_type -> data.NoResponse
	52, // 99: data.NodeService.Connect:output_type -> data.NoResponse
	52, // 100: data.NodeService.Action:output_type -> data.NoResponse
	52, // 101: data.NodeService.Link:output_type -> data.NoResponse
	52, // 102: data.NodeService.Sign:output_type -> data.NoResponse
	52, // 103: data.NodeService.Verify:output_type -> data.NoResponse
	52, // 104: data.NodeService.Update:output_type -> data.NoResponse
	52, // 105: data.NodeService.Invite:output_type -> data.NoResponse
	52, // 106: data.NodeService.Respond:output_type -> data.NoResponse
	52, // 107: data.NodeService.Mail:output_type -> data.NoResponse
	24, // 108: data.NodeService.CallAuthResponse:output_type -> data.AuthResponse
	22, // 109: data.NodeService.CallActionResponse:output_type -> data.ActionResponse
	33, // 110: data.NodeService.CallLinkResponse:output_type -> data.LinkResponse
	29, // 111: data.NodeService.CallDecisionResponse:output_type -> data.DecisionResponse
	35, // 112: data.NodeService.CallInviteResponse:output_type -> data.InviteResponse
	37, // 113: data.NodeService.CallMailboxResponse:output_type -> data.MailboxResponse
	40, // 114: data.NodeService.CallVerifyResponse:output_type -> data.VerifyResponse
	46, // 115: data.NodeService.OnStatus:output_type -> data.StatusEvent
	42, // 116: data.NodeService.OnLink:output_type -> data.LinkEvent
	45, // 117: data.NodeService.OnRoom:output_type -> data.RoomEvent
	34, // 118: data.NodeService.OnInvite:output_type -> data.InviteRequest
	35, // 119: data.NodeService.OnReply:output_type -> data.InviteResponse
	43, // 120: data.NodeService.OnMail:output_type -> data.MailEvent
	44, // 121: data.NodeService.OnProgress:output_type -> data.ProgressEvent
	41, // 122: data.NodeService.OnComplete:output_type -> data.CompleteEvent
	74, // 123: data.NodeService.OnError:output_type -> data.ErrorEvent
	98, // [98:124] is the sub-list for method output_type
	72, // [72:98] is the sub-list for method input_type
	72, // [72:72] is the sub-list for extension type_name
	72, // [72:72] is the sub-list for extension extendee
	0,  // [0:72] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	file_data_proto_init()
	file_error_proto_init()
	file_peer_proto_init()
	file_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailboxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailboxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionRequest_HostOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionRequest_ServiceOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionRequest_IPAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionResponse_TextileThread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ActionResponse_Location)(nil),
		(*ActionResponse_UrlLink)(nil),
		(*ActionResponse_Lifecycle)(nil),
		(*ActionResponse_Linkers)(nil),
	}
	file_api_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_api_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_api_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_api_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_api_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*UpdateRequest_Properties)(nil),
		(*UpdateRequest_Contact)(nil),
		(*UpdateRequest_Position)(nil),
	}
	file_api_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*VerifyRequest_BufferValue)(nil),
		(*VerifyRequest_TextValue)(nil),
		(*VerifyRequest_SignedBuffer)(nil),
		(*VerifyRequest_SignedText)(nil),
	}
	file_api_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_api_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_api_proto_msgTypes[34].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      21,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
