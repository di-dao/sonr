{
  "swagger": "2.0",
  "info": {
    "title": "highway/authentication/v1/service.proto",
    "description": "Package highway.authentication.v1 provides authentication services.",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AuthenticationService"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/highway/auth/current": {
      "get": {
        "summary": "CurrentUser retrieves the currently authenticated user.",
        "operationId": "CurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CurrentUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": ["AuthenticationService"]
      }
    },
    "/highway/auth/jwt/refresh/{jwt}": {
      "post": {
        "summary": "RefreshToken refreshes a user's authentication token.",
        "operationId": "RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "jwt",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["AuthenticationService"]
      }
    },
    "/highway/auth/jwt/verify/{jwt}": {
      "post": {
        "summary": "VerifyToken verifies a user's authentication token.",
        "operationId": "VerifyToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerifyTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "jwt",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["AuthenticationService"]
      }
    },
    "/highway/auth/login/{origin}": {
      "post": {
        "summary": "Login authenticates a user.",
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "origin",
            "description": "The origin of the request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "alias",
            "description": "The user's alias.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assertion",
            "description": "The user's assertion.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["AuthenticationService"]
      }
    },
    "/highway/auth/params/{origin}": {
      "get": {
        "summary": "Params retrieves authentication parameters.",
        "operationId": "Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "origin",
            "description": "The origin of the request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "existing",
            "description": "Indicates if the user exists.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "alias",
            "description": "The user's alias.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["AuthenticationService"]
      }
    },
    "/highway/auth/register/{origin}": {
      "post": {
        "summary": "Register registers a new user.",
        "operationId": "Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "origin",
            "description": "The origin of the request.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "description": "The user's username.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attestation",
            "description": "The user's attestation.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "challenge",
            "description": "The challenge for the user.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["AuthenticationService"]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CurrentUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates if the request was successful."
        },
        "message": {
          "type": "string",
          "description": "A message about the request."
        },
        "address": {
          "type": "string",
          "description": "The user's address."
        },
        "alias": {
          "type": "string",
          "description": "The user's alias."
        },
        "origin": {
          "type": "string",
          "description": "The origin of the request."
        }
      },
      "description": "CurrentUserResponse is the response from the CurrentUser method."
    },
    "v1LoginResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates if the login was successful."
        },
        "message": {
          "type": "string",
          "description": "A message about the login attempt."
        },
        "jwt": {
          "type": "string",
          "description": "The user's JSON Web Token."
        },
        "address": {
          "type": "string",
          "description": "The user's address."
        },
        "origin": {
          "type": "string",
          "description": "The origin of the request."
        }
      },
      "description": "LoginResponse is the response from the Login method."
    },
    "v1ParamsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates if the request was successful."
        },
        "message": {
          "type": "string",
          "description": "A message about the request."
        },
        "existing": {
          "type": "boolean",
          "description": "Indicates if the user exists."
        },
        "origin": {
          "type": "string",
          "description": "The origin of the request."
        },
        "alias": {
          "type": "string",
          "description": "The user's alias."
        },
        "address": {
          "type": "string",
          "description": "The user's address."
        },
        "challenge": {
          "type": "string",
          "description": "The challenge for the user."
        },
        "attestationOptions": {
          "type": "string",
          "description": "The attestation options for the user."
        },
        "assertionOptions": {
          "type": "string",
          "description": "The assertion options for the user."
        }
      },
      "description": "ParamsResponse is the response from the Params method."
    },
    "v1RefreshTokenResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates if the token refresh was successful."
        },
        "message": {
          "type": "string",
          "description": "A message about the token refresh attempt."
        },
        "newJwt": {
          "type": "string",
          "description": "The new JSON Web Token."
        }
      },
      "description": "RefreshTokenResponse is the response from the RefreshToken method."
    },
    "v1RegisterResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates if the registration was successful."
        },
        "message": {
          "type": "string",
          "description": "A message about the registration attempt."
        },
        "txHash": {
          "type": "string",
          "description": "The transaction hash of the registration."
        },
        "address": {
          "type": "string",
          "description": "The user's address."
        },
        "jwt": {
          "type": "string",
          "description": "The user's JSON Web Token."
        },
        "origin": {
          "type": "string",
          "description": "The origin of the request."
        }
      },
      "description": "RegisterResponse is the response from the Register method."
    },
    "v1VerifyTokenResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates if the token verification was successful."
        },
        "message": {
          "type": "string",
          "description": "A message about the token verification attempt."
        },
        "isValid": {
          "type": "boolean",
          "description": "Indicates if the token is valid."
        }
      },
      "description": "VerifyTokenResponse is the response from the VerifyToken method."
    }
  }
}
