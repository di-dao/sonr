name: Official Release Workflow

on:
  push:
    tags:
      - v*

jobs:
  ## ------------------------------------------------------------
  ## [PRE-RUN] Drafts release & Bumps version
  ## ------------------------------------------------------------
  prepare-release:
    name: ‚è∞ Prepare for Release
    runs-on: ubuntu-latest
    outputs:
      new_tag_upload_url: ${{ steps.new_tag_release.outputs.upload_url }}
      tag_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
      - uses: nowsprinting/check-version-format-action@v3
        if: github.event.pull_request.merged == false
        id: version
        with:
          prefix: "v"

      - id: tag
        if: github.event.pull_request.merged == false
        uses: dawidd6/action-get-tag@v1

      - name: Create Release
        id: create_release
        if: github.event.pull_request.merged == false
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref }}
          name: ${{steps.tag.outputs.tag}}
          draft: false
          prerelease: ${{steps.version.outputs.is_stable == 'false'}}
          generateReleaseNotes: true

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for iOS
  ## ------------------------------------------------------------
  bind-motor-ios:
    name: üçé Bind Motor for iOS
    runs-on: macos-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
      - run: mkdir -p build
        working-directory: ${{ github.workspace}}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor xcFramework and Upload to GitHub Release
      # ---
      - name: Build iOS XCFramework for Motor
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          sh scripts/bind.sh -i
          gh release upload ${{ steps.tag.outputs.tag }} build/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAR_COMPRESS: true

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for Android
  ## ------------------------------------------------------------
  bind-motor-android:
    name: ü§ñ Bind Motor for Android
    runs-on: ubuntu-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
      - run: mkdir -p build
        working-directory: ${{ github.workspace }}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor AAR Library and Upload to GitHub Release
      # ---
      - name: Build Motor AAR Library
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          sh scripts/bind.sh -a
          gh release upload ${{ steps.tag.outputs.tag }} build/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          TAR_COMPRESS: true

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for Android
  ## ------------------------------------------------------------
  bind-motor-mac:
    name: üçé Bind Motor for macOS
    runs-on: macos-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
      - run: mkdir -p build
        working-directory: ${{ github.workspace}}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor xcFramework and Upload to GitHub Release
      # ---
      - name: Build macOS XCFramework for Motor
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          sh scripts/bind.sh -m
          gh release upload ${{ steps.tag.outputs.tag }} build/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAR_COMPRESS: true

  ## ------------------------------------------------------------
  ## [MOTOR] Build and release for Wasm
  ## ------------------------------------------------------------
  bind-motor-wasm:
    name: üåè Bind Motor for Web
    runs-on: ubuntu-latest
    needs:
      - prepare-release
    steps:
      # ---
      # 1. Setup Environment
      # ---
      - name: Setup Environment
        uses: actions/checkout@v3
      - run: mkdir -p build
        working-directory: ${{ github.workspace }}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      # ---
      # 2. Build Motor JS Library and Upload to GitHub Release
      # ---
      - name: Build Motor JS Library
        run: |
          sh scripts/bind.sh -w
          gh release upload ${{ steps.tag.outputs.tag }} build/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAR_COMPRESS: true


  ## ------------------------------------------------------------
  ## [BLOCKCHAIN] Build and release for linux, macos
  ## ------------------------------------------------------------
  build-blockchain:
    strategy:
      max-parallel: 8
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: [1.18]
        ignite-version: [v0.24.0]
    name: "‚õìÔ∏è Release Blockchain for ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: tag
        uses: dawidd6/action-get-tag@v1

      - uses: actions/setup-go@v3
        with:
          go-version: ~${{ matrix.go-version }}

      - name: Install Ignite
        run: |
          sudo curl https://get.ignite.com/cli@${{matrix.ignite-version}}! | sudo bash

      - name: Run build against Release target for macos
        if: ${{matrix.os == 'macos-latest'}}
        continue-on-error: true
        run: |
          ignite chain build --release -t darwin:amd64
          gh release upload ${{ steps.tag.outputs.tag }} release/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Run build against Release target for ubuntu
        if: ${{matrix.os == 'ubuntu-latest'}}
        continue-on-error: false
        run: |
          ignite chain build --release -t linux:amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
