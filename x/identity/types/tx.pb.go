// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: core/identity/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgRegisterIdentity struct {
	Creator     string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DidDocument *DIDDocument `protobuf:"bytes,2,opt,name=did_document,json=didDocument,proto3" json:"did_document,omitempty"`
	WalletId    uint64       `protobuf:"varint,3,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (m *MsgRegisterIdentity) Reset()         { *m = MsgRegisterIdentity{} }
func (m *MsgRegisterIdentity) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterIdentity) ProtoMessage()    {}
func (*MsgRegisterIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{0}
}
func (m *MsgRegisterIdentity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterIdentity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterIdentity.Merge(m, src)
}
func (m *MsgRegisterIdentity) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterIdentity proto.InternalMessageInfo

func (m *MsgRegisterIdentity) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRegisterIdentity) GetDidDocument() *DIDDocument {
	if m != nil {
		return m.DidDocument
	}
	return nil
}

func (m *MsgRegisterIdentity) GetWalletId() uint64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

type MsgRegisterIdentityResponse struct {
	Success     bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	DidDocument *DIDDocument `protobuf:"bytes,2,opt,name=did_document,json=didDocument,proto3" json:"did_document,omitempty"`
}

func (m *MsgRegisterIdentityResponse) Reset()         { *m = MsgRegisterIdentityResponse{} }
func (m *MsgRegisterIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterIdentityResponse) ProtoMessage()    {}
func (*MsgRegisterIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{1}
}
func (m *MsgRegisterIdentityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterIdentityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterIdentityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterIdentityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterIdentityResponse.Merge(m, src)
}
func (m *MsgRegisterIdentityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterIdentityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterIdentityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterIdentityResponse proto.InternalMessageInfo

func (m *MsgRegisterIdentityResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *MsgRegisterIdentityResponse) GetDidDocument() *DIDDocument {
	if m != nil {
		return m.DidDocument
	}
	return nil
}

type MsgCreateControllerAccount struct {
	Address        string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey      string   `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Authenticators []string `protobuf:"bytes,4,rep,name=authenticators,proto3" json:"authenticators,omitempty"`
	Wallets        []string `protobuf:"bytes,5,rep,name=wallets,proto3" json:"wallets,omitempty"`
}

func (m *MsgCreateControllerAccount) Reset()         { *m = MsgCreateControllerAccount{} }
func (m *MsgCreateControllerAccount) String() string { return proto.CompactTextString(m) }
func (*MsgCreateControllerAccount) ProtoMessage()    {}
func (*MsgCreateControllerAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{2}
}
func (m *MsgCreateControllerAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateControllerAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateControllerAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateControllerAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateControllerAccount.Merge(m, src)
}
func (m *MsgCreateControllerAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateControllerAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateControllerAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateControllerAccount proto.InternalMessageInfo

func (m *MsgCreateControllerAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreateControllerAccount) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *MsgCreateControllerAccount) GetAuthenticators() []string {
	if m != nil {
		return m.Authenticators
	}
	return nil
}

func (m *MsgCreateControllerAccount) GetWallets() []string {
	if m != nil {
		return m.Wallets
	}
	return nil
}

type MsgCreateControllerAccountResponse struct {
	Id      uint64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account *ControllerAccount `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *MsgCreateControllerAccountResponse) Reset()         { *m = MsgCreateControllerAccountResponse{} }
func (m *MsgCreateControllerAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateControllerAccountResponse) ProtoMessage()    {}
func (*MsgCreateControllerAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{3}
}
func (m *MsgCreateControllerAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateControllerAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateControllerAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateControllerAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateControllerAccountResponse.Merge(m, src)
}
func (m *MsgCreateControllerAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateControllerAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateControllerAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateControllerAccountResponse proto.InternalMessageInfo

func (m *MsgCreateControllerAccountResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgCreateControllerAccountResponse) GetAccount() *ControllerAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

type MsgUpdateControllerAccount struct {
	Address        string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Id             uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Authenticators []string `protobuf:"bytes,4,rep,name=authenticators,proto3" json:"authenticators,omitempty"`
	Wallets        []string `protobuf:"bytes,5,rep,name=wallets,proto3" json:"wallets,omitempty"`
}

func (m *MsgUpdateControllerAccount) Reset()         { *m = MsgUpdateControllerAccount{} }
func (m *MsgUpdateControllerAccount) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateControllerAccount) ProtoMessage()    {}
func (*MsgUpdateControllerAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{4}
}
func (m *MsgUpdateControllerAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateControllerAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateControllerAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateControllerAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateControllerAccount.Merge(m, src)
}
func (m *MsgUpdateControllerAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateControllerAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateControllerAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateControllerAccount proto.InternalMessageInfo

func (m *MsgUpdateControllerAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateControllerAccount) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateControllerAccount) GetAuthenticators() []string {
	if m != nil {
		return m.Authenticators
	}
	return nil
}

func (m *MsgUpdateControllerAccount) GetWallets() []string {
	if m != nil {
		return m.Wallets
	}
	return nil
}

type MsgUpdateControllerAccountResponse struct {
	Account *ControllerAccount `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *MsgUpdateControllerAccountResponse) Reset()         { *m = MsgUpdateControllerAccountResponse{} }
func (m *MsgUpdateControllerAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateControllerAccountResponse) ProtoMessage()    {}
func (*MsgUpdateControllerAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{5}
}
func (m *MsgUpdateControllerAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateControllerAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateControllerAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateControllerAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateControllerAccountResponse.Merge(m, src)
}
func (m *MsgUpdateControllerAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateControllerAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateControllerAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateControllerAccountResponse proto.InternalMessageInfo

func (m *MsgUpdateControllerAccountResponse) GetAccount() *ControllerAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

type MsgDeleteControllerAccount struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgDeleteControllerAccount) Reset()         { *m = MsgDeleteControllerAccount{} }
func (m *MsgDeleteControllerAccount) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteControllerAccount) ProtoMessage()    {}
func (*MsgDeleteControllerAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{6}
}
func (m *MsgDeleteControllerAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteControllerAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteControllerAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteControllerAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteControllerAccount.Merge(m, src)
}
func (m *MsgDeleteControllerAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteControllerAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteControllerAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteControllerAccount proto.InternalMessageInfo

func (m *MsgDeleteControllerAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteControllerAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgDeleteControllerAccountResponse struct {
}

func (m *MsgDeleteControllerAccountResponse) Reset()         { *m = MsgDeleteControllerAccountResponse{} }
func (m *MsgDeleteControllerAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteControllerAccountResponse) ProtoMessage()    {}
func (*MsgDeleteControllerAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{7}
}
func (m *MsgDeleteControllerAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteControllerAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteControllerAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteControllerAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteControllerAccountResponse.Merge(m, src)
}
func (m *MsgDeleteControllerAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteControllerAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteControllerAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteControllerAccountResponse proto.InternalMessageInfo

type MsgCreateEscrowAccount struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address          string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey        string `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	LockupUsdBalance string `protobuf:"bytes,4,opt,name=lockupUsdBalance,proto3" json:"lockupUsdBalance,omitempty"`
}

func (m *MsgCreateEscrowAccount) Reset()         { *m = MsgCreateEscrowAccount{} }
func (m *MsgCreateEscrowAccount) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEscrowAccount) ProtoMessage()    {}
func (*MsgCreateEscrowAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{8}
}
func (m *MsgCreateEscrowAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEscrowAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEscrowAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEscrowAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEscrowAccount.Merge(m, src)
}
func (m *MsgCreateEscrowAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEscrowAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEscrowAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEscrowAccount proto.InternalMessageInfo

func (m *MsgCreateEscrowAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateEscrowAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreateEscrowAccount) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *MsgCreateEscrowAccount) GetLockupUsdBalance() string {
	if m != nil {
		return m.LockupUsdBalance
	}
	return ""
}

type MsgCreateEscrowAccountResponse struct {
	Id      uint64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account *EscrowAccount `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *MsgCreateEscrowAccountResponse) Reset()         { *m = MsgCreateEscrowAccountResponse{} }
func (m *MsgCreateEscrowAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEscrowAccountResponse) ProtoMessage()    {}
func (*MsgCreateEscrowAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{9}
}
func (m *MsgCreateEscrowAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEscrowAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEscrowAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEscrowAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEscrowAccountResponse.Merge(m, src)
}
func (m *MsgCreateEscrowAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEscrowAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEscrowAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEscrowAccountResponse proto.InternalMessageInfo

func (m *MsgCreateEscrowAccountResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgCreateEscrowAccountResponse) GetAccount() *EscrowAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

type MsgUpdateEscrowAccount struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id               uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Address          string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey        string `protobuf:"bytes,4,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	LockupUsdBalance string `protobuf:"bytes,5,opt,name=lockupUsdBalance,proto3" json:"lockupUsdBalance,omitempty"`
}

func (m *MsgUpdateEscrowAccount) Reset()         { *m = MsgUpdateEscrowAccount{} }
func (m *MsgUpdateEscrowAccount) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEscrowAccount) ProtoMessage()    {}
func (*MsgUpdateEscrowAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{10}
}
func (m *MsgUpdateEscrowAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEscrowAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEscrowAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEscrowAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEscrowAccount.Merge(m, src)
}
func (m *MsgUpdateEscrowAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEscrowAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEscrowAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEscrowAccount proto.InternalMessageInfo

func (m *MsgUpdateEscrowAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateEscrowAccount) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateEscrowAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateEscrowAccount) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *MsgUpdateEscrowAccount) GetLockupUsdBalance() string {
	if m != nil {
		return m.LockupUsdBalance
	}
	return ""
}

type MsgUpdateEscrowAccountResponse struct {
}

func (m *MsgUpdateEscrowAccountResponse) Reset()         { *m = MsgUpdateEscrowAccountResponse{} }
func (m *MsgUpdateEscrowAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEscrowAccountResponse) ProtoMessage()    {}
func (*MsgUpdateEscrowAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{11}
}
func (m *MsgUpdateEscrowAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEscrowAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEscrowAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEscrowAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEscrowAccountResponse.Merge(m, src)
}
func (m *MsgUpdateEscrowAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEscrowAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEscrowAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEscrowAccountResponse proto.InternalMessageInfo

type MsgDeleteEscrowAccount struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgDeleteEscrowAccount) Reset()         { *m = MsgDeleteEscrowAccount{} }
func (m *MsgDeleteEscrowAccount) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEscrowAccount) ProtoMessage()    {}
func (*MsgDeleteEscrowAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{12}
}
func (m *MsgDeleteEscrowAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEscrowAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEscrowAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEscrowAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEscrowAccount.Merge(m, src)
}
func (m *MsgDeleteEscrowAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEscrowAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEscrowAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEscrowAccount proto.InternalMessageInfo

func (m *MsgDeleteEscrowAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteEscrowAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgDeleteEscrowAccountResponse struct {
}

func (m *MsgDeleteEscrowAccountResponse) Reset()         { *m = MsgDeleteEscrowAccountResponse{} }
func (m *MsgDeleteEscrowAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEscrowAccountResponse) ProtoMessage()    {}
func (*MsgDeleteEscrowAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_893033e8c7493d64, []int{13}
}
func (m *MsgDeleteEscrowAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEscrowAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEscrowAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEscrowAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEscrowAccountResponse.Merge(m, src)
}
func (m *MsgDeleteEscrowAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEscrowAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEscrowAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEscrowAccountResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRegisterIdentity)(nil), "core.identity.MsgRegisterIdentity")
	proto.RegisterType((*MsgRegisterIdentityResponse)(nil), "core.identity.MsgRegisterIdentityResponse")
	proto.RegisterType((*MsgCreateControllerAccount)(nil), "core.identity.MsgCreateControllerAccount")
	proto.RegisterType((*MsgCreateControllerAccountResponse)(nil), "core.identity.MsgCreateControllerAccountResponse")
	proto.RegisterType((*MsgUpdateControllerAccount)(nil), "core.identity.MsgUpdateControllerAccount")
	proto.RegisterType((*MsgUpdateControllerAccountResponse)(nil), "core.identity.MsgUpdateControllerAccountResponse")
	proto.RegisterType((*MsgDeleteControllerAccount)(nil), "core.identity.MsgDeleteControllerAccount")
	proto.RegisterType((*MsgDeleteControllerAccountResponse)(nil), "core.identity.MsgDeleteControllerAccountResponse")
	proto.RegisterType((*MsgCreateEscrowAccount)(nil), "core.identity.MsgCreateEscrowAccount")
	proto.RegisterType((*MsgCreateEscrowAccountResponse)(nil), "core.identity.MsgCreateEscrowAccountResponse")
	proto.RegisterType((*MsgUpdateEscrowAccount)(nil), "core.identity.MsgUpdateEscrowAccount")
	proto.RegisterType((*MsgUpdateEscrowAccountResponse)(nil), "core.identity.MsgUpdateEscrowAccountResponse")
	proto.RegisterType((*MsgDeleteEscrowAccount)(nil), "core.identity.MsgDeleteEscrowAccount")
	proto.RegisterType((*MsgDeleteEscrowAccountResponse)(nil), "core.identity.MsgDeleteEscrowAccountResponse")
}

func init() { proto.RegisterFile("core/identity/tx.proto", fileDescriptor_893033e8c7493d64) }

var fileDescriptor_893033e8c7493d64 = []byte{
	// 665 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x96, 0x4f, 0x6b, 0xdb, 0x3e,
	0x18, 0xc7, 0xeb, 0x24, 0xfd, 0x63, 0xf5, 0xf7, 0x2b, 0xc5, 0x85, 0xd6, 0xb8, 0xc5, 0x18, 0xb3,
	0x8e, 0xac, 0xd0, 0x84, 0x75, 0xb0, 0xc3, 0x60, 0x87, 0xb5, 0xd9, 0xa1, 0x6c, 0x85, 0x61, 0xe8,
	0x65, 0x97, 0xce, 0x91, 0x44, 0x2a, 0xea, 0x5a, 0xc6, 0x92, 0x97, 0xf6, 0x1d, 0x0c, 0x76, 0xd9,
	0x69, 0x97, 0xdd, 0xf7, 0x5a, 0x76, 0xec, 0x71, 0xc7, 0xd1, 0xbe, 0x91, 0x61, 0x39, 0xf6, 0x6c,
	0x47, 0x8a, 0x53, 0x72, 0x94, 0xf2, 0x8d, 0xbe, 0xdf, 0xe7, 0xf3, 0x48, 0x0f, 0x06, 0xdb, 0x90,
	0xc6, 0xb8, 0x4f, 0x10, 0x0e, 0x39, 0xe1, 0xb7, 0x7d, 0x7e, 0xd3, 0x8b, 0x62, 0xca, 0xa9, 0xf1,
	0x7f, 0xba, 0xdf, 0xcb, 0xf7, 0xad, 0x9d, 0xaa, 0x0c, 0x11, 0x94, 0xe9, 0xac, 0xdd, 0xea, 0x0f,
	0x3e, 0x84, 0x34, 0x09, 0x79, 0xf6, 0xa3, 0xfb, 0x55, 0x03, 0x5b, 0x67, 0x6c, 0xe4, 0xe1, 0x11,
	0x61, 0x1c, 0xc7, 0xa7, 0x13, 0x95, 0x61, 0x82, 0x55, 0x18, 0x63, 0x9f, 0xd3, 0xd8, 0xd4, 0x1c,
	0xad, 0xab, 0x7b, 0xf9, 0xd2, 0x78, 0x0d, 0xfe, 0x43, 0x04, 0x5d, 0x20, 0x0a, 0x93, 0x6b, 0x1c,
	0x72, 0xb3, 0xe5, 0x68, 0xdd, 0xf5, 0x23, 0xab, 0x57, 0x49, 0xd3, 0x1b, 0x9c, 0x0e, 0x06, 0x13,
	0x85, 0xb7, 0x8e, 0x08, 0xca, 0x17, 0xc6, 0x2e, 0xd0, 0xc7, 0x7e, 0x10, 0x60, 0x7e, 0x41, 0x90,
	0xd9, 0x76, 0xb4, 0x6e, 0xc7, 0x5b, 0xcb, 0x36, 0x4e, 0x91, 0xfb, 0x19, 0xec, 0x4a, 0xc2, 0x78,
	0x98, 0x45, 0x34, 0x64, 0x38, 0x0d, 0xc5, 0x12, 0x08, 0x31, 0x63, 0x22, 0xd4, 0x9a, 0x97, 0x2f,
	0x17, 0x0c, 0xe5, 0x7e, 0xd7, 0x80, 0x75, 0xc6, 0x46, 0x27, 0x69, 0x89, 0xf8, 0x84, 0x86, 0x3c,
	0xa6, 0x41, 0x80, 0xe3, 0x37, 0x19, 0xaa, 0xd4, 0xd7, 0x47, 0x28, 0xce, 0x7d, 0x75, 0x2f, 0x5f,
	0x1a, 0x7b, 0x40, 0x8f, 0x92, 0x61, 0x40, 0xe0, 0x3b, 0x7c, 0x2b, 0xaa, 0xd1, 0xbd, 0x7f, 0x1b,
	0xc6, 0x53, 0xb0, 0xe1, 0x27, 0xfc, 0x32, 0x75, 0x87, 0x29, 0x3b, 0x66, 0x76, 0x9c, 0x76, 0x57,
	0xf7, 0x6a, 0xbb, 0xe9, 0xf9, 0x19, 0x02, 0x66, 0x2e, 0x0b, 0x41, 0xbe, 0x74, 0x23, 0xe0, 0xaa,
	0x73, 0x15, 0x5c, 0x36, 0x40, 0x8b, 0x20, 0x11, 0xad, 0xe3, 0xb5, 0x08, 0x32, 0x5e, 0x81, 0xd5,
	0x49, 0x97, 0x27, 0x20, 0x9c, 0x1a, 0x88, 0xe9, 0xa3, 0xf2, 0x3f, 0xb8, 0x5f, 0x32, 0x14, 0xe7,
	0x11, 0x7a, 0x24, 0x8a, 0x2c, 0x44, 0xab, 0x08, 0xb1, 0x78, 0xf1, 0x9f, 0x44, 0xf1, 0x8a, 0x24,
	0x45, 0xf1, 0xa5, 0x62, 0xb5, 0xc7, 0x16, 0xfb, 0x41, 0xd4, 0x3a, 0xc0, 0x01, 0x56, 0xd4, 0xaa,
	0x78, 0x03, 0x25, 0x0a, 0xad, 0x0a, 0x05, 0xf7, 0x89, 0xc8, 0xac, 0x38, 0x31, 0xcf, 0x9c, 0xde,
	0xb7, 0xed, 0xa2, 0xaf, 0x6f, 0x19, 0x8c, 0xe9, 0x78, 0x01, 0xd3, 0x86, 0x5b, 0x78, 0x00, 0x36,
	0x03, 0x0a, 0xaf, 0x92, 0xe8, 0x9c, 0xa1, 0x63, 0x3f, 0xf0, 0x43, 0x88, 0xcd, 0x8e, 0x10, 0x4d,
	0xed, 0xbb, 0x97, 0xc0, 0x96, 0xe7, 0x52, 0xde, 0xb5, 0x97, 0xf5, 0xbb, 0xb6, 0x57, 0xc3, 0x5f,
	0x3d, 0xa6, 0x40, 0xff, 0x33, 0x43, 0x90, 0x75, 0x77, 0x5e, 0x04, 0xf5, 0x3b, 0x56, 0x42, 0xd2,
	0x9e, 0x81, 0xa4, 0x33, 0x0f, 0x92, 0x65, 0x05, 0x12, 0x47, 0x20, 0x91, 0xe4, 0x2c, 0xba, 0xf9,
	0x5e, 0x54, 0x92, 0xf5, 0x7c, 0xe1, 0x66, 0x4e, 0xfc, 0x24, 0xa7, 0xe5, 0x7e, 0x47, 0x3f, 0x56,
	0x40, 0xfb, 0x8c, 0x8d, 0x8c, 0x21, 0xd8, 0x9c, 0x9a, 0xdb, 0x6e, 0x8d, 0xbe, 0x64, 0x9c, 0x5a,
	0x07, 0xcd, 0x9a, 0xa2, 0xdd, 0x63, 0xb0, 0xa3, 0x9a, 0x8a, 0xcf, 0xa6, 0x8f, 0x51, 0x48, 0xad,
	0xe7, 0x73, 0x4b, 0xcb, 0xc6, 0xaa, 0x19, 0x24, 0x31, 0x56, 0x48, 0x65, 0xc6, 0x4d, 0xf3, 0x64,
	0x0c, 0x76, 0x54, 0x03, 0x41, 0x62, 0xac, 0x90, 0xca, 0x8c, 0x1b, 0x86, 0x82, 0x71, 0x05, 0xb6,
	0x64, 0x03, 0x61, 0x5f, 0xc5, 0xae, 0x22, 0xb3, 0x0e, 0xe7, 0x92, 0x95, 0xcd, 0x64, 0x4f, 0x6f,
	0x5f, 0xc5, 0xab, 0xd1, 0x6c, 0xc6, 0x03, 0x49, 0xcd, 0x64, 0xaf, 0x63, 0x5f, 0xc5, 0xa8, 0xd1,
	0x6c, 0xc6, 0xeb, 0x38, 0x3e, 0xfe, 0x75, 0x6f, 0x6b, 0x77, 0xf7, 0xb6, 0xf6, 0xe7, 0xde, 0xd6,
	0xbe, 0x3d, 0xd8, 0x4b, 0x77, 0x0f, 0xf6, 0xd2, 0xef, 0x07, 0x7b, 0xe9, 0x63, 0x77, 0x44, 0xf8,
	0x65, 0x32, 0xec, 0x41, 0x7a, 0xdd, 0x67, 0x34, 0x8c, 0x0f, 0x09, 0xed, 0x8b, 0x6f, 0xa3, 0x9b,
	0xd2, 0xd7, 0xd5, 0x6d, 0x84, 0xd9, 0x70, 0x45, 0x7c, 0x1c, 0xbd, 0xf8, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x54, 0xb5, 0x2a, 0xf7, 0x7b, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	RegisterIdentity(ctx context.Context, in *MsgRegisterIdentity, opts ...grpc.CallOption) (*MsgRegisterIdentityResponse, error)
	CreateControllerAccount(ctx context.Context, in *MsgCreateControllerAccount, opts ...grpc.CallOption) (*MsgCreateControllerAccountResponse, error)
	UpdateControllerAccount(ctx context.Context, in *MsgUpdateControllerAccount, opts ...grpc.CallOption) (*MsgUpdateControllerAccountResponse, error)
	DeleteControllerAccount(ctx context.Context, in *MsgDeleteControllerAccount, opts ...grpc.CallOption) (*MsgDeleteControllerAccountResponse, error)
	CreateEscrowAccount(ctx context.Context, in *MsgCreateEscrowAccount, opts ...grpc.CallOption) (*MsgCreateEscrowAccountResponse, error)
	UpdateEscrowAccount(ctx context.Context, in *MsgUpdateEscrowAccount, opts ...grpc.CallOption) (*MsgUpdateEscrowAccountResponse, error)
	DeleteEscrowAccount(ctx context.Context, in *MsgDeleteEscrowAccount, opts ...grpc.CallOption) (*MsgDeleteEscrowAccountResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) RegisterIdentity(ctx context.Context, in *MsgRegisterIdentity, opts ...grpc.CallOption) (*MsgRegisterIdentityResponse, error) {
	out := new(MsgRegisterIdentityResponse)
	err := c.cc.Invoke(ctx, "/core.identity.Msg/RegisterIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateControllerAccount(ctx context.Context, in *MsgCreateControllerAccount, opts ...grpc.CallOption) (*MsgCreateControllerAccountResponse, error) {
	out := new(MsgCreateControllerAccountResponse)
	err := c.cc.Invoke(ctx, "/core.identity.Msg/CreateControllerAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateControllerAccount(ctx context.Context, in *MsgUpdateControllerAccount, opts ...grpc.CallOption) (*MsgUpdateControllerAccountResponse, error) {
	out := new(MsgUpdateControllerAccountResponse)
	err := c.cc.Invoke(ctx, "/core.identity.Msg/UpdateControllerAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteControllerAccount(ctx context.Context, in *MsgDeleteControllerAccount, opts ...grpc.CallOption) (*MsgDeleteControllerAccountResponse, error) {
	out := new(MsgDeleteControllerAccountResponse)
	err := c.cc.Invoke(ctx, "/core.identity.Msg/DeleteControllerAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateEscrowAccount(ctx context.Context, in *MsgCreateEscrowAccount, opts ...grpc.CallOption) (*MsgCreateEscrowAccountResponse, error) {
	out := new(MsgCreateEscrowAccountResponse)
	err := c.cc.Invoke(ctx, "/core.identity.Msg/CreateEscrowAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateEscrowAccount(ctx context.Context, in *MsgUpdateEscrowAccount, opts ...grpc.CallOption) (*MsgUpdateEscrowAccountResponse, error) {
	out := new(MsgUpdateEscrowAccountResponse)
	err := c.cc.Invoke(ctx, "/core.identity.Msg/UpdateEscrowAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteEscrowAccount(ctx context.Context, in *MsgDeleteEscrowAccount, opts ...grpc.CallOption) (*MsgDeleteEscrowAccountResponse, error) {
	out := new(MsgDeleteEscrowAccountResponse)
	err := c.cc.Invoke(ctx, "/core.identity.Msg/DeleteEscrowAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	RegisterIdentity(context.Context, *MsgRegisterIdentity) (*MsgRegisterIdentityResponse, error)
	CreateControllerAccount(context.Context, *MsgCreateControllerAccount) (*MsgCreateControllerAccountResponse, error)
	UpdateControllerAccount(context.Context, *MsgUpdateControllerAccount) (*MsgUpdateControllerAccountResponse, error)
	DeleteControllerAccount(context.Context, *MsgDeleteControllerAccount) (*MsgDeleteControllerAccountResponse, error)
	CreateEscrowAccount(context.Context, *MsgCreateEscrowAccount) (*MsgCreateEscrowAccountResponse, error)
	UpdateEscrowAccount(context.Context, *MsgUpdateEscrowAccount) (*MsgUpdateEscrowAccountResponse, error)
	DeleteEscrowAccount(context.Context, *MsgDeleteEscrowAccount) (*MsgDeleteEscrowAccountResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) RegisterIdentity(ctx context.Context, req *MsgRegisterIdentity) (*MsgRegisterIdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterIdentity not implemented")
}
func (*UnimplementedMsgServer) CreateControllerAccount(ctx context.Context, req *MsgCreateControllerAccount) (*MsgCreateControllerAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateControllerAccount not implemented")
}
func (*UnimplementedMsgServer) UpdateControllerAccount(ctx context.Context, req *MsgUpdateControllerAccount) (*MsgUpdateControllerAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateControllerAccount not implemented")
}
func (*UnimplementedMsgServer) DeleteControllerAccount(ctx context.Context, req *MsgDeleteControllerAccount) (*MsgDeleteControllerAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteControllerAccount not implemented")
}
func (*UnimplementedMsgServer) CreateEscrowAccount(ctx context.Context, req *MsgCreateEscrowAccount) (*MsgCreateEscrowAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEscrowAccount not implemented")
}
func (*UnimplementedMsgServer) UpdateEscrowAccount(ctx context.Context, req *MsgUpdateEscrowAccount) (*MsgUpdateEscrowAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEscrowAccount not implemented")
}
func (*UnimplementedMsgServer) DeleteEscrowAccount(ctx context.Context, req *MsgDeleteEscrowAccount) (*MsgDeleteEscrowAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEscrowAccount not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_RegisterIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterIdentity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.identity.Msg/RegisterIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterIdentity(ctx, req.(*MsgRegisterIdentity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateControllerAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateControllerAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateControllerAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.identity.Msg/CreateControllerAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateControllerAccount(ctx, req.(*MsgCreateControllerAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateControllerAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateControllerAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateControllerAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.identity.Msg/UpdateControllerAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateControllerAccount(ctx, req.(*MsgUpdateControllerAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteControllerAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteControllerAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteControllerAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.identity.Msg/DeleteControllerAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteControllerAccount(ctx, req.(*MsgDeleteControllerAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateEscrowAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEscrowAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEscrowAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.identity.Msg/CreateEscrowAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEscrowAccount(ctx, req.(*MsgCreateEscrowAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateEscrowAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateEscrowAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateEscrowAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.identity.Msg/UpdateEscrowAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateEscrowAccount(ctx, req.(*MsgUpdateEscrowAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteEscrowAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteEscrowAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteEscrowAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.identity.Msg/DeleteEscrowAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteEscrowAccount(ctx, req.(*MsgDeleteEscrowAccount))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "core.identity.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterIdentity",
			Handler:    _Msg_RegisterIdentity_Handler,
		},
		{
			MethodName: "CreateControllerAccount",
			Handler:    _Msg_CreateControllerAccount_Handler,
		},
		{
			MethodName: "UpdateControllerAccount",
			Handler:    _Msg_UpdateControllerAccount_Handler,
		},
		{
			MethodName: "DeleteControllerAccount",
			Handler:    _Msg_DeleteControllerAccount_Handler,
		},
		{
			MethodName: "CreateEscrowAccount",
			Handler:    _Msg_CreateEscrowAccount_Handler,
		},
		{
			MethodName: "UpdateEscrowAccount",
			Handler:    _Msg_UpdateEscrowAccount_Handler,
		},
		{
			MethodName: "DeleteEscrowAccount",
			Handler:    _Msg_DeleteEscrowAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "core/identity/tx.proto",
}

func (m *MsgRegisterIdentity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterIdentity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterIdentity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.WalletId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.WalletId))
		i--
		dAtA[i] = 0x18
	}
	if m.DidDocument != nil {
		{
			size, err := m.DidDocument.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterIdentityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterIdentityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterIdentityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DidDocument != nil {
		{
			size, err := m.DidDocument.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateControllerAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateControllerAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateControllerAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Wallets) > 0 {
		for iNdEx := len(m.Wallets) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Wallets[iNdEx])
			copy(dAtA[i:], m.Wallets[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Wallets[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Authenticators) > 0 {
		for iNdEx := len(m.Authenticators) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Authenticators[iNdEx])
			copy(dAtA[i:], m.Authenticators[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Authenticators[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateControllerAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateControllerAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateControllerAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateControllerAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateControllerAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateControllerAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Wallets) > 0 {
		for iNdEx := len(m.Wallets) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Wallets[iNdEx])
			copy(dAtA[i:], m.Wallets[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Wallets[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Authenticators) > 0 {
		for iNdEx := len(m.Authenticators) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Authenticators[iNdEx])
			copy(dAtA[i:], m.Authenticators[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Authenticators[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateControllerAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateControllerAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateControllerAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteControllerAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteControllerAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteControllerAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteControllerAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteControllerAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteControllerAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateEscrowAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEscrowAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEscrowAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LockupUsdBalance) > 0 {
		i -= len(m.LockupUsdBalance)
		copy(dAtA[i:], m.LockupUsdBalance)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LockupUsdBalance)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEscrowAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEscrowAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEscrowAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEscrowAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEscrowAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEscrowAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LockupUsdBalance) > 0 {
		i -= len(m.LockupUsdBalance)
		copy(dAtA[i:], m.LockupUsdBalance)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LockupUsdBalance)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEscrowAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEscrowAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEscrowAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEscrowAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEscrowAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEscrowAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEscrowAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEscrowAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEscrowAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRegisterIdentity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.DidDocument != nil {
		l = m.DidDocument.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.WalletId != 0 {
		n += 1 + sovTx(uint64(m.WalletId))
	}
	return n
}

func (m *MsgRegisterIdentityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Success {
		n += 2
	}
	if m.DidDocument != nil {
		l = m.DidDocument.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateControllerAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Authenticators) > 0 {
		for _, s := range m.Authenticators {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Wallets) > 0 {
		for _, s := range m.Wallets {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateControllerAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Account != nil {
		l = m.Account.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateControllerAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if len(m.Authenticators) > 0 {
		for _, s := range m.Authenticators {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Wallets) > 0 {
		for _, s := range m.Wallets {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateControllerAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Account != nil {
		l = m.Account.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteControllerAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteControllerAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateEscrowAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LockupUsdBalance)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateEscrowAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Account != nil {
		l = m.Account.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateEscrowAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LockupUsdBalance)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateEscrowAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteEscrowAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteEscrowAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRegisterIdentity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterIdentity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterIdentity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DidDocument", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DidDocument == nil {
				m.DidDocument = &DIDDocument{}
			}
			if err := m.DidDocument.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WalletId", wireType)
			}
			m.WalletId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WalletId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterIdentityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterIdentityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterIdentityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DidDocument", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DidDocument == nil {
				m.DidDocument = &DIDDocument{}
			}
			if err := m.DidDocument.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateControllerAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateControllerAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateControllerAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authenticators", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authenticators = append(m.Authenticators, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallets", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wallets = append(m.Wallets, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateControllerAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateControllerAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateControllerAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &ControllerAccount{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateControllerAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateControllerAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateControllerAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authenticators", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authenticators = append(m.Authenticators, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallets", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wallets = append(m.Wallets, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateControllerAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateControllerAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateControllerAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &ControllerAccount{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteControllerAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteControllerAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteControllerAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteControllerAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteControllerAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteControllerAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEscrowAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEscrowAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEscrowAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LockupUsdBalance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LockupUsdBalance = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEscrowAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEscrowAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEscrowAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &EscrowAccount{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEscrowAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEscrowAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEscrowAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LockupUsdBalance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LockupUsdBalance = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEscrowAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEscrowAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEscrowAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEscrowAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEscrowAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEscrowAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEscrowAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEscrowAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEscrowAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
