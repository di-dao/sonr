// Code generated by protoc-gen-go-cosmos-orm-proto. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: sonrhq/sonr/service/module/v1/state_query.proto

package modulev1

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetServiceRecordRequest is the StateQuery/GetServiceRecordRequest request type.
type GetServiceRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id specifies the value of the id field in the primary key.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetServiceRecordRequest) Reset() {
	*x = GetServiceRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRecordRequest) ProtoMessage() {}

func (x *GetServiceRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRecordRequest.ProtoReflect.Descriptor instead.
func (*GetServiceRecordRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetServiceRecordRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetServiceRecordResponse is the StateQuery/GetServiceRecordResponse response type.
type GetServiceRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *ServiceRecord `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetServiceRecordResponse) Reset() {
	*x = GetServiceRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRecordResponse) ProtoMessage() {}

func (x *GetServiceRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRecordResponse.ProtoReflect.Descriptor instead.
func (*GetServiceRecordResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetServiceRecordResponse) GetValue() *ServiceRecord {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetServiceRecordByOriginRequest is the StateQuery/GetServiceRecordByOriginRequest request type.
type GetServiceRecordByOriginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *GetServiceRecordByOriginRequest) Reset() {
	*x = GetServiceRecordByOriginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceRecordByOriginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRecordByOriginRequest) ProtoMessage() {}

func (x *GetServiceRecordByOriginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRecordByOriginRequest.ProtoReflect.Descriptor instead.
func (*GetServiceRecordByOriginRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetServiceRecordByOriginRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

// GetServiceRecordByOriginResponse is the StateQuery/GetServiceRecordByOriginResponse response type.
type GetServiceRecordByOriginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *ServiceRecord `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetServiceRecordByOriginResponse) Reset() {
	*x = GetServiceRecordByOriginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceRecordByOriginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRecordByOriginResponse) ProtoMessage() {}

func (x *GetServiceRecordByOriginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRecordByOriginResponse.ProtoReflect.Descriptor instead.
func (*GetServiceRecordByOriginResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{3}
}

func (x *GetServiceRecordByOriginResponse) GetValue() *ServiceRecord {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListServiceRecordRequest is the StateQuery/ListServiceRecordRequest request type.
type ListServiceRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListServiceRecordRequest_PrefixQuery
	//	*ListServiceRecordRequest_RangeQuery_
	Query isListServiceRecordRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListServiceRecordRequest) Reset() {
	*x = ListServiceRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRecordRequest) ProtoMessage() {}

func (x *ListServiceRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRecordRequest.ProtoReflect.Descriptor instead.
func (*ListServiceRecordRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{4}
}

func (m *ListServiceRecordRequest) GetQuery() isListServiceRecordRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListServiceRecordRequest) GetPrefixQuery() *ListServiceRecordRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListServiceRecordRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListServiceRecordRequest) GetRangeQuery() *ListServiceRecordRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListServiceRecordRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListServiceRecordRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListServiceRecordRequest_Query interface {
	isListServiceRecordRequest_Query()
}

type ListServiceRecordRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListServiceRecordRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListServiceRecordRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListServiceRecordRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListServiceRecordRequest_PrefixQuery) isListServiceRecordRequest_Query() {}

func (*ListServiceRecordRequest_RangeQuery_) isListServiceRecordRequest_Query() {}

// ListServiceRecordResponse is the StateQuery/ListServiceRecordResponse response type.
type ListServiceRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*ServiceRecord `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListServiceRecordResponse) Reset() {
	*x = ListServiceRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRecordResponse) ProtoMessage() {}

func (x *ListServiceRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRecordResponse.ProtoReflect.Descriptor instead.
func (*ListServiceRecordResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{5}
}

func (x *ListServiceRecordResponse) GetValues() []*ServiceRecord {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListServiceRecordResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetCredentialRequest is the StateQuery/GetCredentialRequest request type.
type GetCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id specifies the value of the id field in the primary key.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCredentialRequest) Reset() {
	*x = GetCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialRequest) ProtoMessage() {}

func (x *GetCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{6}
}

func (x *GetCredentialRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetCredentialResponse is the StateQuery/GetCredentialResponse response type.
type GetCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Credential `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCredentialResponse) Reset() {
	*x = GetCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialResponse) ProtoMessage() {}

func (x *GetCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{7}
}

func (x *GetCredentialResponse) GetValue() *Credential {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetCredentialByOriginHandleRequest is the StateQuery/GetCredentialByOriginHandleRequest request type.
type GetCredentialByOriginHandleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Handle string `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *GetCredentialByOriginHandleRequest) Reset() {
	*x = GetCredentialByOriginHandleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByOriginHandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByOriginHandleRequest) ProtoMessage() {}

func (x *GetCredentialByOriginHandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByOriginHandleRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialByOriginHandleRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{8}
}

func (x *GetCredentialByOriginHandleRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *GetCredentialByOriginHandleRequest) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

// GetCredentialByOriginHandleResponse is the StateQuery/GetCredentialByOriginHandleResponse response type.
type GetCredentialByOriginHandleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Credential `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCredentialByOriginHandleResponse) Reset() {
	*x = GetCredentialByOriginHandleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByOriginHandleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByOriginHandleResponse) ProtoMessage() {}

func (x *GetCredentialByOriginHandleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByOriginHandleResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialByOriginHandleResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{9}
}

func (x *GetCredentialByOriginHandleResponse) GetValue() *Credential {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetCredentialByCredentialIdRequest is the StateQuery/GetCredentialByCredentialIdRequest request type.
type GetCredentialByCredentialIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialId []byte `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
}

func (x *GetCredentialByCredentialIdRequest) Reset() {
	*x = GetCredentialByCredentialIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByCredentialIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByCredentialIdRequest) ProtoMessage() {}

func (x *GetCredentialByCredentialIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByCredentialIdRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialByCredentialIdRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{10}
}

func (x *GetCredentialByCredentialIdRequest) GetCredentialId() []byte {
	if x != nil {
		return x.CredentialId
	}
	return nil
}

// GetCredentialByCredentialIdResponse is the StateQuery/GetCredentialByCredentialIdResponse response type.
type GetCredentialByCredentialIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Credential `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCredentialByCredentialIdResponse) Reset() {
	*x = GetCredentialByCredentialIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByCredentialIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByCredentialIdResponse) ProtoMessage() {}

func (x *GetCredentialByCredentialIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByCredentialIdResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialByCredentialIdResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{11}
}

func (x *GetCredentialByCredentialIdResponse) GetValue() *Credential {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetCredentialByPublicKeyRequest is the StateQuery/GetCredentialByPublicKeyRequest request type.
type GetCredentialByPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *GetCredentialByPublicKeyRequest) Reset() {
	*x = GetCredentialByPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByPublicKeyRequest) ProtoMessage() {}

func (x *GetCredentialByPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialByPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{12}
}

func (x *GetCredentialByPublicKeyRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// GetCredentialByPublicKeyResponse is the StateQuery/GetCredentialByPublicKeyResponse response type.
type GetCredentialByPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Credential `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCredentialByPublicKeyResponse) Reset() {
	*x = GetCredentialByPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByPublicKeyResponse) ProtoMessage() {}

func (x *GetCredentialByPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialByPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{13}
}

func (x *GetCredentialByPublicKeyResponse) GetValue() *Credential {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListCredentialRequest is the StateQuery/ListCredentialRequest request type.
type ListCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListCredentialRequest_PrefixQuery
	//	*ListCredentialRequest_RangeQuery_
	Query isListCredentialRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCredentialRequest) Reset() {
	*x = ListCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest) ProtoMessage() {}

func (x *ListCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14}
}

func (m *ListCredentialRequest) GetQuery() isListCredentialRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListCredentialRequest) GetPrefixQuery() *ListCredentialRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListCredentialRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListCredentialRequest) GetRangeQuery() *ListCredentialRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListCredentialRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListCredentialRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListCredentialRequest_Query interface {
	isListCredentialRequest_Query()
}

type ListCredentialRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListCredentialRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListCredentialRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListCredentialRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListCredentialRequest_PrefixQuery) isListCredentialRequest_Query() {}

func (*ListCredentialRequest_RangeQuery_) isListCredentialRequest_Query() {}

// ListCredentialResponse is the StateQuery/ListCredentialResponse response type.
type ListCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Credential `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCredentialResponse) Reset() {
	*x = ListCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialResponse) ProtoMessage() {}

func (x *ListCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialResponse.ProtoReflect.Descriptor instead.
func (*ListCredentialResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{15}
}

func (x *ListCredentialResponse) GetValues() []*Credential {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListCredentialResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetWitnessRequest is the StateQuery/GetWitnessRequest request type.
type GetWitnessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index specifies the value of the index field in the primary key.
	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetWitnessRequest) Reset() {
	*x = GetWitnessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWitnessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWitnessRequest) ProtoMessage() {}

func (x *GetWitnessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWitnessRequest.ProtoReflect.Descriptor instead.
func (*GetWitnessRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{16}
}

func (x *GetWitnessRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

// GetWitnessResponse is the StateQuery/GetWitnessResponse response type.
type GetWitnessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Witness `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetWitnessResponse) Reset() {
	*x = GetWitnessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWitnessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWitnessResponse) ProtoMessage() {}

func (x *GetWitnessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWitnessResponse.ProtoReflect.Descriptor instead.
func (*GetWitnessResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{17}
}

func (x *GetWitnessResponse) GetValue() *Witness {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetWitnessByOriginKeyRequest is the StateQuery/GetWitnessByOriginKeyRequest request type.
type GetWitnessByOriginKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetWitnessByOriginKeyRequest) Reset() {
	*x = GetWitnessByOriginKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWitnessByOriginKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWitnessByOriginKeyRequest) ProtoMessage() {}

func (x *GetWitnessByOriginKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWitnessByOriginKeyRequest.ProtoReflect.Descriptor instead.
func (*GetWitnessByOriginKeyRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{18}
}

func (x *GetWitnessByOriginKeyRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *GetWitnessByOriginKeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// GetWitnessByOriginKeyResponse is the StateQuery/GetWitnessByOriginKeyResponse response type.
type GetWitnessByOriginKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Witness `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetWitnessByOriginKeyResponse) Reset() {
	*x = GetWitnessByOriginKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWitnessByOriginKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWitnessByOriginKeyResponse) ProtoMessage() {}

func (x *GetWitnessByOriginKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWitnessByOriginKeyResponse.ProtoReflect.Descriptor instead.
func (*GetWitnessByOriginKeyResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{19}
}

func (x *GetWitnessByOriginKeyResponse) GetValue() *Witness {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListWitnessRequest is the StateQuery/ListWitnessRequest request type.
type ListWitnessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListWitnessRequest_PrefixQuery
	//	*ListWitnessRequest_RangeQuery_
	Query isListWitnessRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListWitnessRequest) Reset() {
	*x = ListWitnessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWitnessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWitnessRequest) ProtoMessage() {}

func (x *ListWitnessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWitnessRequest.ProtoReflect.Descriptor instead.
func (*ListWitnessRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{20}
}

func (m *ListWitnessRequest) GetQuery() isListWitnessRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListWitnessRequest) GetPrefixQuery() *ListWitnessRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListWitnessRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListWitnessRequest) GetRangeQuery() *ListWitnessRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListWitnessRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListWitnessRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListWitnessRequest_Query interface {
	isListWitnessRequest_Query()
}

type ListWitnessRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListWitnessRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListWitnessRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListWitnessRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListWitnessRequest_PrefixQuery) isListWitnessRequest_Query() {}

func (*ListWitnessRequest_RangeQuery_) isListWitnessRequest_Query() {}

// ListWitnessResponse is the StateQuery/ListWitnessResponse response type.
type ListWitnessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Witness `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListWitnessResponse) Reset() {
	*x = ListWitnessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWitnessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWitnessResponse) ProtoMessage() {}

func (x *ListWitnessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWitnessResponse.ProtoReflect.Descriptor instead.
func (*ListWitnessResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{21}
}

func (x *ListWitnessResponse) GetValues() []*Witness {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListWitnessResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetBaseParamsRequest is the StateQuery/GetBaseParamsRequest request type.
type GetBaseParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBaseParamsRequest) Reset() {
	*x = GetBaseParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBaseParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBaseParamsRequest) ProtoMessage() {}

func (x *GetBaseParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBaseParamsRequest.ProtoReflect.Descriptor instead.
func (*GetBaseParamsRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{22}
}

// GetBaseParamsResponse is the StateQuery/GetBaseParamsResponse request type.
type GetBaseParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *BaseParams `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetBaseParamsResponse) Reset() {
	*x = GetBaseParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBaseParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBaseParamsResponse) ProtoMessage() {}

func (x *GetBaseParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBaseParamsResponse.ProtoReflect.Descriptor instead.
func (*GetBaseParamsResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{23}
}

func (x *GetBaseParamsResponse) GetValue() *BaseParams {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetReadParamsRequest is the StateQuery/GetReadParamsRequest request type.
type GetReadParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetReadParamsRequest) Reset() {
	*x = GetReadParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReadParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadParamsRequest) ProtoMessage() {}

func (x *GetReadParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadParamsRequest.ProtoReflect.Descriptor instead.
func (*GetReadParamsRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{24}
}

// GetReadParamsResponse is the StateQuery/GetReadParamsResponse request type.
type GetReadParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *ReadParams `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetReadParamsResponse) Reset() {
	*x = GetReadParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReadParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadParamsResponse) ProtoMessage() {}

func (x *GetReadParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadParamsResponse.ProtoReflect.Descriptor instead.
func (*GetReadParamsResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{25}
}

func (x *GetReadParamsResponse) GetValue() *ReadParams {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetWriteParamsRequest is the StateQuery/GetWriteParamsRequest request type.
type GetWriteParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWriteParamsRequest) Reset() {
	*x = GetWriteParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWriteParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWriteParamsRequest) ProtoMessage() {}

func (x *GetWriteParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWriteParamsRequest.ProtoReflect.Descriptor instead.
func (*GetWriteParamsRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{26}
}

// GetWriteParamsResponse is the StateQuery/GetWriteParamsResponse request type.
type GetWriteParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *WriteParams `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetWriteParamsResponse) Reset() {
	*x = GetWriteParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWriteParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWriteParamsResponse) ProtoMessage() {}

func (x *GetWriteParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWriteParamsResponse.ProtoReflect.Descriptor instead.
func (*GetWriteParamsResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{27}
}

func (x *GetWriteParamsResponse) GetValue() *WriteParams {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetOwnParamsRequest is the StateQuery/GetOwnParamsRequest request type.
type GetOwnParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOwnParamsRequest) Reset() {
	*x = GetOwnParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnParamsRequest) ProtoMessage() {}

func (x *GetOwnParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnParamsRequest.ProtoReflect.Descriptor instead.
func (*GetOwnParamsRequest) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{28}
}

// GetOwnParamsResponse is the StateQuery/GetOwnParamsResponse request type.
type GetOwnParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *OwnParams `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetOwnParamsResponse) Reset() {
	*x = GetOwnParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnParamsResponse) ProtoMessage() {}

func (x *GetOwnParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnParamsResponse.ProtoReflect.Descriptor instead.
func (*GetOwnParamsResponse) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{29}
}

func (x *GetOwnParamsResponse) GetValue() *OwnParams {
	if x != nil {
		return x.Value
	}
	return nil
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListServiceRecordRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListServiceRecordRequest_IndexKey_Id_
	//	*ListServiceRecordRequest_IndexKey_Origin_
	//	*ListServiceRecordRequest_IndexKey_Controller_
	Key isListServiceRecordRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListServiceRecordRequest_IndexKey) Reset() {
	*x = ListServiceRecordRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceRecordRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRecordRequest_IndexKey) ProtoMessage() {}

func (x *ListServiceRecordRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRecordRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListServiceRecordRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{4, 0}
}

func (m *ListServiceRecordRequest_IndexKey) GetKey() isListServiceRecordRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListServiceRecordRequest_IndexKey) GetId() *ListServiceRecordRequest_IndexKey_Id {
	if x, ok := x.GetKey().(*ListServiceRecordRequest_IndexKey_Id_); ok {
		return x.Id
	}
	return nil
}

func (x *ListServiceRecordRequest_IndexKey) GetOrigin() *ListServiceRecordRequest_IndexKey_Origin {
	if x, ok := x.GetKey().(*ListServiceRecordRequest_IndexKey_Origin_); ok {
		return x.Origin
	}
	return nil
}

func (x *ListServiceRecordRequest_IndexKey) GetController() *ListServiceRecordRequest_IndexKey_Controller {
	if x, ok := x.GetKey().(*ListServiceRecordRequest_IndexKey_Controller_); ok {
		return x.Controller
	}
	return nil
}

type isListServiceRecordRequest_IndexKey_Key interface {
	isListServiceRecordRequest_IndexKey_Key()
}

type ListServiceRecordRequest_IndexKey_Id_ struct {
	// id specifies the value of the Id index key to use in the query.
	Id *ListServiceRecordRequest_IndexKey_Id `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type ListServiceRecordRequest_IndexKey_Origin_ struct {
	// origin specifies the value of the Origin index key to use in the query.
	Origin *ListServiceRecordRequest_IndexKey_Origin `protobuf:"bytes,2,opt,name=origin,proto3,oneof"`
}

type ListServiceRecordRequest_IndexKey_Controller_ struct {
	// controller specifies the value of the Controller index key to use in the query.
	Controller *ListServiceRecordRequest_IndexKey_Controller `protobuf:"bytes,3,opt,name=controller,proto3,oneof"`
}

func (*ListServiceRecordRequest_IndexKey_Id_) isListServiceRecordRequest_IndexKey_Key() {}

func (*ListServiceRecordRequest_IndexKey_Origin_) isListServiceRecordRequest_IndexKey_Key() {}

func (*ListServiceRecordRequest_IndexKey_Controller_) isListServiceRecordRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListServiceRecordRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListServiceRecordRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListServiceRecordRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListServiceRecordRequest_RangeQuery) Reset() {
	*x = ListServiceRecordRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceRecordRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRecordRequest_RangeQuery) ProtoMessage() {}

func (x *ListServiceRecordRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRecordRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListServiceRecordRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ListServiceRecordRequest_RangeQuery) GetFrom() *ListServiceRecordRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListServiceRecordRequest_RangeQuery) GetTo() *ListServiceRecordRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListServiceRecordRequest_IndexKey_Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the value of the id field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Id *uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *ListServiceRecordRequest_IndexKey_Id) Reset() {
	*x = ListServiceRecordRequest_IndexKey_Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceRecordRequest_IndexKey_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRecordRequest_IndexKey_Id) ProtoMessage() {}

func (x *ListServiceRecordRequest_IndexKey_Id) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRecordRequest_IndexKey_Id.ProtoReflect.Descriptor instead.
func (*ListServiceRecordRequest_IndexKey_Id) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *ListServiceRecordRequest_IndexKey_Id) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type ListServiceRecordRequest_IndexKey_Origin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// origin is the value of the origin field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Origin *string `protobuf:"bytes,1,opt,name=origin,proto3,oneof" json:"origin,omitempty"`
}

func (x *ListServiceRecordRequest_IndexKey_Origin) Reset() {
	*x = ListServiceRecordRequest_IndexKey_Origin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceRecordRequest_IndexKey_Origin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRecordRequest_IndexKey_Origin) ProtoMessage() {}

func (x *ListServiceRecordRequest_IndexKey_Origin) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRecordRequest_IndexKey_Origin.ProtoReflect.Descriptor instead.
func (*ListServiceRecordRequest_IndexKey_Origin) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{4, 0, 1}
}

func (x *ListServiceRecordRequest_IndexKey_Origin) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

type ListServiceRecordRequest_IndexKey_Controller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// controller is the value of the controller field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Controller *string `protobuf:"bytes,1,opt,name=controller,proto3,oneof" json:"controller,omitempty"`
}

func (x *ListServiceRecordRequest_IndexKey_Controller) Reset() {
	*x = ListServiceRecordRequest_IndexKey_Controller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceRecordRequest_IndexKey_Controller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRecordRequest_IndexKey_Controller) ProtoMessage() {}

func (x *ListServiceRecordRequest_IndexKey_Controller) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRecordRequest_IndexKey_Controller.ProtoReflect.Descriptor instead.
func (*ListServiceRecordRequest_IndexKey_Controller) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{4, 0, 2}
}

func (x *ListServiceRecordRequest_IndexKey_Controller) GetController() string {
	if x != nil && x.Controller != nil {
		return *x.Controller
	}
	return ""
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListCredentialRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListCredentialRequest_IndexKey_Id_
	//	*ListCredentialRequest_IndexKey_Handle_
	//	*ListCredentialRequest_IndexKey_OriginHandle_
	//	*ListCredentialRequest_IndexKey_CredentialId_
	//	*ListCredentialRequest_IndexKey_PublicKey_
	Key isListCredentialRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListCredentialRequest_IndexKey) Reset() {
	*x = ListCredentialRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0}
}

func (m *ListCredentialRequest_IndexKey) GetKey() isListCredentialRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetId() *ListCredentialRequest_IndexKey_Id {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_Id_); ok {
		return x.Id
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetHandle() *ListCredentialRequest_IndexKey_Handle {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_Handle_); ok {
		return x.Handle
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetOriginHandle() *ListCredentialRequest_IndexKey_OriginHandle {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_OriginHandle_); ok {
		return x.OriginHandle
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetCredentialId() *ListCredentialRequest_IndexKey_CredentialId {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_CredentialId_); ok {
		return x.CredentialId
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetPublicKey() *ListCredentialRequest_IndexKey_PublicKey {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_PublicKey_); ok {
		return x.PublicKey
	}
	return nil
}

type isListCredentialRequest_IndexKey_Key interface {
	isListCredentialRequest_IndexKey_Key()
}

type ListCredentialRequest_IndexKey_Id_ struct {
	// id specifies the value of the Id index key to use in the query.
	Id *ListCredentialRequest_IndexKey_Id `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type ListCredentialRequest_IndexKey_Handle_ struct {
	// handle specifies the value of the Handle index key to use in the query.
	Handle *ListCredentialRequest_IndexKey_Handle `protobuf:"bytes,2,opt,name=handle,proto3,oneof"`
}

type ListCredentialRequest_IndexKey_OriginHandle_ struct {
	// origin_handle specifies the value of the OriginHandle index key to use in the query.
	OriginHandle *ListCredentialRequest_IndexKey_OriginHandle `protobuf:"bytes,3,opt,name=origin_handle,json=originHandle,proto3,oneof"`
}

type ListCredentialRequest_IndexKey_CredentialId_ struct {
	// credential_id specifies the value of the CredentialId index key to use in the query.
	CredentialId *ListCredentialRequest_IndexKey_CredentialId `protobuf:"bytes,4,opt,name=credential_id,json=credentialId,proto3,oneof"`
}

type ListCredentialRequest_IndexKey_PublicKey_ struct {
	// public_key specifies the value of the PublicKey index key to use in the query.
	PublicKey *ListCredentialRequest_IndexKey_PublicKey `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3,oneof"`
}

func (*ListCredentialRequest_IndexKey_Id_) isListCredentialRequest_IndexKey_Key() {}

func (*ListCredentialRequest_IndexKey_Handle_) isListCredentialRequest_IndexKey_Key() {}

func (*ListCredentialRequest_IndexKey_OriginHandle_) isListCredentialRequest_IndexKey_Key() {}

func (*ListCredentialRequest_IndexKey_CredentialId_) isListCredentialRequest_IndexKey_Key() {}

func (*ListCredentialRequest_IndexKey_PublicKey_) isListCredentialRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListCredentialRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListCredentialRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListCredentialRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListCredentialRequest_RangeQuery) Reset() {
	*x = ListCredentialRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_RangeQuery) ProtoMessage() {}

func (x *ListCredentialRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 1}
}

func (x *ListCredentialRequest_RangeQuery) GetFrom() *ListCredentialRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListCredentialRequest_RangeQuery) GetTo() *ListCredentialRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListCredentialRequest_IndexKey_Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the value of the id field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Id *uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_Id) Reset() {
	*x = ListCredentialRequest_IndexKey_Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_Id) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_Id) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_Id.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_Id) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *ListCredentialRequest_IndexKey_Id) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type ListCredentialRequest_IndexKey_Handle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// handle is the value of the handle field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Handle *string `protobuf:"bytes,1,opt,name=handle,proto3,oneof" json:"handle,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_Handle) Reset() {
	*x = ListCredentialRequest_IndexKey_Handle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_Handle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_Handle) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_Handle) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_Handle.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_Handle) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 1}
}

func (x *ListCredentialRequest_IndexKey_Handle) GetHandle() string {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return ""
}

type ListCredentialRequest_IndexKey_OriginHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// origin is the value of the origin field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Origin *string `protobuf:"bytes,1,opt,name=origin,proto3,oneof" json:"origin,omitempty"`
	// handle is the value of the handle field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Handle *string `protobuf:"bytes,2,opt,name=handle,proto3,oneof" json:"handle,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_OriginHandle) Reset() {
	*x = ListCredentialRequest_IndexKey_OriginHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_OriginHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_OriginHandle) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_OriginHandle) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_OriginHandle.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_OriginHandle) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 2}
}

func (x *ListCredentialRequest_IndexKey_OriginHandle) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *ListCredentialRequest_IndexKey_OriginHandle) GetHandle() string {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return ""
}

type ListCredentialRequest_IndexKey_CredentialId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// credential_id is the value of the credential_id field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	CredentialId []byte `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3,oneof" json:"credential_id,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_CredentialId) Reset() {
	*x = ListCredentialRequest_IndexKey_CredentialId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_CredentialId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_CredentialId) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_CredentialId) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_CredentialId.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_CredentialId) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 3}
}

func (x *ListCredentialRequest_IndexKey_CredentialId) GetCredentialId() []byte {
	if x != nil {
		return x.CredentialId
	}
	return nil
}

type ListCredentialRequest_IndexKey_PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// public_key is the value of the public_key field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3,oneof" json:"public_key,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_PublicKey) Reset() {
	*x = ListCredentialRequest_IndexKey_PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_PublicKey) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_PublicKey.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_PublicKey) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 4}
}

func (x *ListCredentialRequest_IndexKey_PublicKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListWitnessRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListWitnessRequest_IndexKey_Index_
	//	*ListWitnessRequest_IndexKey_OriginKey_
	Key isListWitnessRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListWitnessRequest_IndexKey) Reset() {
	*x = ListWitnessRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWitnessRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWitnessRequest_IndexKey) ProtoMessage() {}

func (x *ListWitnessRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWitnessRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListWitnessRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{20, 0}
}

func (m *ListWitnessRequest_IndexKey) GetKey() isListWitnessRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListWitnessRequest_IndexKey) GetIndex() *ListWitnessRequest_IndexKey_Index {
	if x, ok := x.GetKey().(*ListWitnessRequest_IndexKey_Index_); ok {
		return x.Index
	}
	return nil
}

func (x *ListWitnessRequest_IndexKey) GetOriginKey() *ListWitnessRequest_IndexKey_OriginKey {
	if x, ok := x.GetKey().(*ListWitnessRequest_IndexKey_OriginKey_); ok {
		return x.OriginKey
	}
	return nil
}

type isListWitnessRequest_IndexKey_Key interface {
	isListWitnessRequest_IndexKey_Key()
}

type ListWitnessRequest_IndexKey_Index_ struct {
	// index specifies the value of the Index index key to use in the query.
	Index *ListWitnessRequest_IndexKey_Index `protobuf:"bytes,1,opt,name=index,proto3,oneof"`
}

type ListWitnessRequest_IndexKey_OriginKey_ struct {
	// origin_key specifies the value of the OriginKey index key to use in the query.
	OriginKey *ListWitnessRequest_IndexKey_OriginKey `protobuf:"bytes,2,opt,name=origin_key,json=originKey,proto3,oneof"`
}

func (*ListWitnessRequest_IndexKey_Index_) isListWitnessRequest_IndexKey_Key() {}

func (*ListWitnessRequest_IndexKey_OriginKey_) isListWitnessRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListWitnessRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListWitnessRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListWitnessRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListWitnessRequest_RangeQuery) Reset() {
	*x = ListWitnessRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWitnessRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWitnessRequest_RangeQuery) ProtoMessage() {}

func (x *ListWitnessRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWitnessRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListWitnessRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{20, 1}
}

func (x *ListWitnessRequest_RangeQuery) GetFrom() *ListWitnessRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListWitnessRequest_RangeQuery) GetTo() *ListWitnessRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListWitnessRequest_IndexKey_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index is the value of the index field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Index *uint64 `protobuf:"varint,1,opt,name=index,proto3,oneof" json:"index,omitempty"`
}

func (x *ListWitnessRequest_IndexKey_Index) Reset() {
	*x = ListWitnessRequest_IndexKey_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWitnessRequest_IndexKey_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWitnessRequest_IndexKey_Index) ProtoMessage() {}

func (x *ListWitnessRequest_IndexKey_Index) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWitnessRequest_IndexKey_Index.ProtoReflect.Descriptor instead.
func (*ListWitnessRequest_IndexKey_Index) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{20, 0, 0}
}

func (x *ListWitnessRequest_IndexKey_Index) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type ListWitnessRequest_IndexKey_OriginKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// origin is the value of the origin field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Origin *string `protobuf:"bytes,1,opt,name=origin,proto3,oneof" json:"origin,omitempty"`
	// key is the value of the key field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Key *string `protobuf:"bytes,2,opt,name=key,proto3,oneof" json:"key,omitempty"`
}

func (x *ListWitnessRequest_IndexKey_OriginKey) Reset() {
	*x = ListWitnessRequest_IndexKey_OriginKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWitnessRequest_IndexKey_OriginKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWitnessRequest_IndexKey_OriginKey) ProtoMessage() {}

func (x *ListWitnessRequest_IndexKey_OriginKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWitnessRequest_IndexKey_OriginKey.ProtoReflect.Descriptor instead.
func (*ListWitnessRequest_IndexKey_OriginKey) Descriptor() ([]byte, []int) {
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{20, 0, 1}
}

func (x *ListWitnessRequest_IndexKey_OriginKey) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *ListWitnessRequest_IndexKey_OriginKey) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

var File_sonrhq_sonr_service_module_v1_state_query_proto protoreflect.FileDescriptor

var file_sonrhq_sonr_service_module_v1_state_query_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1d, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x73, 0x6f,
	0x6e, 0x72, 0x68, 0x71, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x39, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x66, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc3, 0x07, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x65, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x65, 0x0a, 0x0b, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd0, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4b, 0x65, 0x79, 0x12, 0x55, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4b, 0x65, 0x79, 0x2e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x6d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x1a, 0x20,
	0x0a, 0x02, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64,
	0x1a, 0x30, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x1a, 0x40, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0xb4, 0x01, 0x0a, 0x0a,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x54, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x50, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x02,
	0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xaa, 0x01, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x58, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x54, 0x0a, 0x22, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x22, 0x66, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x49, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x63, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xb9, 0x0a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x0c,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65,
	0x79, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x62, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd5, 0x06, 0x0a,
	0x08, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x12, 0x52, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4b, 0x65, 0x79, 0x2e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5e, 0x0a,
	0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x71, 0x0a,
	0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4b, 0x65, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x71, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x68, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x48, 0x00, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0x20, 0x0a,
	0x02, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x1a,
	0x30, 0x0a, 0x06, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x1a, 0x5e, 0x0a, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x1a, 0x4a, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x1a, 0x3e, 0x0a,
	0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x05, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x1a, 0xae, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x51, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4d, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65,
	0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xa4,
	0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x52, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65,
	0x73, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x5d,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x79, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa9, 0x06,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x5f, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd4,
	0x02, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x12, 0x58, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x65, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x48,
	0x00, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x1a, 0x2c, 0x0a, 0x05,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x52, 0x0a, 0x09, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x05,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0xa8, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x4e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f,
	0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x58, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x16, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x17,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x32, 0xb3, 0x10, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x36, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x9d, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x3e, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x79,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x88, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x37, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x33, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa6, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x41, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xa6, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x41, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x34, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x94, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73,
	0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x3b, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68,
	0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x31, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x33, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x33, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x34,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x32, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x9b, 0x02, 0x0a, 0x21, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f,
	0x6e, 0x72, 0x68, 0x71, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x78, 0x2f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2f,
	0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x76, 0x31, 0xa2,
	0x02, 0x04, 0x53, 0x53, 0x53, 0x4d, 0xaa, 0x02, 0x1d, 0x53, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2e,
	0x53, 0x6f, 0x6e, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1d, 0x53, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x5c,
	0x53, 0x6f, 0x6e, 0x72, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x29, 0x53, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x5c,
	0x53, 0x6f, 0x6e, 0x72, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x21, 0x53, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x3a, 0x3a, 0x53, 0x6f, 0x6e,
	0x72, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescOnce sync.Once
	file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescData = file_sonrhq_sonr_service_module_v1_state_query_proto_rawDesc
)

func file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescGZIP() []byte {
	file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescOnce.Do(func() {
		file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescData)
	})
	return file_sonrhq_sonr_service_module_v1_state_query_proto_rawDescData
}

var file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_sonrhq_sonr_service_module_v1_state_query_proto_goTypes = []interface{}{
	(*GetServiceRecordRequest)(nil),                      // 0: sonrhq.sonr.service.module.v1.GetServiceRecordRequest
	(*GetServiceRecordResponse)(nil),                     // 1: sonrhq.sonr.service.module.v1.GetServiceRecordResponse
	(*GetServiceRecordByOriginRequest)(nil),              // 2: sonrhq.sonr.service.module.v1.GetServiceRecordByOriginRequest
	(*GetServiceRecordByOriginResponse)(nil),             // 3: sonrhq.sonr.service.module.v1.GetServiceRecordByOriginResponse
	(*ListServiceRecordRequest)(nil),                     // 4: sonrhq.sonr.service.module.v1.ListServiceRecordRequest
	(*ListServiceRecordResponse)(nil),                    // 5: sonrhq.sonr.service.module.v1.ListServiceRecordResponse
	(*GetCredentialRequest)(nil),                         // 6: sonrhq.sonr.service.module.v1.GetCredentialRequest
	(*GetCredentialResponse)(nil),                        // 7: sonrhq.sonr.service.module.v1.GetCredentialResponse
	(*GetCredentialByOriginHandleRequest)(nil),           // 8: sonrhq.sonr.service.module.v1.GetCredentialByOriginHandleRequest
	(*GetCredentialByOriginHandleResponse)(nil),          // 9: sonrhq.sonr.service.module.v1.GetCredentialByOriginHandleResponse
	(*GetCredentialByCredentialIdRequest)(nil),           // 10: sonrhq.sonr.service.module.v1.GetCredentialByCredentialIdRequest
	(*GetCredentialByCredentialIdResponse)(nil),          // 11: sonrhq.sonr.service.module.v1.GetCredentialByCredentialIdResponse
	(*GetCredentialByPublicKeyRequest)(nil),              // 12: sonrhq.sonr.service.module.v1.GetCredentialByPublicKeyRequest
	(*GetCredentialByPublicKeyResponse)(nil),             // 13: sonrhq.sonr.service.module.v1.GetCredentialByPublicKeyResponse
	(*ListCredentialRequest)(nil),                        // 14: sonrhq.sonr.service.module.v1.ListCredentialRequest
	(*ListCredentialResponse)(nil),                       // 15: sonrhq.sonr.service.module.v1.ListCredentialResponse
	(*GetWitnessRequest)(nil),                            // 16: sonrhq.sonr.service.module.v1.GetWitnessRequest
	(*GetWitnessResponse)(nil),                           // 17: sonrhq.sonr.service.module.v1.GetWitnessResponse
	(*GetWitnessByOriginKeyRequest)(nil),                 // 18: sonrhq.sonr.service.module.v1.GetWitnessByOriginKeyRequest
	(*GetWitnessByOriginKeyResponse)(nil),                // 19: sonrhq.sonr.service.module.v1.GetWitnessByOriginKeyResponse
	(*ListWitnessRequest)(nil),                           // 20: sonrhq.sonr.service.module.v1.ListWitnessRequest
	(*ListWitnessResponse)(nil),                          // 21: sonrhq.sonr.service.module.v1.ListWitnessResponse
	(*GetBaseParamsRequest)(nil),                         // 22: sonrhq.sonr.service.module.v1.GetBaseParamsRequest
	(*GetBaseParamsResponse)(nil),                        // 23: sonrhq.sonr.service.module.v1.GetBaseParamsResponse
	(*GetReadParamsRequest)(nil),                         // 24: sonrhq.sonr.service.module.v1.GetReadParamsRequest
	(*GetReadParamsResponse)(nil),                        // 25: sonrhq.sonr.service.module.v1.GetReadParamsResponse
	(*GetWriteParamsRequest)(nil),                        // 26: sonrhq.sonr.service.module.v1.GetWriteParamsRequest
	(*GetWriteParamsResponse)(nil),                       // 27: sonrhq.sonr.service.module.v1.GetWriteParamsResponse
	(*GetOwnParamsRequest)(nil),                          // 28: sonrhq.sonr.service.module.v1.GetOwnParamsRequest
	(*GetOwnParamsResponse)(nil),                         // 29: sonrhq.sonr.service.module.v1.GetOwnParamsResponse
	(*ListServiceRecordRequest_IndexKey)(nil),            // 30: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey
	(*ListServiceRecordRequest_RangeQuery)(nil),          // 31: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.RangeQuery
	(*ListServiceRecordRequest_IndexKey_Id)(nil),         // 32: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Id
	(*ListServiceRecordRequest_IndexKey_Origin)(nil),     // 33: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Origin
	(*ListServiceRecordRequest_IndexKey_Controller)(nil), // 34: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Controller
	(*ListCredentialRequest_IndexKey)(nil),               // 35: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey
	(*ListCredentialRequest_RangeQuery)(nil),             // 36: sonrhq.sonr.service.module.v1.ListCredentialRequest.RangeQuery
	(*ListCredentialRequest_IndexKey_Id)(nil),            // 37: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.Id
	(*ListCredentialRequest_IndexKey_Handle)(nil),        // 38: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.Handle
	(*ListCredentialRequest_IndexKey_OriginHandle)(nil),  // 39: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.OriginHandle
	(*ListCredentialRequest_IndexKey_CredentialId)(nil),  // 40: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.CredentialId
	(*ListCredentialRequest_IndexKey_PublicKey)(nil),     // 41: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.PublicKey
	(*ListWitnessRequest_IndexKey)(nil),                  // 42: sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey
	(*ListWitnessRequest_RangeQuery)(nil),                // 43: sonrhq.sonr.service.module.v1.ListWitnessRequest.RangeQuery
	(*ListWitnessRequest_IndexKey_Index)(nil),            // 44: sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.Index
	(*ListWitnessRequest_IndexKey_OriginKey)(nil),        // 45: sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.OriginKey
	(*ServiceRecord)(nil),                                // 46: sonrhq.sonr.service.module.v1.ServiceRecord
	(*v1beta1.PageRequest)(nil),                          // 47: cosmos.base.query.v1beta1.PageRequest
	(*v1beta1.PageResponse)(nil),                         // 48: cosmos.base.query.v1beta1.PageResponse
	(*Credential)(nil),                                   // 49: sonrhq.sonr.service.module.v1.Credential
	(*Witness)(nil),                                      // 50: sonrhq.sonr.service.module.v1.Witness
	(*BaseParams)(nil),                                   // 51: sonrhq.sonr.service.module.v1.BaseParams
	(*ReadParams)(nil),                                   // 52: sonrhq.sonr.service.module.v1.ReadParams
	(*WriteParams)(nil),                                  // 53: sonrhq.sonr.service.module.v1.WriteParams
	(*OwnParams)(nil),                                    // 54: sonrhq.sonr.service.module.v1.OwnParams
}
var file_sonrhq_sonr_service_module_v1_state_query_proto_depIdxs = []int32{
	46, // 0: sonrhq.sonr.service.module.v1.GetServiceRecordResponse.value:type_name -> sonrhq.sonr.service.module.v1.ServiceRecord
	46, // 1: sonrhq.sonr.service.module.v1.GetServiceRecordByOriginResponse.value:type_name -> sonrhq.sonr.service.module.v1.ServiceRecord
	30, // 2: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.prefix_query:type_name -> sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey
	31, // 3: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.range_query:type_name -> sonrhq.sonr.service.module.v1.ListServiceRecordRequest.RangeQuery
	47, // 4: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	46, // 5: sonrhq.sonr.service.module.v1.ListServiceRecordResponse.values:type_name -> sonrhq.sonr.service.module.v1.ServiceRecord
	48, // 6: sonrhq.sonr.service.module.v1.ListServiceRecordResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	49, // 7: sonrhq.sonr.service.module.v1.GetCredentialResponse.value:type_name -> sonrhq.sonr.service.module.v1.Credential
	49, // 8: sonrhq.sonr.service.module.v1.GetCredentialByOriginHandleResponse.value:type_name -> sonrhq.sonr.service.module.v1.Credential
	49, // 9: sonrhq.sonr.service.module.v1.GetCredentialByCredentialIdResponse.value:type_name -> sonrhq.sonr.service.module.v1.Credential
	49, // 10: sonrhq.sonr.service.module.v1.GetCredentialByPublicKeyResponse.value:type_name -> sonrhq.sonr.service.module.v1.Credential
	35, // 11: sonrhq.sonr.service.module.v1.ListCredentialRequest.prefix_query:type_name -> sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey
	36, // 12: sonrhq.sonr.service.module.v1.ListCredentialRequest.range_query:type_name -> sonrhq.sonr.service.module.v1.ListCredentialRequest.RangeQuery
	47, // 13: sonrhq.sonr.service.module.v1.ListCredentialRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	49, // 14: sonrhq.sonr.service.module.v1.ListCredentialResponse.values:type_name -> sonrhq.sonr.service.module.v1.Credential
	48, // 15: sonrhq.sonr.service.module.v1.ListCredentialResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	50, // 16: sonrhq.sonr.service.module.v1.GetWitnessResponse.value:type_name -> sonrhq.sonr.service.module.v1.Witness
	50, // 17: sonrhq.sonr.service.module.v1.GetWitnessByOriginKeyResponse.value:type_name -> sonrhq.sonr.service.module.v1.Witness
	42, // 18: sonrhq.sonr.service.module.v1.ListWitnessRequest.prefix_query:type_name -> sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey
	43, // 19: sonrhq.sonr.service.module.v1.ListWitnessRequest.range_query:type_name -> sonrhq.sonr.service.module.v1.ListWitnessRequest.RangeQuery
	47, // 20: sonrhq.sonr.service.module.v1.ListWitnessRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	50, // 21: sonrhq.sonr.service.module.v1.ListWitnessResponse.values:type_name -> sonrhq.sonr.service.module.v1.Witness
	48, // 22: sonrhq.sonr.service.module.v1.ListWitnessResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	51, // 23: sonrhq.sonr.service.module.v1.GetBaseParamsResponse.value:type_name -> sonrhq.sonr.service.module.v1.BaseParams
	52, // 24: sonrhq.sonr.service.module.v1.GetReadParamsResponse.value:type_name -> sonrhq.sonr.service.module.v1.ReadParams
	53, // 25: sonrhq.sonr.service.module.v1.GetWriteParamsResponse.value:type_name -> sonrhq.sonr.service.module.v1.WriteParams
	54, // 26: sonrhq.sonr.service.module.v1.GetOwnParamsResponse.value:type_name -> sonrhq.sonr.service.module.v1.OwnParams
	32, // 27: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.id:type_name -> sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Id
	33, // 28: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.origin:type_name -> sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Origin
	34, // 29: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.controller:type_name -> sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey.Controller
	30, // 30: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.RangeQuery.from:type_name -> sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey
	30, // 31: sonrhq.sonr.service.module.v1.ListServiceRecordRequest.RangeQuery.to:type_name -> sonrhq.sonr.service.module.v1.ListServiceRecordRequest.IndexKey
	37, // 32: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.id:type_name -> sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.Id
	38, // 33: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.handle:type_name -> sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.Handle
	39, // 34: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.origin_handle:type_name -> sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.OriginHandle
	40, // 35: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.credential_id:type_name -> sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.CredentialId
	41, // 36: sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.public_key:type_name -> sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey.PublicKey
	35, // 37: sonrhq.sonr.service.module.v1.ListCredentialRequest.RangeQuery.from:type_name -> sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey
	35, // 38: sonrhq.sonr.service.module.v1.ListCredentialRequest.RangeQuery.to:type_name -> sonrhq.sonr.service.module.v1.ListCredentialRequest.IndexKey
	44, // 39: sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.index:type_name -> sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.Index
	45, // 40: sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.origin_key:type_name -> sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey.OriginKey
	42, // 41: sonrhq.sonr.service.module.v1.ListWitnessRequest.RangeQuery.from:type_name -> sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey
	42, // 42: sonrhq.sonr.service.module.v1.ListWitnessRequest.RangeQuery.to:type_name -> sonrhq.sonr.service.module.v1.ListWitnessRequest.IndexKey
	0,  // 43: sonrhq.sonr.service.module.v1.StateQueryService.GetServiceRecord:input_type -> sonrhq.sonr.service.module.v1.GetServiceRecordRequest
	2,  // 44: sonrhq.sonr.service.module.v1.StateQueryService.GetServiceRecordByOrigin:input_type -> sonrhq.sonr.service.module.v1.GetServiceRecordByOriginRequest
	4,  // 45: sonrhq.sonr.service.module.v1.StateQueryService.ListServiceRecord:input_type -> sonrhq.sonr.service.module.v1.ListServiceRecordRequest
	6,  // 46: sonrhq.sonr.service.module.v1.StateQueryService.GetCredential:input_type -> sonrhq.sonr.service.module.v1.GetCredentialRequest
	8,  // 47: sonrhq.sonr.service.module.v1.StateQueryService.GetCredentialByOriginHandle:input_type -> sonrhq.sonr.service.module.v1.GetCredentialByOriginHandleRequest
	10, // 48: sonrhq.sonr.service.module.v1.StateQueryService.GetCredentialByCredentialId:input_type -> sonrhq.sonr.service.module.v1.GetCredentialByCredentialIdRequest
	12, // 49: sonrhq.sonr.service.module.v1.StateQueryService.GetCredentialByPublicKey:input_type -> sonrhq.sonr.service.module.v1.GetCredentialByPublicKeyRequest
	14, // 50: sonrhq.sonr.service.module.v1.StateQueryService.ListCredential:input_type -> sonrhq.sonr.service.module.v1.ListCredentialRequest
	16, // 51: sonrhq.sonr.service.module.v1.StateQueryService.GetWitness:input_type -> sonrhq.sonr.service.module.v1.GetWitnessRequest
	18, // 52: sonrhq.sonr.service.module.v1.StateQueryService.GetWitnessByOriginKey:input_type -> sonrhq.sonr.service.module.v1.GetWitnessByOriginKeyRequest
	20, // 53: sonrhq.sonr.service.module.v1.StateQueryService.ListWitness:input_type -> sonrhq.sonr.service.module.v1.ListWitnessRequest
	22, // 54: sonrhq.sonr.service.module.v1.StateQueryService.GetBaseParams:input_type -> sonrhq.sonr.service.module.v1.GetBaseParamsRequest
	24, // 55: sonrhq.sonr.service.module.v1.StateQueryService.GetReadParams:input_type -> sonrhq.sonr.service.module.v1.GetReadParamsRequest
	26, // 56: sonrhq.sonr.service.module.v1.StateQueryService.GetWriteParams:input_type -> sonrhq.sonr.service.module.v1.GetWriteParamsRequest
	28, // 57: sonrhq.sonr.service.module.v1.StateQueryService.GetOwnParams:input_type -> sonrhq.sonr.service.module.v1.GetOwnParamsRequest
	1,  // 58: sonrhq.sonr.service.module.v1.StateQueryService.GetServiceRecord:output_type -> sonrhq.sonr.service.module.v1.GetServiceRecordResponse
	3,  // 59: sonrhq.sonr.service.module.v1.StateQueryService.GetServiceRecordByOrigin:output_type -> sonrhq.sonr.service.module.v1.GetServiceRecordByOriginResponse
	5,  // 60: sonrhq.sonr.service.module.v1.StateQueryService.ListServiceRecord:output_type -> sonrhq.sonr.service.module.v1.ListServiceRecordResponse
	7,  // 61: sonrhq.sonr.service.module.v1.StateQueryService.GetCredential:output_type -> sonrhq.sonr.service.module.v1.GetCredentialResponse
	9,  // 62: sonrhq.sonr.service.module.v1.StateQueryService.GetCredentialByOriginHandle:output_type -> sonrhq.sonr.service.module.v1.GetCredentialByOriginHandleResponse
	11, // 63: sonrhq.sonr.service.module.v1.StateQueryService.GetCredentialByCredentialId:output_type -> sonrhq.sonr.service.module.v1.GetCredentialByCredentialIdResponse
	13, // 64: sonrhq.sonr.service.module.v1.StateQueryService.GetCredentialByPublicKey:output_type -> sonrhq.sonr.service.module.v1.GetCredentialByPublicKeyResponse
	15, // 65: sonrhq.sonr.service.module.v1.StateQueryService.ListCredential:output_type -> sonrhq.sonr.service.module.v1.ListCredentialResponse
	17, // 66: sonrhq.sonr.service.module.v1.StateQueryService.GetWitness:output_type -> sonrhq.sonr.service.module.v1.GetWitnessResponse
	19, // 67: sonrhq.sonr.service.module.v1.StateQueryService.GetWitnessByOriginKey:output_type -> sonrhq.sonr.service.module.v1.GetWitnessByOriginKeyResponse
	21, // 68: sonrhq.sonr.service.module.v1.StateQueryService.ListWitness:output_type -> sonrhq.sonr.service.module.v1.ListWitnessResponse
	23, // 69: sonrhq.sonr.service.module.v1.StateQueryService.GetBaseParams:output_type -> sonrhq.sonr.service.module.v1.GetBaseParamsResponse
	25, // 70: sonrhq.sonr.service.module.v1.StateQueryService.GetReadParams:output_type -> sonrhq.sonr.service.module.v1.GetReadParamsResponse
	27, // 71: sonrhq.sonr.service.module.v1.StateQueryService.GetWriteParams:output_type -> sonrhq.sonr.service.module.v1.GetWriteParamsResponse
	29, // 72: sonrhq.sonr.service.module.v1.StateQueryService.GetOwnParams:output_type -> sonrhq.sonr.service.module.v1.GetOwnParamsResponse
	58, // [58:73] is the sub-list for method output_type
	43, // [43:58] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_sonrhq_sonr_service_module_v1_state_query_proto_init() }
func file_sonrhq_sonr_service_module_v1_state_query_proto_init() {
	if File_sonrhq_sonr_service_module_v1_state_query_proto != nil {
		return
	}
	file_sonrhq_sonr_service_module_v1_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceRecordByOriginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceRecordByOriginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByOriginHandleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByOriginHandleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByCredentialIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByCredentialIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWitnessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWitnessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWitnessByOriginKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWitnessByOriginKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWitnessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWitnessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBaseParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBaseParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReadParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReadParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWriteParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWriteParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceRecordRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceRecordRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceRecordRequest_IndexKey_Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceRecordRequest_IndexKey_Origin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceRecordRequest_IndexKey_Controller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_Handle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_OriginHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_CredentialId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWitnessRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWitnessRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWitnessRequest_IndexKey_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWitnessRequest_IndexKey_OriginKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ListServiceRecordRequest_PrefixQuery)(nil),
		(*ListServiceRecordRequest_RangeQuery_)(nil),
	}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ListCredentialRequest_PrefixQuery)(nil),
		(*ListCredentialRequest_RangeQuery_)(nil),
	}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*ListWitnessRequest_PrefixQuery)(nil),
		(*ListWitnessRequest_RangeQuery_)(nil),
	}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*ListServiceRecordRequest_IndexKey_Id_)(nil),
		(*ListServiceRecordRequest_IndexKey_Origin_)(nil),
		(*ListServiceRecordRequest_IndexKey_Controller_)(nil),
	}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*ListCredentialRequest_IndexKey_Id_)(nil),
		(*ListCredentialRequest_IndexKey_Handle_)(nil),
		(*ListCredentialRequest_IndexKey_OriginHandle_)(nil),
		(*ListCredentialRequest_IndexKey_CredentialId_)(nil),
		(*ListCredentialRequest_IndexKey_PublicKey_)(nil),
	}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*ListWitnessRequest_IndexKey_Index_)(nil),
		(*ListWitnessRequest_IndexKey_OriginKey_)(nil),
	}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes[45].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sonrhq_sonr_service_module_v1_state_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sonrhq_sonr_service_module_v1_state_query_proto_goTypes,
		DependencyIndexes: file_sonrhq_sonr_service_module_v1_state_query_proto_depIdxs,
		MessageInfos:      file_sonrhq_sonr_service_module_v1_state_query_proto_msgTypes,
	}.Build()
	File_sonrhq_sonr_service_module_v1_state_query_proto = out.File
	file_sonrhq_sonr_service_module_v1_state_query_proto_rawDesc = nil
	file_sonrhq_sonr_service_module_v1_state_query_proto_goTypes = nil
	file_sonrhq_sonr_service_module_v1_state_query_proto_depIdxs = nil
}
