/// This file contains service for the Node RPC Server
syntax = "proto3";

package sonr.node;
import "proto/api/call.proto";
import "proto/api/event.proto";
option go_package = "github.com/sonr-io/core/internal/node";

message Empty {}

// RPC Service with Equivalent Methods of a binded Node
service ClientService {
  // Node Methods
  // Signing Method Request for Data
  rpc Supply(sonr.api.SupplyRequest) returns (sonr.api.SupplyResponse) {}

  // Verification Method Request for Signed Data
  rpc Edit(sonr.api.EditRequest) returns (sonr.api.EditResponse) {}

  // Fetch method finds data from Key/Value store
  rpc Fetch(sonr.api.FetchRequest) returns (sonr.api.FetchResponse) {}

  // Respond Method to an Invite with Decision
  rpc Share(sonr.api.ShareRequest) returns (sonr.api.ShareResponse) {}

  // Respond Method to an Invite with Decision
  rpc Respond(sonr.api.RespondRequest) returns (sonr.api.RespondResponse) {}

  // Search Method to find a Peer by SName or PeerID
  rpc Search(sonr.api.SearchRequest) returns (sonr.api.SearchResponse) {}

  // Events Streams
  // Returns a stream of Lobby Refresh Events
  rpc OnLobbyRefresh(Empty) returns (stream sonr.api.RefreshEvent) {}

  // Returns a stream of Mailbox Message Events
  rpc OnMailboxMessage(Empty) returns (stream sonr.api.MailboxEvent) {}

  // Returns a stream of DecisionEvent's for Accepted Invites
  rpc OnTransferAccepted(Empty) returns (stream sonr.api.DecisionEvent) {}

  // Returns a stream of DecisionEvent's for Rejected Invites
  rpc OnTransferDeclined(Empty) returns (stream sonr.api.DecisionEvent) {}

  // Returns a stream of DecisionEvent's for Invites
  rpc OnTransferInvite(Empty) returns (stream sonr.api.InviteEvent) {}

  // Returns a stream of ProgressEvent's for Sessions
  rpc OnTransferProgress(Empty) returns (stream sonr.api.ProgressEvent) {}

  // Returns a stream of Completed Transfers
  rpc OnTransferComplete(Empty) returns (stream sonr.api.CompleteEvent) {}
}
