syntax = "proto3";

// Package Transmit is utilized for direct data transmission between two peers.
package sonrio.motor.transmit.v1;
import "discover/v1/discover.proto";
option go_package = "github.com/sonr-io/sonr/internal/motor/x/transmit/v1";

message Session {
  Direction direction = 1;
  discover.v1.Peer from = 2;
  discover.v1.Peer to = 3;
  Payload payload = 4;
  int64 last_updated = 5;
  repeated SessionItem items = 6;
  int32 current_index = 7;
  map<int32, bool> results = 8;
}

message SessionItem {
  int32 index = 1;
  int32 count = 2;
  FileItem item = 3;
  int64 written = 4;
  int64 size = 5;
  int64 total_size = 6;
  Direction direction = 7;
  string path = 8;
}

message SessionPayload {
  Payload payload = 1;
  Direction direction = 2;
}


// Direction is the direction of a stream.
enum Direction {
  // Unspecified is the default value.
  DIRECTION_UNSPECIFIED = 0;

  // Incoming is the direction of an incoming stream.
  DIRECTION_INCOMING = 1;

  // Outgoing is the direction of an outgoing stream.
  DIRECTION_OUTGOING = 2;
}

// For Transfer File Payload
message FileItem {
  MIME mime = 1; // Standard Mime Type
  string name = 2;         // File Name without Path
  string path = 3;         // File Location
  int64 size = 4;          // File Size in Bytes
  Thumbnail thumbnail = 5; // Thumbnail of File
  int64 last_modified = 6;  // Last Modified Time in Seconds
}

// Payload is Data thats being Passed
message Payload {
  repeated Item items = 1; // Payload Items
  discover.v1.Peer owner = 2;       // PROFILE: General Sender Info
  int64 size = 3;          // Payload Size in Bytes
  int64 created_at = 4;     // Payload Creation Time in Seconds

  // Item in Payload
  message Item {
    MIME mime = 1;  // MIME of the Item
    int64 size = 2; // Size of the Item in Bytes

    // Attached Data
    oneof data {
      FileItem file = 3;       // FILE: File Item
      string url = 4;         // URL: Url Item
      string message = 5; // MESSAGE: Message Item
    }

    // Thumbnail of the Item
    Thumbnail thumbnail = 6;         // Thumbnail of the Item
  }
}

// SupplyItem is an item supplied to be a payload
message SupplyItem {
    string path = 1; // Supply Path
    optional bytes thumbnail = 2; // Supply Path of the Thumbnail
}

// Thumbnail of File
message Thumbnail {
  bytes buffer = 1; // Thumbnail Buffer
  MIME mime = 2;    // Mime Type
}


// Standard MIME with Additional Extensions
message MIME {
  // Type of File
  Type type = 1;

  // Extension of File
  string subtype = 2;

  // Type/Subtype i.e. (image/jpeg)
  string value = 3;

  // File Content Type
  enum Type {
    // Other File Type - If cannot derive from Subtype
    TYPE_UNSPECIFIED = 0;

    // Sound, Audio Files
    TYPE_AUDIO = 1;

    // Document Files - PDF, Word, Excel, etc.
    TYPE_DOCUMENT = 2;

    // Image Files
    TYPE_IMAGE = 3;

    // Text Based Files
    TYPE_TEXT = 4;

    // Video Files
    TYPE_VIDEO = 5;

    // URL Links
    TYPE_URL = 6;

    // Crypto Files
    TYPE_CRYPTO = 7;
  }
}


// (Client) ShareRequest is request to share supplied files/urls with a peer
message ShareRequest {
  sonrio.motor.discover.v1.Peer peer = 1; // Peer to Share with
  repeated SupplyItem items = 2; // Supply Items to share
}

// (Client) ShareResponse is response to ShareRequest
message ShareResponse {
  bool success = 1; // True if Supply is Active
  string error = 2; // Error Message if Supply is not Active
}


// InviteEvent notifies Peer that an Invite has been received
message OnTransmitInviteResponse {
  int64 received = 1;            // Invite received Timestamp
  sonrio.motor.discover.v1.Peer from = 2;       // Peer that sent the Invite
  sonrio.motor.transmit.v1.Payload payload = 3; // Attached Data
}


// Transfer Progress Event
message OnTransmitProgressResponse {
  double progress = 1; // Current Transfer Progress
  int64 received = 2;  // Timestamp
  int32 current = 3; // Current position of item in list
  int32 total = 4; // Total number of items in list
  sonrio.motor.transmit.v1.Direction direction = 5; // Direction of Transfer
}

// Message Sent after Completed Transfer
message OnTransmitCompleteResponse {
  sonrio.motor.transmit.v1.Direction direction = 1; // Direction of Transfer
  sonrio.motor.transmit.v1.Payload payload = 2;     // Transfer Data
  sonrio.motor.discover.v1.Peer from = 3; // Peer that sent the Complete Event
  sonrio.motor.discover.v1.Peer to = 4;   // Peer that received the Complete Event
  int64 created_at = 5;     // Transfer Created Timestamp
  int64 received_at = 6;    // Transfer Received Timestamp
  map<int32, bool> results = 7; // Transfer Success
}



// DecisionEvent is emitted when a decision is made by Peer.
message OnTransmitDecisionResponse {
  bool decision = 1;       // true = accept, false = reject
  sonrio.motor.discover.v1.Peer from = 2; // Peer that made decision
  int64 received = 3;      // Timestamp
}

