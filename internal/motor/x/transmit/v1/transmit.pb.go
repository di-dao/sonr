// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: transmit/v1/transmit.proto

// Package Transmit is utilized for direct data transmission between two peers.

package v1

import (
	v1 "github.com/sonr-io/sonr/internal/motor/x/core/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Direction is the direction of a stream.
type Direction int32

const (
	// Unspecified is the default value.
	Direction_DIRECTION_UNSPECIFIED Direction = 0
	// Incoming is the direction of an incoming stream.
	Direction_DIRECTION_INCOMING Direction = 1
	// Outgoing is the direction of an outgoing stream.
	Direction_DIRECTION_OUTGOING Direction = 2
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "DIRECTION_UNSPECIFIED",
		1: "DIRECTION_INCOMING",
		2: "DIRECTION_OUTGOING",
	}
	Direction_value = map[string]int32{
		"DIRECTION_UNSPECIFIED": 0,
		"DIRECTION_INCOMING":    1,
		"DIRECTION_OUTGOING":    2,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_transmit_v1_transmit_proto_enumTypes[0].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_transmit_v1_transmit_proto_enumTypes[0]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{0}
}

// File Content Type
type MIME_Type int32

const (
	// Other File Type - If cannot derive from Subtype
	MIME_TYPE_UNSPECIFIED MIME_Type = 0
	// Sound, Audio Files
	MIME_TYPE_AUDIO MIME_Type = 1
	// Document Files - PDF, Word, Excel, etc.
	MIME_TYPE_DOCUMENT MIME_Type = 2
	// Image Files
	MIME_TYPE_IMAGE MIME_Type = 3
	// Text Based Files
	MIME_TYPE_TEXT MIME_Type = 4
	// Video Files
	MIME_TYPE_VIDEO MIME_Type = 5
	// URL Links
	MIME_TYPE_URL MIME_Type = 6
	// Crypto Files
	MIME_TYPE_CRYPTO MIME_Type = 7
)

// Enum value maps for MIME_Type.
var (
	MIME_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_AUDIO",
		2: "TYPE_DOCUMENT",
		3: "TYPE_IMAGE",
		4: "TYPE_TEXT",
		5: "TYPE_VIDEO",
		6: "TYPE_URL",
		7: "TYPE_CRYPTO",
	}
	MIME_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_AUDIO":       1,
		"TYPE_DOCUMENT":    2,
		"TYPE_IMAGE":       3,
		"TYPE_TEXT":        4,
		"TYPE_VIDEO":       5,
		"TYPE_URL":         6,
		"TYPE_CRYPTO":      7,
	}
)

func (x MIME_Type) Enum() *MIME_Type {
	p := new(MIME_Type)
	*p = x
	return p
}

func (x MIME_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MIME_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_transmit_v1_transmit_proto_enumTypes[1].Descriptor()
}

func (MIME_Type) Type() protoreflect.EnumType {
	return &file_transmit_v1_transmit_proto_enumTypes[1]
}

func (x MIME_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MIME_Type.Descriptor instead.
func (MIME_Type) EnumDescriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{7, 0}
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction    Direction      `protobuf:"varint,1,opt,name=direction,proto3,enum=sonrio.motor.transmit.v1.Direction" json:"direction,omitempty"`
	From         *v1.Peer       `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To           *v1.Peer       `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Payload      *Payload       `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	LastUpdated  int64          `protobuf:"varint,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Items        []*SessionItem `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	CurrentIndex int32          `protobuf:"varint,7,opt,name=current_index,json=currentIndex,proto3" json:"current_index,omitempty"`
	Results      map[int32]bool `protobuf:"bytes,8,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{0}
}

func (x *Session) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

func (x *Session) GetFrom() *v1.Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Session) GetTo() *v1.Peer {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Session) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Session) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *Session) GetItems() []*SessionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Session) GetCurrentIndex() int32 {
	if x != nil {
		return x.CurrentIndex
	}
	return 0
}

func (x *Session) GetResults() map[int32]bool {
	if x != nil {
		return x.Results
	}
	return nil
}

type SessionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32     `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Count     int32     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Item      *FileItem `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
	Written   int64     `protobuf:"varint,4,opt,name=written,proto3" json:"written,omitempty"`
	Size      int64     `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	TotalSize int64     `protobuf:"varint,6,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	Direction Direction `protobuf:"varint,7,opt,name=direction,proto3,enum=sonrio.motor.transmit.v1.Direction" json:"direction,omitempty"`
	Path      string    `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *SessionItem) Reset() {
	*x = SessionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionItem) ProtoMessage() {}

func (x *SessionItem) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionItem.ProtoReflect.Descriptor instead.
func (*SessionItem) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{1}
}

func (x *SessionItem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SessionItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SessionItem) GetItem() *FileItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *SessionItem) GetWritten() int64 {
	if x != nil {
		return x.Written
	}
	return 0
}

func (x *SessionItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SessionItem) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *SessionItem) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

func (x *SessionItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SessionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload   *Payload  `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Direction Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=sonrio.motor.transmit.v1.Direction" json:"direction,omitempty"`
}

func (x *SessionPayload) Reset() {
	*x = SessionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionPayload) ProtoMessage() {}

func (x *SessionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionPayload.ProtoReflect.Descriptor instead.
func (*SessionPayload) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{2}
}

func (x *SessionPayload) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SessionPayload) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

// For Transfer File Payload
type FileItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mime         *MIME      `protobuf:"bytes,1,opt,name=mime,proto3" json:"mime,omitempty"`                                      // Standard Mime Type
	Name         string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                      // File Name without Path
	Path         string     `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                                      // File Location
	Size         int64      `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                                     // File Size in Bytes
	Thumbnail    *Thumbnail `protobuf:"bytes,5,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`                            // Thumbnail of File
	LastModified int64      `protobuf:"varint,6,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"` // Last Modified Time in Seconds
}

func (x *FileItem) Reset() {
	*x = FileItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileItem) ProtoMessage() {}

func (x *FileItem) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileItem.ProtoReflect.Descriptor instead.
func (*FileItem) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{3}
}

func (x *FileItem) GetMime() *MIME {
	if x != nil {
		return x.Mime
	}
	return nil
}

func (x *FileItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileItem) GetThumbnail() *Thumbnail {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *FileItem) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

// Payload is Data thats being Passed
type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*Payload_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`                           // Payload Items
	Owner     *v1.Peer        `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`                           // PROFILE: General Sender Info
	Size      int64           `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                            // Payload Size in Bytes
	CreatedAt int64           `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Payload Creation Time in Seconds
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{4}
}

func (x *Payload) GetItems() []*Payload_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Payload) GetOwner() *v1.Peer {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Payload) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Payload) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// SupplyItem is an item supplied to be a payload
type SupplyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                 // Supply Path
	Thumbnail []byte `protobuf:"bytes,2,opt,name=thumbnail,proto3,oneof" json:"thumbnail,omitempty"` // Supply Path of the Thumbnail
}

func (x *SupplyItem) Reset() {
	*x = SupplyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupplyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyItem) ProtoMessage() {}

func (x *SupplyItem) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyItem.ProtoReflect.Descriptor instead.
func (*SupplyItem) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{5}
}

func (x *SupplyItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SupplyItem) GetThumbnail() []byte {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

// Thumbnail of File
type Thumbnail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buffer []byte `protobuf:"bytes,1,opt,name=buffer,proto3" json:"buffer,omitempty"` // Thumbnail Buffer
	Mime   *MIME  `protobuf:"bytes,2,opt,name=mime,proto3" json:"mime,omitempty"`     // Mime Type
}

func (x *Thumbnail) Reset() {
	*x = Thumbnail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thumbnail) ProtoMessage() {}

func (x *Thumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thumbnail.ProtoReflect.Descriptor instead.
func (*Thumbnail) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{6}
}

func (x *Thumbnail) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *Thumbnail) GetMime() *MIME {
	if x != nil {
		return x.Mime
	}
	return nil
}

// Standard MIME with Additional Extensions
type MIME struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of File
	Type MIME_Type `protobuf:"varint,1,opt,name=type,proto3,enum=sonrio.motor.transmit.v1.MIME_Type" json:"type,omitempty"`
	// Extension of File
	Subtype string `protobuf:"bytes,2,opt,name=subtype,proto3" json:"subtype,omitempty"`
	// Type/Subtype i.e. (image/jpeg)
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MIME) Reset() {
	*x = MIME{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MIME) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MIME) ProtoMessage() {}

func (x *MIME) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MIME.ProtoReflect.Descriptor instead.
func (*MIME) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{7}
}

func (x *MIME) GetType() MIME_Type {
	if x != nil {
		return x.Type
	}
	return MIME_TYPE_UNSPECIFIED
}

func (x *MIME) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *MIME) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// (Client) ShareRequest is request to share supplied files/urls with a peer
type ShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer  *v1.Peer      `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`   // Peer to Share with
	Items []*SupplyItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"` // Supply Items to share
}

func (x *ShareRequest) Reset() {
	*x = ShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareRequest) ProtoMessage() {}

func (x *ShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareRequest.ProtoReflect.Descriptor instead.
func (*ShareRequest) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{8}
}

func (x *ShareRequest) GetPeer() *v1.Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *ShareRequest) GetItems() []*SupplyItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// (Client) ShareResponse is response to ShareRequest
type ShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // True if Supply is Active
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error Message if Supply is not Active
}

func (x *ShareResponse) Reset() {
	*x = ShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareResponse) ProtoMessage() {}

func (x *ShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareResponse.ProtoReflect.Descriptor instead.
func (*ShareResponse) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{9}
}

func (x *ShareResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ShareResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// InviteEvent notifies Peer that an Invite has been received
type OnTransmitInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Received int64    `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"` // Invite received Timestamp
	From     *v1.Peer `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`          // Peer that sent the Invite
	Payload  *Payload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`    // Attached Data
}

func (x *OnTransmitInviteResponse) Reset() {
	*x = OnTransmitInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnTransmitInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnTransmitInviteResponse) ProtoMessage() {}

func (x *OnTransmitInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnTransmitInviteResponse.ProtoReflect.Descriptor instead.
func (*OnTransmitInviteResponse) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{10}
}

func (x *OnTransmitInviteResponse) GetReceived() int64 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *OnTransmitInviteResponse) GetFrom() *v1.Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *OnTransmitInviteResponse) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Transfer Progress Event
type OnTransmitProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress  float64   `protobuf:"fixed64,1,opt,name=progress,proto3" json:"progress,omitempty"`                                          // Current Transfer Progress
	Received  int64     `protobuf:"varint,2,opt,name=received,proto3" json:"received,omitempty"`                                           // Timestamp
	Current   int32     `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`                                             // Current position of item in list
	Total     int32     `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`                                                 // Total number of items in list
	Direction Direction `protobuf:"varint,5,opt,name=direction,proto3,enum=sonrio.motor.transmit.v1.Direction" json:"direction,omitempty"` // Direction of Transfer
}

func (x *OnTransmitProgressResponse) Reset() {
	*x = OnTransmitProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnTransmitProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnTransmitProgressResponse) ProtoMessage() {}

func (x *OnTransmitProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnTransmitProgressResponse.ProtoReflect.Descriptor instead.
func (*OnTransmitProgressResponse) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{11}
}

func (x *OnTransmitProgressResponse) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *OnTransmitProgressResponse) GetReceived() int64 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *OnTransmitProgressResponse) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *OnTransmitProgressResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OnTransmitProgressResponse) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

// Message Sent after Completed Transfer
type OnTransmitCompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction  Direction      `protobuf:"varint,1,opt,name=direction,proto3,enum=sonrio.motor.transmit.v1.Direction" json:"direction,omitempty"`                                              // Direction of Transfer
	Payload    *Payload       `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`                                                                                           // Transfer Data
	From       *v1.Peer       `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                                                                                                 // Peer that sent the Complete Event
	To         *v1.Peer       `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`                                                                                                     // Peer that received the Complete Event
	CreatedAt  int64          `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                                     // Transfer Created Timestamp
	ReceivedAt int64          `protobuf:"varint,6,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`                                                                  // Transfer Received Timestamp
	Results    map[int32]bool `protobuf:"bytes,7,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // Transfer Success
}

func (x *OnTransmitCompleteResponse) Reset() {
	*x = OnTransmitCompleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnTransmitCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnTransmitCompleteResponse) ProtoMessage() {}

func (x *OnTransmitCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnTransmitCompleteResponse.ProtoReflect.Descriptor instead.
func (*OnTransmitCompleteResponse) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{12}
}

func (x *OnTransmitCompleteResponse) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

func (x *OnTransmitCompleteResponse) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *OnTransmitCompleteResponse) GetFrom() *v1.Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *OnTransmitCompleteResponse) GetTo() *v1.Peer {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *OnTransmitCompleteResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OnTransmitCompleteResponse) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

func (x *OnTransmitCompleteResponse) GetResults() map[int32]bool {
	if x != nil {
		return x.Results
	}
	return nil
}

// Item in Payload
type Payload_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mime *MIME `protobuf:"bytes,1,opt,name=mime,proto3" json:"mime,omitempty"`  // MIME of the Item
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"` // Size of the Item in Bytes
	// Attached Data
	//
	// Types that are assignable to Data:
	//	*Payload_Item_File
	//	*Payload_Item_Url
	//	*Payload_Item_Message
	Data isPayload_Item_Data `protobuf_oneof:"data"`
	// Thumbnail of the Item
	Thumbnail *Thumbnail `protobuf:"bytes,6,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"` // Thumbnail of the Item
}

func (x *Payload_Item) Reset() {
	*x = Payload_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transmit_v1_transmit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_Item) ProtoMessage() {}

func (x *Payload_Item) ProtoReflect() protoreflect.Message {
	mi := &file_transmit_v1_transmit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_Item.ProtoReflect.Descriptor instead.
func (*Payload_Item) Descriptor() ([]byte, []int) {
	return file_transmit_v1_transmit_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Payload_Item) GetMime() *MIME {
	if x != nil {
		return x.Mime
	}
	return nil
}

func (x *Payload_Item) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (m *Payload_Item) GetData() isPayload_Item_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Payload_Item) GetFile() *FileItem {
	if x, ok := x.GetData().(*Payload_Item_File); ok {
		return x.File
	}
	return nil
}

func (x *Payload_Item) GetUrl() string {
	if x, ok := x.GetData().(*Payload_Item_Url); ok {
		return x.Url
	}
	return ""
}

func (x *Payload_Item) GetMessage() string {
	if x, ok := x.GetData().(*Payload_Item_Message); ok {
		return x.Message
	}
	return ""
}

func (x *Payload_Item) GetThumbnail() *Thumbnail {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

type isPayload_Item_Data interface {
	isPayload_Item_Data()
}

type Payload_Item_File struct {
	File *FileItem `protobuf:"bytes,3,opt,name=file,proto3,oneof"` // FILE: File Item
}

type Payload_Item_Url struct {
	Url string `protobuf:"bytes,4,opt,name=url,proto3,oneof"` // URL: Url Item
}

type Payload_Item_Message struct {
	Message string `protobuf:"bytes,5,opt,name=message,proto3,oneof"` // MESSAGE: Message Item
}

func (*Payload_Item_File) isPayload_Item_Data() {}

func (*Payload_Item_Url) isPayload_Item_Data() {}

func (*Payload_Item_Message) isPayload_Item_Data() {}

var File_transmit_v1_transmit_proto protoreflect.FileDescriptor

var file_transmit_v1_transmit_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x73, 0x6f,
	0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x12, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x03, 0x0a, 0x07, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f,
	0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d,
	0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e,
	0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f,
	0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x02,
	0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f,
	0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x41,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x41, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe2, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x32, 0x0a, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74,
	0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x49, 0x4d, 0x45, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x52, 0x09, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0xb2, 0x03,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e,
	0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x83, 0x02, 0x0a,
	0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x32, 0x0a, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74,
	0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x49, 0x4d, 0x45, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48,
	0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d,
	0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x52,
	0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x51, 0x0a, 0x0a, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x22, 0x57, 0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x04, 0x6d, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x49, 0x4d, 0x45, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x22, 0xff,
	0x01, 0x0a, 0x04, 0x4d, 0x49, 0x4d, 0x45, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d,
	0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x49, 0x4d, 0x45, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x8d, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45,
	0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10,
	0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10,
	0x05, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x06, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x59, 0x50, 0x54, 0x4f, 0x10, 0x07,
	0x22, 0x7a, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f, 0x0a, 0x0d,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa3, 0x01,
	0x0a, 0x18, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f,
	0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x1a, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d,
	0x69, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd1, 0x03,
	0x0a, 0x1a, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x69,
	0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x5b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x69, 0x6f, 0x2e, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x2a, 0x56, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x15, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x49, 0x52,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f,
	0x55, 0x54, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2d, 0x69, 0x6f, 0x2f,
	0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x6f,
	0x74, 0x6f, 0x72, 0x2f, 0x78, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transmit_v1_transmit_proto_rawDescOnce sync.Once
	file_transmit_v1_transmit_proto_rawDescData = file_transmit_v1_transmit_proto_rawDesc
)

func file_transmit_v1_transmit_proto_rawDescGZIP() []byte {
	file_transmit_v1_transmit_proto_rawDescOnce.Do(func() {
		file_transmit_v1_transmit_proto_rawDescData = protoimpl.X.CompressGZIP(file_transmit_v1_transmit_proto_rawDescData)
	})
	return file_transmit_v1_transmit_proto_rawDescData
}

var file_transmit_v1_transmit_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_transmit_v1_transmit_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_transmit_v1_transmit_proto_goTypes = []interface{}{
	(Direction)(0),                     // 0: sonrio.motor.transmit.v1.Direction
	(MIME_Type)(0),                     // 1: sonrio.motor.transmit.v1.MIME.Type
	(*Session)(nil),                    // 2: sonrio.motor.transmit.v1.Session
	(*SessionItem)(nil),                // 3: sonrio.motor.transmit.v1.SessionItem
	(*SessionPayload)(nil),             // 4: sonrio.motor.transmit.v1.SessionPayload
	(*FileItem)(nil),                   // 5: sonrio.motor.transmit.v1.FileItem
	(*Payload)(nil),                    // 6: sonrio.motor.transmit.v1.Payload
	(*SupplyItem)(nil),                 // 7: sonrio.motor.transmit.v1.SupplyItem
	(*Thumbnail)(nil),                  // 8: sonrio.motor.transmit.v1.Thumbnail
	(*MIME)(nil),                       // 9: sonrio.motor.transmit.v1.MIME
	(*ShareRequest)(nil),               // 10: sonrio.motor.transmit.v1.ShareRequest
	(*ShareResponse)(nil),              // 11: sonrio.motor.transmit.v1.ShareResponse
	(*OnTransmitInviteResponse)(nil),   // 12: sonrio.motor.transmit.v1.OnTransmitInviteResponse
	(*OnTransmitProgressResponse)(nil), // 13: sonrio.motor.transmit.v1.OnTransmitProgressResponse
	(*OnTransmitCompleteResponse)(nil), // 14: sonrio.motor.transmit.v1.OnTransmitCompleteResponse
	nil,                                // 15: sonrio.motor.transmit.v1.Session.ResultsEntry
	(*Payload_Item)(nil),               // 16: sonrio.motor.transmit.v1.Payload.Item
	nil,                                // 17: sonrio.motor.transmit.v1.OnTransmitCompleteResponse.ResultsEntry
	(*v1.Peer)(nil),                    // 18: sonrio.motor.core.v1.Peer
}
var file_transmit_v1_transmit_proto_depIdxs = []int32{
	0,  // 0: sonrio.motor.transmit.v1.Session.direction:type_name -> sonrio.motor.transmit.v1.Direction
	18, // 1: sonrio.motor.transmit.v1.Session.from:type_name -> sonrio.motor.core.v1.Peer
	18, // 2: sonrio.motor.transmit.v1.Session.to:type_name -> sonrio.motor.core.v1.Peer
	6,  // 3: sonrio.motor.transmit.v1.Session.payload:type_name -> sonrio.motor.transmit.v1.Payload
	3,  // 4: sonrio.motor.transmit.v1.Session.items:type_name -> sonrio.motor.transmit.v1.SessionItem
	15, // 5: sonrio.motor.transmit.v1.Session.results:type_name -> sonrio.motor.transmit.v1.Session.ResultsEntry
	5,  // 6: sonrio.motor.transmit.v1.SessionItem.item:type_name -> sonrio.motor.transmit.v1.FileItem
	0,  // 7: sonrio.motor.transmit.v1.SessionItem.direction:type_name -> sonrio.motor.transmit.v1.Direction
	6,  // 8: sonrio.motor.transmit.v1.SessionPayload.payload:type_name -> sonrio.motor.transmit.v1.Payload
	0,  // 9: sonrio.motor.transmit.v1.SessionPayload.direction:type_name -> sonrio.motor.transmit.v1.Direction
	9,  // 10: sonrio.motor.transmit.v1.FileItem.mime:type_name -> sonrio.motor.transmit.v1.MIME
	8,  // 11: sonrio.motor.transmit.v1.FileItem.thumbnail:type_name -> sonrio.motor.transmit.v1.Thumbnail
	16, // 12: sonrio.motor.transmit.v1.Payload.items:type_name -> sonrio.motor.transmit.v1.Payload.Item
	18, // 13: sonrio.motor.transmit.v1.Payload.owner:type_name -> sonrio.motor.core.v1.Peer
	9,  // 14: sonrio.motor.transmit.v1.Thumbnail.mime:type_name -> sonrio.motor.transmit.v1.MIME
	1,  // 15: sonrio.motor.transmit.v1.MIME.type:type_name -> sonrio.motor.transmit.v1.MIME.Type
	18, // 16: sonrio.motor.transmit.v1.ShareRequest.peer:type_name -> sonrio.motor.core.v1.Peer
	7,  // 17: sonrio.motor.transmit.v1.ShareRequest.items:type_name -> sonrio.motor.transmit.v1.SupplyItem
	18, // 18: sonrio.motor.transmit.v1.OnTransmitInviteResponse.from:type_name -> sonrio.motor.core.v1.Peer
	6,  // 19: sonrio.motor.transmit.v1.OnTransmitInviteResponse.payload:type_name -> sonrio.motor.transmit.v1.Payload
	0,  // 20: sonrio.motor.transmit.v1.OnTransmitProgressResponse.direction:type_name -> sonrio.motor.transmit.v1.Direction
	0,  // 21: sonrio.motor.transmit.v1.OnTransmitCompleteResponse.direction:type_name -> sonrio.motor.transmit.v1.Direction
	6,  // 22: sonrio.motor.transmit.v1.OnTransmitCompleteResponse.payload:type_name -> sonrio.motor.transmit.v1.Payload
	18, // 23: sonrio.motor.transmit.v1.OnTransmitCompleteResponse.from:type_name -> sonrio.motor.core.v1.Peer
	18, // 24: sonrio.motor.transmit.v1.OnTransmitCompleteResponse.to:type_name -> sonrio.motor.core.v1.Peer
	17, // 25: sonrio.motor.transmit.v1.OnTransmitCompleteResponse.results:type_name -> sonrio.motor.transmit.v1.OnTransmitCompleteResponse.ResultsEntry
	9,  // 26: sonrio.motor.transmit.v1.Payload.Item.mime:type_name -> sonrio.motor.transmit.v1.MIME
	5,  // 27: sonrio.motor.transmit.v1.Payload.Item.file:type_name -> sonrio.motor.transmit.v1.FileItem
	8,  // 28: sonrio.motor.transmit.v1.Payload.Item.thumbnail:type_name -> sonrio.motor.transmit.v1.Thumbnail
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_transmit_v1_transmit_proto_init() }
func file_transmit_v1_transmit_proto_init() {
	if File_transmit_v1_transmit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transmit_v1_transmit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupplyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Thumbnail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MIME); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnTransmitInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnTransmitProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnTransmitCompleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transmit_v1_transmit_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transmit_v1_transmit_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_transmit_v1_transmit_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*Payload_Item_File)(nil),
		(*Payload_Item_Url)(nil),
		(*Payload_Item_Message)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transmit_v1_transmit_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transmit_v1_transmit_proto_goTypes,
		DependencyIndexes: file_transmit_v1_transmit_proto_depIdxs,
		EnumInfos:         file_transmit_v1_transmit_proto_enumTypes,
		MessageInfos:      file_transmit_v1_transmit_proto_msgTypes,
	}.Build()
	File_transmit_v1_transmit_proto = out.File
	file_transmit_v1_transmit_proto_rawDesc = nil
	file_transmit_v1_transmit_proto_goTypes = nil
	file_transmit_v1_transmit_proto_depIdxs = nil
}
