syntax = "proto3";

package sonr.protocols.hdns;
option go_package = "github.com/sonr-io/sonr/pkg/hdns";

// CreateSNameRequest is Message for Signing Request (Hmac Sha256)
message CreateSNameRequest {
  // Value to be signed
  string sName = 1;    // SName combined with Device ID and Hashed
  string mnemonic = 2; // Mnemonic Hashed with private key for fingerprint
}

// CreateSNameResponse is Message for Signing Response (Hmac Sha256)
message CreateSNameResponse {
  bool success = 1; // If Values were Signed

  // Resulting Signed Values
  string signedPrefix = 2;      // Message for List of Bytes
  string signedFingerprint = 3; // Fingerprint Value
  string publicKey = 4;         // Base64 Encoded Public Key
  string givenSName = 5;        // Provided SName
  string givenMnemonic = 6;     // Provided Mnemonic
}

// LookupSNameRequest is Message for Verifying Request (Hmac Sha256)
message LookupSNameRequest {
  // Value to be verified
  string sName = 1; // SName combined with Device ID and Hashed
}

// LookupSNameResponse is Message for Verifying Response (Hmac Sha256)
message LookupSNameResponse {
  bool success = 1;     // If Values were Verified
  string publicKey = 2; // Base64 Encoded Public Key
}

// VerifySNameRequest is Message for Verifying Request (Hmac Sha256)
message VerifySNameRequest {
  // Value to be verified
  string sName = 1;    // SName combined with Device ID and Hashed
  string mnemonic = 2; // Mnemonic Hashed with public key for fingerprint
}

// VerifySNameResponse is Message for Verifying Response (Hmac Sha256)
message VerifySNameResponse {
  bool success = 1; // If Values were Verified
  string error = 2; // Error Message
}
