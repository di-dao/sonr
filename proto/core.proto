syntax = "proto3";
package data;
import "peer.proto";
import "user.proto";

// Require Go Package
option go_package = "/data";

// Sent on Data Transfer to Add piece of File - Binary
message Chunk {
  bytes buffer = 1;    // Binary Value of Chunk
  int32 size = 2;      // Size of this Chunk
  bool isComplete = 3; // Whether this is final chunk
}

// Sonr Default Protocols
enum SonrProtocol {
  Unspecified = 0;    // Default Value
  Authorize = 1;      // Auth Protocol for Invite/Response
  Devices = 2;        // Device Protocol for User Linked Devices
  Linker = 3;         // Protocol for Linking Device to User
  LocalTransfer = 4;  // Protocol for Local Transfer to Peer
  RemoteTransfer = 5; // Protocol for Remote Transfer to Peer
}

message PushMessage {
  Peer peer = 1;                // Peer to send to
  map<string, string> data = 2; // Data to send
}

message LinkPacket {
  Device primary = 1;    // Primary Device
  Device secondary = 2;  // Secondary Device
  KeyChain keyChain = 3; // KeyChain for Linking
}
