/// This file has messages for describing a API Request/Responses with RPC.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/api/call.proto

package api

import (
	common "github.com/sonr-io/core/internal/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitializeRequest_IPAddress_Family int32

const (
	InitializeRequest_IPAddress_IPV4 InitializeRequest_IPAddress_Family = 0 // IPv4 Address
	InitializeRequest_IPAddress_IPV6 InitializeRequest_IPAddress_Family = 1 // IPv6 Address
)

// Enum value maps for InitializeRequest_IPAddress_Family.
var (
	InitializeRequest_IPAddress_Family_name = map[int32]string{
		0: "IPV4",
		1: "IPV6",
	}
	InitializeRequest_IPAddress_Family_value = map[string]int32{
		"IPV4": 0,
		"IPV6": 1,
	}
)

func (x InitializeRequest_IPAddress_Family) Enum() *InitializeRequest_IPAddress_Family {
	p := new(InitializeRequest_IPAddress_Family)
	*p = x
	return p
}

func (x InitializeRequest_IPAddress_Family) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitializeRequest_IPAddress_Family) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_call_proto_enumTypes[0].Descriptor()
}

func (InitializeRequest_IPAddress_Family) Type() protoreflect.EnumType {
	return &file_proto_api_call_proto_enumTypes[0]
}

func (x InitializeRequest_IPAddress_Family) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitializeRequest_IPAddress_Family.Descriptor instead.
func (InitializeRequest_IPAddress_Family) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{2, 4, 0}
}

// User Status
type InitializeResponse_UserStatus int32

const (
	InitializeResponse_RETURNING InitializeResponse_UserStatus = 0 // User is Returning
	InitializeResponse_NEW       InitializeResponse_UserStatus = 1 // User is New
)

// Enum value maps for InitializeResponse_UserStatus.
var (
	InitializeResponse_UserStatus_name = map[int32]string{
		0: "RETURNING",
		1: "NEW",
	}
	InitializeResponse_UserStatus_value = map[string]int32{
		"RETURNING": 0,
		"NEW":       1,
	}
)

func (x InitializeResponse_UserStatus) Enum() *InitializeResponse_UserStatus {
	p := new(InitializeResponse_UserStatus)
	*p = x
	return p
}

func (x InitializeResponse_UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitializeResponse_UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_call_proto_enumTypes[1].Descriptor()
}

func (InitializeResponse_UserStatus) Type() protoreflect.EnumType {
	return &file_proto_api_call_proto_enumTypes[1]
}

func (x InitializeResponse_UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitializeResponse_UserStatus.Descriptor instead.
func (InitializeResponse_UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{3, 0}
}

type EditRequest_Type int32

const (
	EditRequest_NONE   EditRequest_Type = 0 // No Delete
	EditRequest_DELETE EditRequest_Type = 1 // Delete Profile, Payload, or File
	EditRequest_MODIFY EditRequest_Type = 2 // Modify Profile
)

// Enum value maps for EditRequest_Type.
var (
	EditRequest_Type_name = map[int32]string{
		0: "NONE",
		1: "DELETE",
		2: "MODIFY",
	}
	EditRequest_Type_value = map[string]int32{
		"NONE":   0,
		"DELETE": 1,
		"MODIFY": 2,
	}
)

func (x EditRequest_Type) Enum() *EditRequest_Type {
	p := new(EditRequest_Type)
	*p = x
	return p
}

func (x EditRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EditRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_call_proto_enumTypes[2].Descriptor()
}

func (EditRequest_Type) Type() protoreflect.EnumType {
	return &file_proto_api_call_proto_enumTypes[2]
}

func (x EditRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EditRequest_Type.Descriptor instead.
func (EditRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{6, 0}
}

type FetchRequest_Key int32

const (
	FetchRequest_ALL     FetchRequest_Key = 0 // Fetch All Keys
	FetchRequest_PROFILE FetchRequest_Key = 1 // User Profile
	FetchRequest_DEVICES FetchRequest_Key = 2 // Linked Devices
	FetchRequest_RECENTS FetchRequest_Key = 3 // Recent Peers
	FetchRequest_HISTORY FetchRequest_Key = 4 // File Transfer History
)

// Enum value maps for FetchRequest_Key.
var (
	FetchRequest_Key_name = map[int32]string{
		0: "ALL",
		1: "PROFILE",
		2: "DEVICES",
		3: "RECENTS",
		4: "HISTORY",
	}
	FetchRequest_Key_value = map[string]int32{
		"ALL":     0,
		"PROFILE": 1,
		"DEVICES": 2,
		"RECENTS": 3,
		"HISTORY": 4,
	}
)

func (x FetchRequest_Key) Enum() *FetchRequest_Key {
	p := new(FetchRequest_Key)
	*p = x
	return p
}

func (x FetchRequest_Key) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FetchRequest_Key) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_call_proto_enumTypes[3].Descriptor()
}

func (FetchRequest_Key) Type() protoreflect.EnumType {
	return &file_proto_api_call_proto_enumTypes[3]
}

func (x FetchRequest_Key) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FetchRequest_Key.Descriptor instead.
func (FetchRequest_Key) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{8, 0}
}

// Method for Linking
type LinkRequest_Method int32

const (
	LinkRequest_ADD    LinkRequest_Method = 0 // Add Device ID to SName on DNS Table
	LinkRequest_REMOVE LinkRequest_Method = 1 // Remove Device ID from SName on DNS Table
)

// Enum value maps for LinkRequest_Method.
var (
	LinkRequest_Method_name = map[int32]string{
		0: "ADD",
		1: "REMOVE",
	}
	LinkRequest_Method_value = map[string]int32{
		"ADD":    0,
		"REMOVE": 1,
	}
)

func (x LinkRequest_Method) Enum() *LinkRequest_Method {
	p := new(LinkRequest_Method)
	*p = x
	return p
}

func (x LinkRequest_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkRequest_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_call_proto_enumTypes[4].Descriptor()
}

func (LinkRequest_Method) Type() protoreflect.EnumType {
	return &file_proto_api_call_proto_enumTypes[4]
}

func (x LinkRequest_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkRequest_Method.Descriptor instead.
func (LinkRequest_Method) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{10, 0}
}

// (Highway) AuthorizeRequest is Message for Verifying Request (Hmac Sha256)
type AuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SName    string `protobuf:"bytes,1,opt,name=sName,proto3" json:"sName,omitempty"`       // SName combined with Device ID and Hashed
	Mnemonic string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"` // Mnemonic Hashed with public key for fingerprint
	DeviceId string `protobuf:"bytes,3,opt,name=deviceId,proto3" json:"deviceId,omitempty"` // Device ID
}

func (x *AuthorizeRequest) Reset() {
	*x = AuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRequest) ProtoMessage() {}

func (x *AuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizeRequest) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *AuthorizeRequest) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *AuthorizeRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// (Highway) AuthorizeResponse is Message for Verifying Response (Hmac Sha256)
type AuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                                                                        // If Values were Verified
	Error   string            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                                                                                             // Error Message
	Records map[string]string `protobuf:"bytes,3,rep,name=records,proto3" json:"records,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Updated Domain TXT Records
}

func (x *AuthorizeResponse) Reset() {
	*x = AuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeResponse) ProtoMessage() {}

func (x *AuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorizeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthorizeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AuthorizeResponse) GetRecords() map[string]string {
	if x != nil {
		return x.Records
	}
	return nil
}

// (Client) InitializeRequest Message to Establish Sonr Host/API/Room
type InitializeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location       *common.Location                  `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`                                                                                           // Current Runtime Location
	Profile        *common.Profile                   `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`                                                                                             // Users Contact Card
	Connection     common.Connection                 `protobuf:"varint,3,opt,name=connection,proto3,enum=sonr.core.Connection" json:"connection,omitempty"`                                                            // Internet Connection Type
	HostOptions    *InitializeRequest_HostOptions    `protobuf:"bytes,4,opt,name=hostOptions,proto3" json:"hostOptions,omitempty"`                                                                                     // Libp2p Host config
	ServiceOptions *InitializeRequest_ServiceOptions `protobuf:"bytes,5,opt,name=serviceOptions,proto3" json:"serviceOptions,omitempty"`                                                                               // Service Config
	DeviceOptions  *InitializeRequest_DeviceOptions  `protobuf:"bytes,6,opt,name=deviceOptions,proto3" json:"deviceOptions,omitempty"`                                                                                 // File System Config
	Environment    common.Environment                `protobuf:"varint,7,opt,name=environment,proto3,enum=sonr.core.Environment" json:"environment,omitempty"`                                                         // Environment Config
	Variables      map[string]string                 `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Domain TXT Records
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{2}
}

func (x *InitializeRequest) GetLocation() *common.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *InitializeRequest) GetProfile() *common.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *InitializeRequest) GetConnection() common.Connection {
	if x != nil {
		return x.Connection
	}
	return common.Connection(0)
}

func (x *InitializeRequest) GetHostOptions() *InitializeRequest_HostOptions {
	if x != nil {
		return x.HostOptions
	}
	return nil
}

func (x *InitializeRequest) GetServiceOptions() *InitializeRequest_ServiceOptions {
	if x != nil {
		return x.ServiceOptions
	}
	return nil
}

func (x *InitializeRequest) GetDeviceOptions() *InitializeRequest_DeviceOptions {
	if x != nil {
		return x.DeviceOptions
	}
	return nil
}

func (x *InitializeRequest) GetEnvironment() common.Environment {
	if x != nil {
		return x.Environment
	}
	return common.Environment(0)
}

func (x *InitializeRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

// (Client) InitializeResponse is Response from Initialize Request
type InitializeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool                           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                                                                        // True if Host is Active
	Error      string                         `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                                                                                             // Error Message if Host is not Active
	Profile    *common.Profile                `protobuf:"bytes,3,opt,name=profile,proto3" json:"profile,omitempty"`                                                                                         // Users Profile from store
	Recents    map[string]*common.ProfileList `protobuf:"bytes,4,rep,name=recents,proto3" json:"recents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Recent Peers from store
	History    map[string]*common.PayloadList `protobuf:"bytes,5,rep,name=history,proto3" json:"history,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // File transfer history from store
	UserStatus InitializeResponse_UserStatus  `protobuf:"varint,6,opt,name=userStatus,proto3,enum=sonr.api.InitializeResponse_UserStatus" json:"userStatus,omitempty"`                                      // User Status from store'
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{3}
}

func (x *InitializeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InitializeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *InitializeResponse) GetProfile() *common.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *InitializeResponse) GetRecents() map[string]*common.ProfileList {
	if x != nil {
		return x.Recents
	}
	return nil
}

func (x *InitializeResponse) GetHistory() map[string]*common.PayloadList {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *InitializeResponse) GetUserStatus() InitializeResponse_UserStatus {
	if x != nil {
		return x.UserStatus
	}
	return InitializeResponse_RETURNING
}

// (Client) SupplyRequest supplies path to files or urls and optionally a Peer
type SupplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []string     `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`     // Supply Paths
	Peer  *common.Peer `protobuf:"bytes,2,opt,name=peer,proto3,oneof" json:"peer,omitempty"` // Supply Peer
}

func (x *SupplyRequest) Reset() {
	*x = SupplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyRequest) ProtoMessage() {}

func (x *SupplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyRequest.ProtoReflect.Descriptor instead.
func (*SupplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{4}
}

func (x *SupplyRequest) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *SupplyRequest) GetPeer() *common.Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// (Client) SupplyResponse is response to SupplyRequest
type SupplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // True if Supply is Active
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error Message if Supply is not Active
}

func (x *SupplyResponse) Reset() {
	*x = SupplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyResponse) ProtoMessage() {}

func (x *SupplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyResponse.ProtoReflect.Descriptor instead.
func (*SupplyResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{5}
}

func (x *SupplyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SupplyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// (Client) EditRequest is request to edit user profile
type EditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    EditRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=sonr.api.EditRequest_Type" json:"type,omitempty"` // Type of Edit
	Profile *common.Profile  `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`                           // Profile to Edit
	// Types that are assignable to DeleteValue:
	//	*EditRequest_History
	//	*EditRequest_Recent
	DeleteValue isEditRequest_DeleteValue `protobuf_oneof:"deleteValue"`
}

func (x *EditRequest) Reset() {
	*x = EditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRequest) ProtoMessage() {}

func (x *EditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRequest.ProtoReflect.Descriptor instead.
func (*EditRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{6}
}

func (x *EditRequest) GetType() EditRequest_Type {
	if x != nil {
		return x.Type
	}
	return EditRequest_NONE
}

func (x *EditRequest) GetProfile() *common.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (m *EditRequest) GetDeleteValue() isEditRequest_DeleteValue {
	if m != nil {
		return m.DeleteValue
	}
	return nil
}

func (x *EditRequest) GetHistory() *common.Payload {
	if x, ok := x.GetDeleteValue().(*EditRequest_History); ok {
		return x.History
	}
	return nil
}

func (x *EditRequest) GetRecent() *common.Profile {
	if x, ok := x.GetDeleteValue().(*EditRequest_Recent); ok {
		return x.Recent
	}
	return nil
}

type isEditRequest_DeleteValue interface {
	isEditRequest_DeleteValue()
}

type EditRequest_History struct {
	History *common.Payload `protobuf:"bytes,3,opt,name=history,proto3,oneof"` // Payload to Delete
}

type EditRequest_Recent struct {
	Recent *common.Profile `protobuf:"bytes,4,opt,name=recent,proto3,oneof"` // Profile to Delete
}

func (*EditRequest_History) isEditRequest_DeleteValue() {}

func (*EditRequest_Recent) isEditRequest_DeleteValue() {}

// (Client) EditResponse is response to EditRequest
type EditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // True if Supply is Active
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error Message if Supply is not Active
}

func (x *EditResponse) Reset() {
	*x = EditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditResponse) ProtoMessage() {}

func (x *EditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditResponse.ProtoReflect.Descriptor instead.
func (*EditResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{7}
}

func (x *EditResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EditResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Fetch Request to Fetch a Property from Key/Value Store
type FetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key FetchRequest_Key `protobuf:"varint,1,opt,name=key,proto3,enum=sonr.api.FetchRequest_Key" json:"key,omitempty"` // Key to Fetch
}

func (x *FetchRequest) Reset() {
	*x = FetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRequest) ProtoMessage() {}

func (x *FetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRequest.ProtoReflect.Descriptor instead.
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{8}
}

func (x *FetchRequest) GetKey() FetchRequest_Key {
	if x != nil {
		return x.Key
	}
	return FetchRequest_ALL
}

// (Client) Fetch Response to Fetch Request
type FetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                                                                        // True if Fetch is Active
	Error   string                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                                                                                             // Error Message if Fetch is not Active
	Profile *common.Profile         `protobuf:"bytes,3,opt,name=profile,proto3" json:"profile,omitempty"`                                                                                         // Profile
	Devices map[string]*common.Peer `protobuf:"bytes,4,rep,name=devices,proto3" json:"devices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Linked Devices
	//map<string, sonr.core.ProfileList> recents = 5; // Recent Peers
	Recents *common.ProfileList `protobuf:"bytes,5,opt,name=recents,proto3" json:"recents,omitempty"` // Recent Peers
	//map<string, sonr.core.PayloadList> history = 6; // File Transfer History
	History *common.PayloadList `protobuf:"bytes,6,opt,name=history,proto3" json:"history,omitempty"` // File Transfer History
}

func (x *FetchResponse) Reset() {
	*x = FetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchResponse) ProtoMessage() {}

func (x *FetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchResponse.ProtoReflect.Descriptor instead.
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{9}
}

func (x *FetchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FetchResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FetchResponse) GetProfile() *common.Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *FetchResponse) GetDevices() map[string]*common.Peer {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *FetchResponse) GetRecents() *common.ProfileList {
	if x != nil {
		return x.Recents
	}
	return nil
}

func (x *FetchResponse) GetHistory() *common.PayloadList {
	if x != nil {
		return x.History
	}
	return nil
}

// (Highway) LinkRequest handles Linked Devices on DNS Table
type LinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SName    string             `protobuf:"bytes,1,opt,name=sName,proto3" json:"sName,omitempty"`                                     // SName combined with Device ID and Hashed
	Mnemonic string             `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`                               // Mnemonic Hashed with public key for fingerprint
	DeviceId string             `protobuf:"bytes,3,opt,name=deviceId,proto3" json:"deviceId,omitempty"`                               // Device ID
	Method   LinkRequest_Method `protobuf:"varint,4,opt,name=method,proto3,enum=sonr.api.LinkRequest_Method" json:"method,omitempty"` // Method for Linking
}

func (x *LinkRequest) Reset() {
	*x = LinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkRequest) ProtoMessage() {}

func (x *LinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkRequest.ProtoReflect.Descriptor instead.
func (*LinkRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{10}
}

func (x *LinkRequest) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *LinkRequest) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *LinkRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *LinkRequest) GetMethod() LinkRequest_Method {
	if x != nil {
		return x.Method
	}
	return LinkRequest_ADD
}

// (Highway) LinkResponse is Message for Linking Response (Hmac Sha256)
type LinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                                                                        // If Values were Signed
	Error   string            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                                                                                             // Error Message
	Records map[string]string `protobuf:"bytes,3,rep,name=records,proto3" json:"records,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Updated Domain TXT Records
}

func (x *LinkResponse) Reset() {
	*x = LinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkResponse) ProtoMessage() {}

func (x *LinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkResponse.ProtoReflect.Descriptor instead.
func (*LinkResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{11}
}

func (x *LinkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LinkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *LinkResponse) GetRecords() map[string]string {
	if x != nil {
		return x.Records
	}
	return nil
}

// (Client) ShareRequest is request to share supplied files/urls with a peer
type ShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer    *common.Peer        `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`       // Peer to Share with
	Message *common.MessageItem `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Message to Share
}

func (x *ShareRequest) Reset() {
	*x = ShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareRequest) ProtoMessage() {}

func (x *ShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareRequest.ProtoReflect.Descriptor instead.
func (*ShareRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{12}
}

func (x *ShareRequest) GetPeer() *common.Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *ShareRequest) GetMessage() *common.MessageItem {
	if x != nil {
		return x.Message
	}
	return nil
}

// (Client) ShareResponse is response to ShareRequest
type ShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // True if Supply is Active
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error Message if Supply is not Active
}

func (x *ShareResponse) Reset() {
	*x = ShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareResponse) ProtoMessage() {}

func (x *ShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareResponse.ProtoReflect.Descriptor instead.
func (*ShareResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{13}
}

func (x *ShareResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ShareResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// (Highway) RegisterRequest is Message for Signing Request (Hmac Sha256)
type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SName       string `protobuf:"bytes,1,opt,name=sName,proto3" json:"sName,omitempty"`             // SName combined with Device ID and Hashed
	Prefix      string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`           // Mnemonic Hashed with private key for fingerprint
	Fingerprint string `protobuf:"bytes,3,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"` // Fingerprint of Public Key
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{14}
}

func (x *RegisterRequest) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *RegisterRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *RegisterRequest) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

// (Highway) RegisterResponse is Message for Signing Response (Hmac Sha256)
type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                                                                        // If Values were Signed
	Error   string            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                                                                                             // Error Message
	Records map[string]string `protobuf:"bytes,3,rep,name=records,proto3" json:"records,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Signed Domain TXT Records
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{15}
}

func (x *RegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RegisterResponse) GetRecords() map[string]string {
	if x != nil {
		return x.Records
	}
	return nil
}

// (Client) RespondRequest is request to respond to a share request
type RespondRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decision bool         `protobuf:"varint,1,opt,name=decision,proto3" json:"decision,omitempty"` // True if Supply is Active
	Peer     *common.Peer `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`          // Peer to Share with
}

func (x *RespondRequest) Reset() {
	*x = RespondRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondRequest) ProtoMessage() {}

func (x *RespondRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondRequest.ProtoReflect.Descriptor instead.
func (*RespondRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{16}
}

func (x *RespondRequest) GetDecision() bool {
	if x != nil {
		return x.Decision
	}
	return false
}

func (x *RespondRequest) GetPeer() *common.Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// (Client) RespondResponse is response to RespondRequest
type RespondResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // True if Supply is Active
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error Message if Supply is not Active
}

func (x *RespondResponse) Reset() {
	*x = RespondResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespondResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondResponse) ProtoMessage() {}

func (x *RespondResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondResponse.ProtoReflect.Descriptor instead.
func (*RespondResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{17}
}

func (x *RespondResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespondResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// (Client) SearchRequest is Message for Searching for Peer
type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//	*SearchRequest_SName
	//	*SearchRequest_PeerId
	Query isSearchRequest_Query `protobuf_oneof:"query"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{18}
}

func (m *SearchRequest) GetQuery() isSearchRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *SearchRequest) GetSName() string {
	if x, ok := x.GetQuery().(*SearchRequest_SName); ok {
		return x.SName
	}
	return ""
}

func (x *SearchRequest) GetPeerId() string {
	if x, ok := x.GetQuery().(*SearchRequest_PeerId); ok {
		return x.PeerId
	}
	return ""
}

type isSearchRequest_Query interface {
	isSearchRequest_Query()
}

type SearchRequest_SName struct {
	SName string `protobuf:"bytes,1,opt,name=sName,proto3,oneof"` // SName combined with Device ID and Hashed
}

type SearchRequest_PeerId struct {
	PeerId string `protobuf:"bytes,2,opt,name=peerId,proto3,oneof"` // Peer ID
}

func (*SearchRequest_SName) isSearchRequest_Query() {}

func (*SearchRequest_PeerId) isSearchRequest_Query() {}

// (Client) SearchResponse is Message for Searching for Peer
type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Success
	Error   string       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error Message
	Peer    *common.Peer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`        // Peer Data
	PeerId  string       `protobuf:"bytes,4,opt,name=peerId,proto3" json:"peerId,omitempty"`    // Peer ID
	SName   string       `protobuf:"bytes,5,opt,name=sName,proto3" json:"sName,omitempty"`      // SName
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{19}
}

func (x *SearchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SearchResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SearchResponse) GetPeer() *common.Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *SearchResponse) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *SearchResponse) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

// Optional Message to Initialize FileSystem
type InitializeRequest_DeviceOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                     // Device ID
	CacheDir     string `protobuf:"bytes,2,opt,name=cacheDir,proto3" json:"cacheDir,omitempty"`         // Cache Directory
	DatabaseDir  string `protobuf:"bytes,3,opt,name=databaseDir,proto3" json:"databaseDir,omitempty"`   // Database Directory
	DocumentsDir string `protobuf:"bytes,4,opt,name=documentsDir,proto3" json:"documentsDir,omitempty"` // Documents Directory
	DownloadsDir string `protobuf:"bytes,5,opt,name=downloadsDir,proto3" json:"downloadsDir,omitempty"` // Downloads Directory
	TextileDir   string `protobuf:"bytes,6,opt,name=textileDir,proto3" json:"textileDir,omitempty"`     // Textile Directory
	SupportDir   string `protobuf:"bytes,7,opt,name=supportDir,proto3" json:"supportDir,omitempty"`     // Support Directory
}

func (x *InitializeRequest_DeviceOptions) Reset() {
	*x = InitializeRequest_DeviceOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest_DeviceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest_DeviceOptions) ProtoMessage() {}

func (x *InitializeRequest_DeviceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest_DeviceOptions.ProtoReflect.Descriptor instead.
func (*InitializeRequest_DeviceOptions) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{2, 1}
}

func (x *InitializeRequest_DeviceOptions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InitializeRequest_DeviceOptions) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *InitializeRequest_DeviceOptions) GetDatabaseDir() string {
	if x != nil {
		return x.DatabaseDir
	}
	return ""
}

func (x *InitializeRequest_DeviceOptions) GetDocumentsDir() string {
	if x != nil {
		return x.DocumentsDir
	}
	return ""
}

func (x *InitializeRequest_DeviceOptions) GetDownloadsDir() string {
	if x != nil {
		return x.DownloadsDir
	}
	return ""
}

func (x *InitializeRequest_DeviceOptions) GetTextileDir() string {
	if x != nil {
		return x.TextileDir
	}
	return ""
}

func (x *InitializeRequest_DeviceOptions) GetSupportDir() string {
	if x != nil {
		return x.SupportDir
	}
	return ""
}

// Libp2p Host Options
type InitializeRequest_HostOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuicTransport bool                           `protobuf:"varint,1,opt,name=quicTransport,proto3" json:"quicTransport,omitempty"` // Enable QUIC Transport
	HttpTransport bool                           `protobuf:"varint,2,opt,name=httpTransport,proto3" json:"httpTransport,omitempty"` // Enable HTTP Transport
	Ipv4Only      bool                           `protobuf:"varint,3,opt,name=ipv4Only,proto3" json:"ipv4Only,omitempty"`           // Enable IPv4 Only
	ListenAddrs   []*InitializeRequest_IPAddress `protobuf:"bytes,4,rep,name=listenAddrs,proto3" json:"listenAddrs,omitempty"`      // List of Listen Addresses (optional)
}

func (x *InitializeRequest_HostOptions) Reset() {
	*x = InitializeRequest_HostOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest_HostOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest_HostOptions) ProtoMessage() {}

func (x *InitializeRequest_HostOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest_HostOptions.ProtoReflect.Descriptor instead.
func (*InitializeRequest_HostOptions) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{2, 2}
}

func (x *InitializeRequest_HostOptions) GetQuicTransport() bool {
	if x != nil {
		return x.QuicTransport
	}
	return false
}

func (x *InitializeRequest_HostOptions) GetHttpTransport() bool {
	if x != nil {
		return x.HttpTransport
	}
	return false
}

func (x *InitializeRequest_HostOptions) GetIpv4Only() bool {
	if x != nil {
		return x.Ipv4Only
	}
	return false
}

func (x *InitializeRequest_HostOptions) GetListenAddrs() []*InitializeRequest_IPAddress {
	if x != nil {
		return x.ListenAddrs
	}
	return nil
}

// Service Configuration
type InitializeRequest_ServiceOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Textile  bool  `protobuf:"varint,1,opt,name=textile,proto3" json:"textile,omitempty"`   // Enable Textile Client and Threads
	Mailbox  bool  `protobuf:"varint,2,opt,name=mailbox,proto3" json:"mailbox,omitempty"`   // Enable Mailbox
	Buckets  bool  `protobuf:"varint,3,opt,name=buckets,proto3" json:"buckets,omitempty"`   // Enable Buckets
	Interval int32 `protobuf:"varint,4,opt,name=interval,proto3" json:"interval,omitempty"` // Auto Update Interval (seconds) - Default 5s
}

func (x *InitializeRequest_ServiceOptions) Reset() {
	*x = InitializeRequest_ServiceOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest_ServiceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest_ServiceOptions) ProtoMessage() {}

func (x *InitializeRequest_ServiceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest_ServiceOptions.ProtoReflect.Descriptor instead.
func (*InitializeRequest_ServiceOptions) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{2, 3}
}

func (x *InitializeRequest_ServiceOptions) GetTextile() bool {
	if x != nil {
		return x.Textile
	}
	return false
}

func (x *InitializeRequest_ServiceOptions) GetMailbox() bool {
	if x != nil {
		return x.Mailbox
	}
	return false
}

func (x *InitializeRequest_ServiceOptions) GetBuckets() bool {
	if x != nil {
		return x.Buckets
	}
	return false
}

func (x *InitializeRequest_ServiceOptions) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

// IP Address Interface
type InitializeRequest_IPAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                       // Name of Interface
	Address  string                             `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                                                 // IP Address of Interface
	Internal bool                               `protobuf:"varint,3,opt,name=internal,proto3" json:"internal,omitempty"`                                              // Wether it is a Loopback Interface
	Family   InitializeRequest_IPAddress_Family `protobuf:"varint,4,opt,name=family,proto3,enum=sonr.api.InitializeRequest_IPAddress_Family" json:"family,omitempty"` // Address Family
}

func (x *InitializeRequest_IPAddress) Reset() {
	*x = InitializeRequest_IPAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_call_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest_IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest_IPAddress) ProtoMessage() {}

func (x *InitializeRequest_IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_call_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest_IPAddress.ProtoReflect.Descriptor instead.
func (*InitializeRequest_IPAddress) Descriptor() ([]byte, []int) {
	return file_proto_api_call_proto_rawDescGZIP(), []int{2, 4}
}

func (x *InitializeRequest_IPAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InitializeRequest_IPAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *InitializeRequest_IPAddress) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *InitializeRequest_IPAddress) GetFamily() InitializeRequest_IPAddress_Family {
	if x != nil {
		return x.Family
	}
	return InitializeRequest_IPAddress_IPV4
}

var File_proto_api_call_proto protoreflect.FileDescriptor

var file_proto_api_call_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x6c, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x60, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x3a,
	0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbc, 0x0a, 0x0a, 0x11, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x52, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4f, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x48, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xe5, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x44, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x44, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x44, 0x69, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72,
	0x1a, 0xbe, 0x01, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x71, 0x75, 0x69, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x71, 0x75, 0x69, 0x63, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68,
	0x74, 0x74, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x70, 0x76, 0x34, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x70, 0x76, 0x34, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x47, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x73, 0x1a, 0x7a, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x1a, 0xb9, 0x01,
	0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x22, 0x1c, 0x0a, 0x06, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x34, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x36, 0x10, 0x01, 0x22, 0x93, 0x04, 0x0a, 0x12, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x43,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x1a, 0x52, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x52, 0x0a, 0x0c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x24, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x54, 0x55, 0x52,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x22,
	0x58, 0x0a, 0x0d, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x0e, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x82, 0x02, 0x0a, 0x0b,
	0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00,
	0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x10,
	0x02, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3e, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x80, 0x01, 0x0a, 0x0c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x42, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x43,
	0x45, 0x4e, 0x54, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52,
	0x59, 0x10, 0x04, 0x22, 0xde, 0x02, 0x0a, 0x0d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xb0, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x1d, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52,
	0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x65, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x0d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x61, 0x0a, 0x0f, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0xc1,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x51, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4a, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x93, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2d, 0x69, 0x6f,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_call_proto_rawDescOnce sync.Once
	file_proto_api_call_proto_rawDescData = file_proto_api_call_proto_rawDesc
)

func file_proto_api_call_proto_rawDescGZIP() []byte {
	file_proto_api_call_proto_rawDescOnce.Do(func() {
		file_proto_api_call_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_call_proto_rawDescData)
	})
	return file_proto_api_call_proto_rawDescData
}

var file_proto_api_call_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_api_call_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_proto_api_call_proto_goTypes = []interface{}{
	(InitializeRequest_IPAddress_Family)(0),  // 0: sonr.api.InitializeRequest.IPAddress.Family
	(InitializeResponse_UserStatus)(0),       // 1: sonr.api.InitializeResponse.UserStatus
	(EditRequest_Type)(0),                    // 2: sonr.api.EditRequest.Type
	(FetchRequest_Key)(0),                    // 3: sonr.api.FetchRequest.Key
	(LinkRequest_Method)(0),                  // 4: sonr.api.LinkRequest.Method
	(*AuthorizeRequest)(nil),                 // 5: sonr.api.AuthorizeRequest
	(*AuthorizeResponse)(nil),                // 6: sonr.api.AuthorizeResponse
	(*InitializeRequest)(nil),                // 7: sonr.api.InitializeRequest
	(*InitializeResponse)(nil),               // 8: sonr.api.InitializeResponse
	(*SupplyRequest)(nil),                    // 9: sonr.api.SupplyRequest
	(*SupplyResponse)(nil),                   // 10: sonr.api.SupplyResponse
	(*EditRequest)(nil),                      // 11: sonr.api.EditRequest
	(*EditResponse)(nil),                     // 12: sonr.api.EditResponse
	(*FetchRequest)(nil),                     // 13: sonr.api.FetchRequest
	(*FetchResponse)(nil),                    // 14: sonr.api.FetchResponse
	(*LinkRequest)(nil),                      // 15: sonr.api.LinkRequest
	(*LinkResponse)(nil),                     // 16: sonr.api.LinkResponse
	(*ShareRequest)(nil),                     // 17: sonr.api.ShareRequest
	(*ShareResponse)(nil),                    // 18: sonr.api.ShareResponse
	(*RegisterRequest)(nil),                  // 19: sonr.api.RegisterRequest
	(*RegisterResponse)(nil),                 // 20: sonr.api.RegisterResponse
	(*RespondRequest)(nil),                   // 21: sonr.api.RespondRequest
	(*RespondResponse)(nil),                  // 22: sonr.api.RespondResponse
	(*SearchRequest)(nil),                    // 23: sonr.api.SearchRequest
	(*SearchResponse)(nil),                   // 24: sonr.api.SearchResponse
	nil,                                      // 25: sonr.api.AuthorizeResponse.RecordsEntry
	nil,                                      // 26: sonr.api.InitializeRequest.VariablesEntry
	(*InitializeRequest_DeviceOptions)(nil),  // 27: sonr.api.InitializeRequest.DeviceOptions
	(*InitializeRequest_HostOptions)(nil),    // 28: sonr.api.InitializeRequest.HostOptions
	(*InitializeRequest_ServiceOptions)(nil), // 29: sonr.api.InitializeRequest.ServiceOptions
	(*InitializeRequest_IPAddress)(nil),      // 30: sonr.api.InitializeRequest.IPAddress
	nil,                                      // 31: sonr.api.InitializeResponse.RecentsEntry
	nil,                                      // 32: sonr.api.InitializeResponse.HistoryEntry
	nil,                                      // 33: sonr.api.FetchResponse.DevicesEntry
	nil,                                      // 34: sonr.api.LinkResponse.RecordsEntry
	nil,                                      // 35: sonr.api.RegisterResponse.RecordsEntry
	(*common.Location)(nil),                  // 36: sonr.core.Location
	(*common.Profile)(nil),                   // 37: sonr.core.Profile
	(common.Connection)(0),                   // 38: sonr.core.Connection
	(common.Environment)(0),                  // 39: sonr.core.Environment
	(*common.Peer)(nil),                      // 40: sonr.core.Peer
	(*common.Payload)(nil),                   // 41: sonr.core.Payload
	(*common.ProfileList)(nil),               // 42: sonr.core.ProfileList
	(*common.PayloadList)(nil),               // 43: sonr.core.PayloadList
	(*common.MessageItem)(nil),               // 44: sonr.core.MessageItem
}
var file_proto_api_call_proto_depIdxs = []int32{
	25, // 0: sonr.api.AuthorizeResponse.records:type_name -> sonr.api.AuthorizeResponse.RecordsEntry
	36, // 1: sonr.api.InitializeRequest.location:type_name -> sonr.core.Location
	37, // 2: sonr.api.InitializeRequest.profile:type_name -> sonr.core.Profile
	38, // 3: sonr.api.InitializeRequest.connection:type_name -> sonr.core.Connection
	28, // 4: sonr.api.InitializeRequest.hostOptions:type_name -> sonr.api.InitializeRequest.HostOptions
	29, // 5: sonr.api.InitializeRequest.serviceOptions:type_name -> sonr.api.InitializeRequest.ServiceOptions
	27, // 6: sonr.api.InitializeRequest.deviceOptions:type_name -> sonr.api.InitializeRequest.DeviceOptions
	39, // 7: sonr.api.InitializeRequest.environment:type_name -> sonr.core.Environment
	26, // 8: sonr.api.InitializeRequest.variables:type_name -> sonr.api.InitializeRequest.VariablesEntry
	37, // 9: sonr.api.InitializeResponse.profile:type_name -> sonr.core.Profile
	31, // 10: sonr.api.InitializeResponse.recents:type_name -> sonr.api.InitializeResponse.RecentsEntry
	32, // 11: sonr.api.InitializeResponse.history:type_name -> sonr.api.InitializeResponse.HistoryEntry
	1,  // 12: sonr.api.InitializeResponse.userStatus:type_name -> sonr.api.InitializeResponse.UserStatus
	40, // 13: sonr.api.SupplyRequest.peer:type_name -> sonr.core.Peer
	2,  // 14: sonr.api.EditRequest.type:type_name -> sonr.api.EditRequest.Type
	37, // 15: sonr.api.EditRequest.profile:type_name -> sonr.core.Profile
	41, // 16: sonr.api.EditRequest.history:type_name -> sonr.core.Payload
	37, // 17: sonr.api.EditRequest.recent:type_name -> sonr.core.Profile
	3,  // 18: sonr.api.FetchRequest.key:type_name -> sonr.api.FetchRequest.Key
	37, // 19: sonr.api.FetchResponse.profile:type_name -> sonr.core.Profile
	33, // 20: sonr.api.FetchResponse.devices:type_name -> sonr.api.FetchResponse.DevicesEntry
	42, // 21: sonr.api.FetchResponse.recents:type_name -> sonr.core.ProfileList
	43, // 22: sonr.api.FetchResponse.history:type_name -> sonr.core.PayloadList
	4,  // 23: sonr.api.LinkRequest.method:type_name -> sonr.api.LinkRequest.Method
	34, // 24: sonr.api.LinkResponse.records:type_name -> sonr.api.LinkResponse.RecordsEntry
	40, // 25: sonr.api.ShareRequest.peer:type_name -> sonr.core.Peer
	44, // 26: sonr.api.ShareRequest.message:type_name -> sonr.core.MessageItem
	35, // 27: sonr.api.RegisterResponse.records:type_name -> sonr.api.RegisterResponse.RecordsEntry
	40, // 28: sonr.api.RespondRequest.peer:type_name -> sonr.core.Peer
	40, // 29: sonr.api.SearchResponse.peer:type_name -> sonr.core.Peer
	30, // 30: sonr.api.InitializeRequest.HostOptions.listenAddrs:type_name -> sonr.api.InitializeRequest.IPAddress
	0,  // 31: sonr.api.InitializeRequest.IPAddress.family:type_name -> sonr.api.InitializeRequest.IPAddress.Family
	42, // 32: sonr.api.InitializeResponse.RecentsEntry.value:type_name -> sonr.core.ProfileList
	43, // 33: sonr.api.InitializeResponse.HistoryEntry.value:type_name -> sonr.core.PayloadList
	40, // 34: sonr.api.FetchResponse.DevicesEntry.value:type_name -> sonr.core.Peer
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_proto_api_call_proto_init() }
func file_proto_api_call_proto_init() {
	if File_proto_api_call_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_call_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespondResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest_DeviceOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest_HostOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest_ServiceOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_call_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest_IPAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_api_call_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_proto_api_call_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*EditRequest_History)(nil),
		(*EditRequest_Recent)(nil),
	}
	file_proto_api_call_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*SearchRequest_SName)(nil),
		(*SearchRequest_PeerId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_call_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_api_call_proto_goTypes,
		DependencyIndexes: file_proto_api_call_proto_depIdxs,
		EnumInfos:         file_proto_api_call_proto_enumTypes,
		MessageInfos:      file_proto_api_call_proto_msgTypes,
	}.Build()
	File_proto_api_call_proto = out.File
	file_proto_api_call_proto_rawDesc = nil
	file_proto_api_call_proto_goTypes = nil
	file_proto_api_call_proto_depIdxs = nil
}
