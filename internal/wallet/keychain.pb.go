// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/wallet/keychain.proto

package wallet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KeychainType is the type of keychain.
type KeychainType int32

const (
	KeychainType_SONR KeychainType = 0
	KeychainType_ETH  KeychainType = 1
	KeychainType_BTC  KeychainType = 2
	KeychainType_SOL  KeychainType = 3
)

// Enum value maps for KeychainType.
var (
	KeychainType_name = map[int32]string{
		0: "SONR",
		1: "ETH",
		2: "BTC",
		3: "SOL",
	}
	KeychainType_value = map[string]int32{
		"SONR": 0,
		"ETH":  1,
		"BTC":  2,
		"SOL":  3,
	}
)

func (x KeychainType) Enum() *KeychainType {
	p := new(KeychainType)
	*p = x
	return p
}

func (x KeychainType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeychainType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_wallet_keychain_proto_enumTypes[0].Descriptor()
}

func (KeychainType) Type() protoreflect.EnumType {
	return &file_proto_wallet_keychain_proto_enumTypes[0]
}

func (x KeychainType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeychainType.Descriptor instead.
func (KeychainType) EnumDescriptor() ([]byte, []int) {
	return file_proto_wallet_keychain_proto_rawDescGZIP(), []int{0}
}

// KeyPair represents a public/private key pair.
type KeyPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label      string      `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	PrivateKey *PrivateKey `protobuf:"bytes,2,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	PublicKey  *PublicKey  `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *KeyPair) Reset() {
	*x = KeyPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_keychain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPair) ProtoMessage() {}

func (x *KeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_keychain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPair.ProtoReflect.Descriptor instead.
func (*KeyPair) Descriptor() ([]byte, []int) {
	return file_proto_wallet_keychain_proto_rawDescGZIP(), []int{0}
}

func (x *KeyPair) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *KeyPair) GetPrivateKey() *PrivateKey {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *KeyPair) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Keychain is a collection of KeyPair objects.
type Keychain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    KeychainType        `protobuf:"varint,1,opt,name=type,proto3,enum=sonr.wallet.KeychainType" json:"type,omitempty"`                                                          // Type of keychain
	Path    string              `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`                                                                                         // path to keychain
	Address string              `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                                                                   // address is: Libp2p Address, Ethereum Address, Bitcoin Address, or Solana Address
	Keys    map[string]*KeyPair `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // keys is: map<string, KeyPair>
}

func (x *Keychain) Reset() {
	*x = Keychain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wallet_keychain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keychain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keychain) ProtoMessage() {}

func (x *Keychain) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_keychain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keychain.ProtoReflect.Descriptor instead.
func (*Keychain) Descriptor() ([]byte, []int) {
	return file_proto_wallet_keychain_proto_rawDescGZIP(), []int{1}
}

func (x *Keychain) GetType() KeychainType {
	if x != nil {
		return x.Type
	}
	return KeychainType_SONR
}

func (x *Keychain) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Keychain) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Keychain) GetKeys() map[string]*KeyPair {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_proto_wallet_keychain_proto protoreflect.FileDescriptor

var file_proto_wallet_keychain_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x6b,
	0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e,
	0x01, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22,
	0xeb, 0x01, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x4b,
	0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x1a, 0x4d,
	0x0a, 0x09, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x33, 0x0a,
	0x0c, 0x4b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x4f, 0x4e, 0x52, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x54, 0x48, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x54, 0x43, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4f, 0x4c,
	0x10, 0x03, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_wallet_keychain_proto_rawDescOnce sync.Once
	file_proto_wallet_keychain_proto_rawDescData = file_proto_wallet_keychain_proto_rawDesc
)

func file_proto_wallet_keychain_proto_rawDescGZIP() []byte {
	file_proto_wallet_keychain_proto_rawDescOnce.Do(func() {
		file_proto_wallet_keychain_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_wallet_keychain_proto_rawDescData)
	})
	return file_proto_wallet_keychain_proto_rawDescData
}

var file_proto_wallet_keychain_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_wallet_keychain_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_wallet_keychain_proto_goTypes = []interface{}{
	(KeychainType)(0),  // 0: sonr.wallet.KeychainType
	(*KeyPair)(nil),    // 1: sonr.wallet.KeyPair
	(*Keychain)(nil),   // 2: sonr.wallet.Keychain
	nil,                // 3: sonr.wallet.Keychain.KeysEntry
	(*PrivateKey)(nil), // 4: sonr.wallet.PrivateKey
	(*PublicKey)(nil),  // 5: sonr.wallet.PublicKey
}
var file_proto_wallet_keychain_proto_depIdxs = []int32{
	4, // 0: sonr.wallet.KeyPair.privateKey:type_name -> sonr.wallet.PrivateKey
	5, // 1: sonr.wallet.KeyPair.publicKey:type_name -> sonr.wallet.PublicKey
	0, // 2: sonr.wallet.Keychain.type:type_name -> sonr.wallet.KeychainType
	3, // 3: sonr.wallet.Keychain.keys:type_name -> sonr.wallet.Keychain.KeysEntry
	1, // 4: sonr.wallet.Keychain.KeysEntry.value:type_name -> sonr.wallet.KeyPair
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_wallet_keychain_proto_init() }
func file_proto_wallet_keychain_proto_init() {
	if File_proto_wallet_keychain_proto != nil {
		return
	}
	file_proto_wallet_crypto_proto_init()
	file_proto_wallet_keys_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_wallet_keychain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wallet_keychain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keychain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_wallet_keychain_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_wallet_keychain_proto_goTypes,
		DependencyIndexes: file_proto_wallet_keychain_proto_depIdxs,
		EnumInfos:         file_proto_wallet_keychain_proto_enumTypes,
		MessageInfos:      file_proto_wallet_keychain_proto_msgTypes,
	}.Build()
	File_proto_wallet_keychain_proto = out.File
	file_proto_wallet_keychain_proto_rawDesc = nil
	file_proto_wallet_keychain_proto_goTypes = nil
	file_proto_wallet_keychain_proto_depIdxs = nil
}
