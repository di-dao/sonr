name: Release Workflow

on:
  push:
    tags:
      - v*
  pull_request:
    types:
      - closed

jobs:
  motor-bind-ios:
    name: Run Motor Bind iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - run: mkdir -p build
        working-directory: ${{ github.workspace}}
      - id: tag
        uses: dawidd6/action-get-tag@v1
      - uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      - name: Build Framework
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          gomobile bind -ldflags='-s -w' -target=ios -prefix=SNR -o Motor.xcframework -v
        working-directory: ${{ github.workspace }}/bind/motor-mobile

      - name: Compress Library
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: ${{ github.workspace }}/bind/motor-mobile
          files: |
            ./Motor.xcframework
          outPath: build/motor-${{steps.tag.outputs.tag}}-ios.tar.gz

      - name: Upload to Github Release
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: build/
  #     # - name: motor-ios Repository Dispatch
  #     #   uses: peter-evans/repository-dispatch@v2
  #     #   with:
  #     #     token: ${{ secrets.ACTIONS_GH_TOKEN }}
  #     #     repository: sonr-io/motor-ios
  #     #     event-type: new-ios-framework
  #     #     client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

  motor-bind-android:
    name: Run Motor Bind Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: mkdir -p build
        working-directory: ${{ github.workspace }}

      - id: tag
        uses: dawidd6/action-get-tag@v1

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"

      - name: Configure Golang w/ cache
        uses: actions/setup-go@v3
        with:
          go-version: ~1.18

      - name: Build Framework
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          gomobile bind -ldflags='-s -w' -target=android/arm64 -o io.sonr.motor.aar -v
        working-directory: ${{ github.workspace }}/bind/motor-mobile

      - name: Compress Library
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: ${{ github.workspace }}/bind/motor-mobile
          files: |
            ./io.sonr.motor.aar
          outPath: build/motor-${{steps.tag.outputs.tag}}-android.tar.gz

      - name: Upload to Github Release
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: build/
  #     # - name: motor-android Repository Dispatch
  #     #   uses: peter-evans/repository-dispatch@v2
  #     #   with:
  #     #     token: ${{ secrets.ACTIONS_GH_TOKEN }}
  #     #     repository: sonr-io/motor-android
  #     #     event-type: new-android-framework
  #     #     client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

  blockchain-build:
    name: "Release Latest Blockchain Daemon"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare Release Variables
        id: vars
        uses: ignite-hq/cli/actions/release/vars@develop

      - name: Issue Release Assets
        uses: ignite-hq/cli/actions/cli@develop
        if: ${{ steps.vars.outputs.should_release == 'true' }}
        with:
          args: chain build --release --release.prefix ${{ steps.vars.outputs.tarball_prefix }} -t linux:amd64 -t darwin:amd64

      - name: Delete the "latest" Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        if: ${{ steps.vars.outputs.is_release_type_latest == 'true' }}
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          delete_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.vars.outputs.should_release == 'true' }}
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          files: release/*
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
