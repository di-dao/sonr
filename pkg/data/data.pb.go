// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: data.proto

package data

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Payload is type of Data being transferred
type Payload int32

const (
	Payload_NONE    Payload = 0 // Not Specified
	Payload_CONTACT Payload = 1 // Sonr Based Contact
	Payload_FILE    Payload = 2 // File Transfer
	Payload_FILES   Payload = 3 // Multiple Files
	Payload_URL     Payload = 4 // Link to Site
	Payload_MEDIA   Payload = 5 // Media Payload - (Audio, Photo, Video)
	Payload_ALBUM   Payload = 6 // Multiple Media Transfer
)

// Enum value maps for Payload.
var (
	Payload_name = map[int32]string{
		0: "NONE",
		1: "CONTACT",
		2: "FILE",
		3: "FILES",
		4: "URL",
		5: "MEDIA",
		6: "ALBUM",
	}
	Payload_value = map[string]int32{
		"NONE":    0,
		"CONTACT": 1,
		"FILE":    2,
		"FILES":   3,
		"URL":     4,
		"MEDIA":   5,
		"ALBUM":   6,
	}
)

func (x Payload) Enum() *Payload {
	p := new(Payload)
	*p = x
	return p
}

func (x Payload) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Payload) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[0].Descriptor()
}

func (Payload) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[0]
}

func (x Payload) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Payload.Descriptor instead.
func (Payload) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

type Contact_Design_Color int32

const (
	Contact_Design_Transparent  Contact_Design_Color = 0  // Clear Color
	Contact_Design_Primary      Contact_Design_Color = 1  // Blue Varient
	Contact_Design_Secondary    Contact_Design_Color = 2  // Purple Varient
	Contact_Design_Tertiary     Contact_Design_Color = 3  // Green Varient
	Contact_Design_Critical     Contact_Design_Color = 4  // Red Varient
	Contact_Design_AccentPink   Contact_Design_Color = 5  // Light Pink
	Contact_Design_AccentBlue   Contact_Design_Color = 6  // Light Blue
	Contact_Design_AccentNavy   Contact_Design_Color = 7  // Strong Navy
	Contact_Design_AccentPurple Contact_Design_Color = 8  // Light Purple
	Contact_Design_Black        Contact_Design_Color = 9  // Black Varient
	Contact_Design_White        Contact_Design_Color = 10 // White Varient
	Contact_Design_Grey         Contact_Design_Color = 11 // Grey Varient
)

// Enum value maps for Contact_Design_Color.
var (
	Contact_Design_Color_name = map[int32]string{
		0:  "Transparent",
		1:  "Primary",
		2:  "Secondary",
		3:  "Tertiary",
		4:  "Critical",
		5:  "AccentPink",
		6:  "AccentBlue",
		7:  "AccentNavy",
		8:  "AccentPurple",
		9:  "Black",
		10: "White",
		11: "Grey",
	}
	Contact_Design_Color_value = map[string]int32{
		"Transparent":  0,
		"Primary":      1,
		"Secondary":    2,
		"Tertiary":     3,
		"Critical":     4,
		"AccentPink":   5,
		"AccentBlue":   6,
		"AccentNavy":   7,
		"AccentPurple": 8,
		"Black":        9,
		"White":        10,
		"Grey":         11,
	}
)

func (x Contact_Design_Color) Enum() *Contact_Design_Color {
	p := new(Contact_Design_Color)
	*p = x
	return p
}

func (x Contact_Design_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contact_Design_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[1].Descriptor()
}

func (Contact_Design_Color) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[1]
}

func (x Contact_Design_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contact_Design_Color.Descriptor instead.
func (Contact_Design_Color) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 4, 0}
}

type Contact_General_Gender_Options int32

const (
	Contact_General_Gender_Unspecified Contact_General_Gender_Options = 0 // Default
	Contact_General_Gender_Male        Contact_General_Gender_Options = 1 // Male Gender
	Contact_General_Gender_Female      Contact_General_Gender_Options = 2 // Female Gender
)

// Enum value maps for Contact_General_Gender_Options.
var (
	Contact_General_Gender_Options_name = map[int32]string{
		0: "Unspecified",
		1: "Male",
		2: "Female",
	}
	Contact_General_Gender_Options_value = map[string]int32{
		"Unspecified": 0,
		"Male":        1,
		"Female":      2,
	}
)

func (x Contact_General_Gender_Options) Enum() *Contact_General_Gender_Options {
	p := new(Contact_General_Gender_Options)
	*p = x
	return p
}

func (x Contact_General_Gender_Options) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contact_General_Gender_Options) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[2].Descriptor()
}

func (Contact_General_Gender_Options) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[2]
}

func (x Contact_General_Gender_Options) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contact_General_Gender_Options.Descriptor instead.
func (Contact_General_Gender_Options) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 5, 2, 0}
}

// Social Media Service
type Contact_Social_Media int32

const (
	Contact_Social_Instagram Contact_Social_Media = 0  // Feed/Post/Link
	Contact_Social_TikTok    Contact_Social_Media = 1  // Post/Link
	Contact_Social_Facebook  Contact_Social_Media = 2  // Link Only
	Contact_Social_YouTube   Contact_Social_Media = 3  // Post/Link
	Contact_Social_Medium    Contact_Social_Media = 5  // Feed/Post/Link
	Contact_Social_Twitter   Contact_Social_Media = 6  // Feed/Post/Link
	Contact_Social_Snapchat  Contact_Social_Media = 7  // Link Only
	Contact_Social_Github    Contact_Social_Media = 8  // Link Only
	Contact_Social_LinkedIn  Contact_Social_Media = 9  // Link Only
	Contact_Social_Twitch    Contact_Social_Media = 10 // Link Only
	Contact_Social_Pinterest Contact_Social_Media = 11 // Link Only
	Contact_Social_Vimeo     Contact_Social_Media = 12 // Link Only
	Contact_Social_Gumroad   Contact_Social_Media = 13 // Link and Items
)

// Enum value maps for Contact_Social_Media.
var (
	Contact_Social_Media_name = map[int32]string{
		0:  "Instagram",
		1:  "TikTok",
		2:  "Facebook",
		3:  "YouTube",
		5:  "Medium",
		6:  "Twitter",
		7:  "Snapchat",
		8:  "Github",
		9:  "LinkedIn",
		10: "Twitch",
		11: "Pinterest",
		12: "Vimeo",
		13: "Gumroad",
	}
	Contact_Social_Media_value = map[string]int32{
		"Instagram": 0,
		"TikTok":    1,
		"Facebook":  2,
		"YouTube":   3,
		"Medium":    5,
		"Twitter":   6,
		"Snapchat":  7,
		"Github":    8,
		"LinkedIn":  9,
		"Twitch":    10,
		"Pinterest": 11,
		"Vimeo":     12,
		"Gumroad":   13,
	}
)

func (x Contact_Social_Media) Enum() *Contact_Social_Media {
	p := new(Contact_Social_Media)
	*p = x
	return p
}

func (x Contact_Social_Media) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contact_Social_Media) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[3].Descriptor()
}

func (Contact_Social_Media) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[3]
}

func (x Contact_Social_Media) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contact_Social_Media.Descriptor instead.
func (Contact_Social_Media) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 6, 0}
}

// Music Service
type Contact_Social_Music int32

const (
	Contact_Social_Spotify    Contact_Social_Music = 0 // Live Listening
	Contact_Social_AppleMusic Contact_Social_Music = 1 // Last Listening
	Contact_Social_SoundCloud Contact_Social_Music = 2 // Link Only
)

// Enum value maps for Contact_Social_Music.
var (
	Contact_Social_Music_name = map[int32]string{
		0: "Spotify",
		1: "AppleMusic",
		2: "SoundCloud",
	}
	Contact_Social_Music_value = map[string]int32{
		"Spotify":    0,
		"AppleMusic": 1,
		"SoundCloud": 2,
	}
)

func (x Contact_Social_Music) Enum() *Contact_Social_Music {
	p := new(Contact_Social_Music)
	*p = x
	return p
}

func (x Contact_Social_Music) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contact_Social_Music) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[4].Descriptor()
}

func (Contact_Social_Music) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[4]
}

func (x Contact_Social_Music) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contact_Social_Music.Descriptor instead.
func (Contact_Social_Music) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 6, 1}
}

// Payment Service
type Contact_Social_Payment int32

const (
	Contact_Social_CashApp  Contact_Social_Payment = 0 // Link Only
	Contact_Social_Venmo    Contact_Social_Payment = 1 // Link Only
	Contact_Social_PayPal   Contact_Social_Payment = 2 // Link Only
	Contact_Social_Bitcoin  Contact_Social_Payment = 3 // QR Code/ Address
	Contact_Social_Ethereum Contact_Social_Payment = 4 // QR Code/ Address
)

// Enum value maps for Contact_Social_Payment.
var (
	Contact_Social_Payment_name = map[int32]string{
		0: "CashApp",
		1: "Venmo",
		2: "PayPal",
		3: "Bitcoin",
		4: "Ethereum",
	}
	Contact_Social_Payment_value = map[string]int32{
		"CashApp":  0,
		"Venmo":    1,
		"PayPal":   2,
		"Bitcoin":  3,
		"Ethereum": 4,
	}
)

func (x Contact_Social_Payment) Enum() *Contact_Social_Payment {
	p := new(Contact_Social_Payment)
	*p = x
	return p
}

func (x Contact_Social_Payment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contact_Social_Payment) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[5].Descriptor()
}

func (Contact_Social_Payment) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[5]
}

func (x Contact_Social_Payment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contact_Social_Payment.Descriptor instead.
func (Contact_Social_Payment) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 6, 2}
}

// Social Tile Visibility
type Contact_Social_Visibility int32

const (
	Contact_Social_Unknown       Contact_Social_Visibility = 0 // No Visibility Set
	Contact_Social_Private       Contact_Social_Visibility = 1 // Private Account
	Contact_Social_Public        Contact_Social_Visibility = 2 // Public Account
	Contact_Social_PrivateHidden Contact_Social_Visibility = 3 // Private and Hidden
	Contact_Social_PublicHidden  Contact_Social_Visibility = 4 // Public and Hidden
)

// Enum value maps for Contact_Social_Visibility.
var (
	Contact_Social_Visibility_name = map[int32]string{
		0: "Unknown",
		1: "Private",
		2: "Public",
		3: "PrivateHidden",
		4: "PublicHidden",
	}
	Contact_Social_Visibility_value = map[string]int32{
		"Unknown":       0,
		"Private":       1,
		"Public":        2,
		"PrivateHidden": 3,
		"PublicHidden":  4,
	}
)

func (x Contact_Social_Visibility) Enum() *Contact_Social_Visibility {
	p := new(Contact_Social_Visibility)
	*p = x
	return p
}

func (x Contact_Social_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Contact_Social_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[6].Descriptor()
}

func (Contact_Social_Visibility) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[6]
}

func (x Contact_Social_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Contact_Social_Visibility.Descriptor instead.
func (Contact_Social_Visibility) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 6, 3}
}

type MIME_Type int32

const (
	MIME_OTHER        MIME_Type = 0 // Other File Type - If cannot derive from Subtype
	MIME_AUDIO        MIME_Type = 1 // Sound, Audio Files
	MIME_IMAGE        MIME_Type = 2 // Image Files
	MIME_TEXT         MIME_Type = 3 // Text Based Files
	MIME_PDF          MIME_Type = 4 // PDF Format
	MIME_PRESENTATION MIME_Type = 5 // PPT type Files
	MIME_SPREADSHEET  MIME_Type = 6 // CSV/Excel type files
	MIME_VIDEO        MIME_Type = 7 // Video Files
	MIME_SNR          MIME_Type = 8 // SNR Files
)

// Enum value maps for MIME_Type.
var (
	MIME_Type_name = map[int32]string{
		0: "OTHER",
		1: "AUDIO",
		2: "IMAGE",
		3: "TEXT",
		4: "PDF",
		5: "PRESENTATION",
		6: "SPREADSHEET",
		7: "VIDEO",
		8: "SNR",
	}
	MIME_Type_value = map[string]int32{
		"OTHER":        0,
		"AUDIO":        1,
		"IMAGE":        2,
		"TEXT":         3,
		"PDF":          4,
		"PRESENTATION": 5,
		"SPREADSHEET":  6,
		"VIDEO":        7,
		"SNR":          8,
	}
)

func (x MIME_Type) Enum() *MIME_Type {
	p := new(MIME_Type)
	*p = x
	return p
}

func (x MIME_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MIME_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[7].Descriptor()
}

func (MIME_Type) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[7]
}

func (x MIME_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MIME_Type.Descriptor instead.
func (MIME_Type) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1, 0}
}

// Contact is Extensive User Info that can be passed
type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPublic    bool                        `protobuf:"varint,1,opt,name=isPublic,proto3" json:"isPublic,omitempty"`                                                                                          // If Contact card is Public
	Profile     *Profile                    `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`                                                                                             // General Profile Information
	General     *Contact_General            `protobuf:"bytes,3,opt,name=general,proto3" json:"general,omitempty"`                                                                                             // Base General Contact Fields, Key is Label
	Design      *Contact_Design             `protobuf:"bytes,4,opt,name=design,proto3" json:"design,omitempty"`                                                                                               // Card Design Properties
	Addresses   map[string]*Contact_Address `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Address Fields, Key is Label
	Socials     map[string]*Contact_Social  `protobuf:"bytes,6,rep,name=socials,proto3" json:"socials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`     // Social Media Fields, Key is Username
	Websites    map[string]*URLLink         `protobuf:"bytes,7,rep,name=websites,proto3" json:"websites,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`   // Website Links
	LastUpdated int32                       `protobuf:"varint,8,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`                                                                                    // UnixTime of last Updated
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

func (x *Contact) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *Contact) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Contact) GetGeneral() *Contact_General {
	if x != nil {
		return x.General
	}
	return nil
}

func (x *Contact) GetDesign() *Contact_Design {
	if x != nil {
		return x.Design
	}
	return nil
}

func (x *Contact) GetAddresses() map[string]*Contact_Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *Contact) GetSocials() map[string]*Contact_Social {
	if x != nil {
		return x.Socials
	}
	return nil
}

func (x *Contact) GetWebsites() map[string]*URLLink {
	if x != nil {
		return x.Websites
	}
	return nil
}

func (x *Contact) GetLastUpdated() int32 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

// Standard MIME with Additional Extensions
type MIME struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    MIME_Type `protobuf:"varint,1,opt,name=type,proto3,enum=data.MIME_Type" json:"type,omitempty"` // Type of File
	Subtype string    `protobuf:"bytes,2,opt,name=subtype,proto3" json:"subtype,omitempty"`                // Extension of File
	Value   string    `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                    // Type/Subtype i.e. (image/jpeg)
}

func (x *MIME) Reset() {
	*x = MIME{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MIME) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MIME) ProtoMessage() {}

func (x *MIME) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MIME.ProtoReflect.Descriptor instead.
func (*MIME) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1}
}

func (x *MIME) GetType() MIME_Type {
	if x != nil {
		return x.Type
	}
	return MIME_OTHER
}

func (x *MIME) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *MIME) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// For Transfer File Payload
type SFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Payload of File
	Payload Payload `protobuf:"varint,1,opt,name=payload,proto3,enum=data.Payload" json:"payload,omitempty"`
	// Total Transfer Count
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// Total Transfer Size
	Size int32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// List of Files as Metadata
	Items []*SFile_Item `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SFile) Reset() {
	*x = SFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SFile) ProtoMessage() {}

func (x *SFile) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SFile.ProtoReflect.Descriptor instead.
func (*SFile) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{2}
}

func (x *SFile) GetPayload() Payload {
	if x != nil {
		return x.Payload
	}
	return Payload_NONE
}

func (x *SFile) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SFile) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SFile) GetItems() []*SFile_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// Transfer is Data thats being Passed
type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // SQL: Id reference
	Payload  Payload  `protobuf:"varint,2,opt,name=payload,proto3,enum=data.Payload" json:"payload,omitempty"` // SQL: Type of Data received
	Received int32    `protobuf:"varint,3,opt,name=received,proto3" json:"received,omitempty"`                 // SQL: UnixTime of received Date/Time
	Receiver *Profile `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`                  // PROFILE: General Receiver Info
	Owner    *Profile `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`                        // PROFILE: General Sender Info
	// Attached Data
	//
	// Types that are assignable to Data:
	//	*Transfer_Contact
	//	*Transfer_File
	//	*Transfer_Url
	Data isTransfer_Data `protobuf_oneof:"data"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{3}
}

func (x *Transfer) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Transfer) GetPayload() Payload {
	if x != nil {
		return x.Payload
	}
	return Payload_NONE
}

func (x *Transfer) GetReceived() int32 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *Transfer) GetReceiver() *Profile {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *Transfer) GetOwner() *Profile {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (m *Transfer) GetData() isTransfer_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Transfer) GetContact() *Contact {
	if x, ok := x.GetData().(*Transfer_Contact); ok {
		return x.Contact
	}
	return nil
}

func (x *Transfer) GetFile() *SFile {
	if x, ok := x.GetData().(*Transfer_File); ok {
		return x.File
	}
	return nil
}

func (x *Transfer) GetUrl() *URLLink {
	if x, ok := x.GetData().(*Transfer_Url); ok {
		return x.Url
	}
	return nil
}

type isTransfer_Data interface {
	isTransfer_Data()
}

type Transfer_Contact struct {
	Contact *Contact `protobuf:"bytes,6,opt,name=contact,proto3,oneof"` // DATA(Optional): Received Contact Information
}

type Transfer_File struct {
	File *SFile `protobuf:"bytes,7,opt,name=file,proto3,oneof"` // DATA(Optional): Received a File
}

type Transfer_Url struct {
	Url *URLLink `protobuf:"bytes,8,opt,name=url,proto3,oneof"` // DATA(Optional): Received a Website Link
}

func (*Transfer_Contact) isTransfer_Data() {}

func (*Transfer_File) isTransfer_Data() {}

func (*Transfer_Url) isTransfer_Data() {}

// URLLink Contains metadata of provided URL
type URLLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Initialized bool                      `protobuf:"varint,1,opt,name=initialized,proto3" json:"initialized,omitempty"` // Whether URL Metadata has been Loaded
	Url         string                    `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                  // OG URL Link
	Title       string                    `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`              // Meta Field for Title
	Type        string                    `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                // OG Type
	Site        string                    `protobuf:"bytes,5,opt,name=site,proto3" json:"site,omitempty"`                // Meta field for site
	SiteName    string                    `protobuf:"bytes,6,opt,name=siteName,proto3" json:"siteName,omitempty"`        // Meta field for sitename
	Description string                    `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`  // Meta field for description
	Locale      string                    `protobuf:"bytes,8,opt,name=locale,proto3" json:"locale,omitempty"`            // Meta field for locale
	Images      []*URLLink_OpenGraphImage `protobuf:"bytes,9,rep,name=images,proto3" json:"images,omitempty"`            // Images
	Videos      []*URLLink_OpenGraphVideo `protobuf:"bytes,10,rep,name=videos,proto3" json:"videos,omitempty"`           // Videos
	Audios      []*URLLink_OpenGraphAudio `protobuf:"bytes,11,rep,name=audios,proto3" json:"audios,omitempty"`           // Audios
	Twitter     *URLLink_TwitterCard      `protobuf:"bytes,12,opt,name=twitter,proto3" json:"twitter,omitempty"`         // Twitter Card
	Content     string                    `protobuf:"bytes,13,opt,name=content,proto3" json:"content,omitempty"`         // URL Content
}

func (x *URLLink) Reset() {
	*x = URLLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink) ProtoMessage() {}

func (x *URLLink) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink.ProtoReflect.Descriptor instead.
func (*URLLink) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4}
}

func (x *URLLink) GetInitialized() bool {
	if x != nil {
		return x.Initialized
	}
	return false
}

func (x *URLLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *URLLink) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *URLLink) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *URLLink) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

func (x *URLLink) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *URLLink) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *URLLink) GetImages() []*URLLink_OpenGraphImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *URLLink) GetVideos() []*URLLink_OpenGraphVideo {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *URLLink) GetAudios() []*URLLink_OpenGraphAudio {
	if x != nil {
		return x.Audios
	}
	return nil
}

func (x *URLLink) GetTwitter() *URLLink_TwitterCard {
	if x != nil {
		return x.Twitter
	}
	return nil
}

func (x *URLLink) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Address: Field for Contact field
type Contact_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPrimary   bool   `protobuf:"varint,1,opt,name=isPrimary,proto3" json:"isPrimary,omitempty"`    // If this is the Primary field for Address
	Label       string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`             // Address Label for Type
	Street      string `protobuf:"bytes,3,opt,name=street,proto3" json:"street,omitempty"`           // Address First Line Street
	StreetTwo   string `protobuf:"bytes,4,opt,name=streetTwo,proto3" json:"streetTwo,omitempty"`     // Address Second Line Street
	City        string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`               // City of Address
	State       string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`             // Address State
	Zipcode     string `protobuf:"bytes,7,opt,name=zipcode,proto3" json:"zipcode,omitempty"`         // Address Zip Code
	Country     string `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`         // Address Country
	CountryCode string `protobuf:"bytes,9,opt,name=countryCode,proto3" json:"countryCode,omitempty"` // Address Country Code
}

func (x *Contact_Address) Reset() {
	*x = Contact_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_Address) ProtoMessage() {}

func (x *Contact_Address) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_Address.ProtoReflect.Descriptor instead.
func (*Contact_Address) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Contact_Address) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *Contact_Address) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Contact_Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Contact_Address) GetStreetTwo() string {
	if x != nil {
		return x.StreetTwo
	}
	return ""
}

func (x *Contact_Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Contact_Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Contact_Address) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *Contact_Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Contact_Address) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

// Design: Card Design Values
type Contact_Design struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card    int32                `protobuf:"varint,1,opt,name=card,proto3" json:"card,omitempty"`                                      // Background Card Value
	Primary Contact_Design_Color `protobuf:"varint,2,opt,name=primary,proto3,enum=data.Contact_Design_Color" json:"primary,omitempty"` // Primary Color
	Accent  Contact_Design_Color `protobuf:"varint,3,opt,name=accent,proto3,enum=data.Contact_Design_Color" json:"accent,omitempty"`   // Accent Color for Text/Buttons
}

func (x *Contact_Design) Reset() {
	*x = Contact_Design{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_Design) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_Design) ProtoMessage() {}

func (x *Contact_Design) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_Design.ProtoReflect.Descriptor instead.
func (*Contact_Design) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Contact_Design) GetCard() int32 {
	if x != nil {
		return x.Card
	}
	return 0
}

func (x *Contact_Design) GetPrimary() Contact_Design_Color {
	if x != nil {
		return x.Primary
	}
	return Contact_Design_Transparent
}

func (x *Contact_Design) GetAccent() Contact_Design_Color {
	if x != nil {
		return x.Accent
	}
	return Contact_Design_Transparent
}

// Field : General Field for Contact field
type Contact_General struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bio    string                  `protobuf:"bytes,1,opt,name=bio,proto3" json:"bio,omitempty"`       // If this is the Primary field for Kind
	SName  string                  `protobuf:"bytes,2,opt,name=sName,proto3" json:"sName,omitempty"`   // Type of Field
	Name   *Contact_General_Name   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`     // Name of Field
	Date   *Contact_General_Date   `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`     // Date of Field
	Gender *Contact_General_Gender `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"` // User Gender
	Phone  *Contact_General_Phone  `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`   // User Phone Number
	Email  *Contact_General_Email  `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`   // User Email Address
	Title  *Contact_General_Title  `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`   // User Work Title
}

func (x *Contact_General) Reset() {
	*x = Contact_General{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_General) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_General) ProtoMessage() {}

func (x *Contact_General) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_General.ProtoReflect.Descriptor instead.
func (*Contact_General) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Contact_General) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Contact_General) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *Contact_General) GetName() *Contact_General_Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Contact_General) GetDate() *Contact_General_Date {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Contact_General) GetGender() *Contact_General_Gender {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *Contact_General) GetPhone() *Contact_General_Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *Contact_General) GetEmail() *Contact_General_Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Contact_General) GetTitle() *Contact_General_Title {
	if x != nil {
		return x.Title
	}
	return nil
}

// Social: Field provides Display Information and Provider Information
type Contact_Social struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Properties
	IsPrimary  bool                      `protobuf:"varint,1,opt,name=isPrimary,proto3" json:"isPrimary,omitempty"`                                       // If this is the Primary field for SocialMedia Provider
	Name       string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                  // Profile Name Provided
	Username   string                    `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                                          // Username for Social
	Picture    string                    `protobuf:"bytes,4,opt,name=picture,proto3" json:"picture,omitempty"`                                            // User Social Picture Link
	Visibility Contact_Social_Visibility `protobuf:"varint,5,opt,name=visibility,proto3,enum=data.Contact_Social_Visibility" json:"visibility,omitempty"` // Is the User's Account Private
	// Display Tile Type
	//
	// Types that are assignable to Tile:
	//	*Contact_Social_Icon_
	//	*Contact_Social_Feed_
	//	*Contact_Social_Playlist_
	//	*Contact_Social_Post_
	Tile isContact_Social_Tile `protobuf_oneof:"tile"`
	// Provider for Social Field
	//
	// Types that are assignable to Provider:
	//	*Contact_Social_Media_
	//	*Contact_Social_Music_
	//	*Contact_Social_Payment_
	Provider isContact_Social_Provider `protobuf_oneof:"provider"`
}

func (x *Contact_Social) Reset() {
	*x = Contact_Social{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_Social) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_Social) ProtoMessage() {}

func (x *Contact_Social) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_Social.ProtoReflect.Descriptor instead.
func (*Contact_Social) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Contact_Social) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *Contact_Social) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact_Social) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Contact_Social) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *Contact_Social) GetVisibility() Contact_Social_Visibility {
	if x != nil {
		return x.Visibility
	}
	return Contact_Social_Unknown
}

func (m *Contact_Social) GetTile() isContact_Social_Tile {
	if m != nil {
		return m.Tile
	}
	return nil
}

func (x *Contact_Social) GetIcon() *Contact_Social_Icon {
	if x, ok := x.GetTile().(*Contact_Social_Icon_); ok {
		return x.Icon
	}
	return nil
}

func (x *Contact_Social) GetFeed() *Contact_Social_Feed {
	if x, ok := x.GetTile().(*Contact_Social_Feed_); ok {
		return x.Feed
	}
	return nil
}

func (x *Contact_Social) GetPlaylist() *Contact_Social_Playlist {
	if x, ok := x.GetTile().(*Contact_Social_Playlist_); ok {
		return x.Playlist
	}
	return nil
}

func (x *Contact_Social) GetPost() *Contact_Social_Post {
	if x, ok := x.GetTile().(*Contact_Social_Post_); ok {
		return x.Post
	}
	return nil
}

func (m *Contact_Social) GetProvider() isContact_Social_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *Contact_Social) GetMedia() Contact_Social_Media {
	if x, ok := x.GetProvider().(*Contact_Social_Media_); ok {
		return x.Media
	}
	return Contact_Social_Instagram
}

func (x *Contact_Social) GetMusic() Contact_Social_Music {
	if x, ok := x.GetProvider().(*Contact_Social_Music_); ok {
		return x.Music
	}
	return Contact_Social_Spotify
}

func (x *Contact_Social) GetPayment() Contact_Social_Payment {
	if x, ok := x.GetProvider().(*Contact_Social_Payment_); ok {
		return x.Payment
	}
	return Contact_Social_CashApp
}

type isContact_Social_Tile interface {
	isContact_Social_Tile()
}

type Contact_Social_Icon_ struct {
	Icon *Contact_Social_Icon `protobuf:"bytes,6,opt,name=icon,proto3,oneof"`
}

type Contact_Social_Feed_ struct {
	Feed *Contact_Social_Feed `protobuf:"bytes,7,opt,name=feed,proto3,oneof"`
}

type Contact_Social_Playlist_ struct {
	Playlist *Contact_Social_Playlist `protobuf:"bytes,8,opt,name=playlist,proto3,oneof"`
}

type Contact_Social_Post_ struct {
	Post *Contact_Social_Post `protobuf:"bytes,9,opt,name=post,proto3,oneof"`
}

func (*Contact_Social_Icon_) isContact_Social_Tile() {}

func (*Contact_Social_Feed_) isContact_Social_Tile() {}

func (*Contact_Social_Playlist_) isContact_Social_Tile() {}

func (*Contact_Social_Post_) isContact_Social_Tile() {}

type isContact_Social_Provider interface {
	isContact_Social_Provider()
}

type Contact_Social_Media_ struct {
	Media Contact_Social_Media `protobuf:"varint,10,opt,name=media,proto3,enum=data.Contact_Social_Media,oneof"` // Media Provider
}

type Contact_Social_Music_ struct {
	Music Contact_Social_Music `protobuf:"varint,11,opt,name=music,proto3,enum=data.Contact_Social_Music,oneof"` // Music Provider
}

type Contact_Social_Payment_ struct {
	Payment Contact_Social_Payment `protobuf:"varint,12,opt,name=payment,proto3,enum=data.Contact_Social_Payment,oneof"` // Payment Provider
}

func (*Contact_Social_Media_) isContact_Social_Provider() {}

func (*Contact_Social_Music_) isContact_Social_Provider() {}

func (*Contact_Social_Payment_) isContact_Social_Provider() {}

type Contact_General_Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix     string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`         // Name Prefix
	Suffix     string `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`         // Name Suffix
	MiddleName string `protobuf:"bytes,3,opt,name=middleName,proto3" json:"middleName,omitempty"` // Middlename
	NickName   string `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`     // Nickname
}

func (x *Contact_General_Name) Reset() {
	*x = Contact_General_Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_General_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_General_Name) ProtoMessage() {}

func (x *Contact_General_Name) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_General_Name.ProtoReflect.Descriptor instead.
func (*Contact_General_Name) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *Contact_General_Name) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Contact_General_Name) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *Contact_General_Name) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *Contact_General_Name) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

// Date Field - MillisecondsFromEpoch
type Contact_General_Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthday int32            `protobuf:"varint,1,opt,name=birthday,proto3" json:"birthday,omitempty"`                                                                                   // Birthday
	Dates    map[string]int32 `protobuf:"bytes,2,rep,name=dates,proto3" json:"dates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // Additional Dates
}

func (x *Contact_General_Date) Reset() {
	*x = Contact_General_Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_General_Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_General_Date) ProtoMessage() {}

func (x *Contact_General_Date) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_General_Date.ProtoReflect.Descriptor instead.
func (*Contact_General_Date) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 5, 1}
}

func (x *Contact_General_Date) GetBirthday() int32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *Contact_General_Date) GetDates() map[string]int32 {
	if x != nil {
		return x.Dates
	}
	return nil
}

// Gender
type Contact_General_Gender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value Contact_General_Gender_Options `protobuf:"varint,1,opt,name=value,proto3,enum=data.Contact_General_Gender_Options" json:"value,omitempty"` // Gender Option Value
}

func (x *Contact_General_Gender) Reset() {
	*x = Contact_General_Gender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_General_Gender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_General_Gender) ProtoMessage() {}

func (x *Contact_General_Gender) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_General_Gender.ProtoReflect.Descriptor instead.
func (*Contact_General_Gender) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 5, 2}
}

func (x *Contact_General_Gender) GetValue() Contact_General_Gender_Options {
	if x != nil {
		return x.Value
	}
	return Contact_General_Gender_Unspecified
}

// Phone Numbers
type Contact_General_Phone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primary string            `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`                                                                                         // Primary Phone
	Numbers map[string]string `protobuf:"bytes,2,rep,name=numbers,proto3" json:"numbers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional Phones
}

func (x *Contact_General_Phone) Reset() {
	*x = Contact_General_Phone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_General_Phone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_General_Phone) ProtoMessage() {}

func (x *Contact_General_Phone) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_General_Phone.ProtoReflect.Descriptor instead.
func (*Contact_General_Phone) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 5, 3}
}

func (x *Contact_General_Phone) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *Contact_General_Phone) GetNumbers() map[string]string {
	if x != nil {
		return x.Numbers
	}
	return nil
}

// Email Addresses
type Contact_General_Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primary   *Contact_General_Email_Address            `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`                                                                                             // Primary Email
	Addresses map[string]*Contact_General_Email_Address `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional Addresses
}

func (x *Contact_General_Email) Reset() {
	*x = Contact_General_Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_General_Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_General_Email) ProtoMessage() {}

func (x *Contact_General_Email) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_General_Email.ProtoReflect.Descriptor instead.
func (*Contact_General_Email) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 5, 4}
}

func (x *Contact_General_Email) GetPrimary() *Contact_General_Email_Address {
	if x != nil {
		return x.Primary
	}
	return nil
}

func (x *Contact_General_Email) GetAddresses() map[string]*Contact_General_Email_Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// Employment Info
type Contact_General_Title struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company  string `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`   // Company
	Position string `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"` // Position at Company
}

func (x *Contact_General_Title) Reset() {
	*x = Contact_General_Title{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_General_Title) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_General_Title) ProtoMessage() {}

func (x *Contact_General_Title) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_General_Title.ProtoReflect.Descriptor instead.
func (*Contact_General_Title) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 5, 5}
}

func (x *Contact_General_Title) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Contact_General_Title) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

// Email Address
type Contact_General_Email_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`       // User Defined Label
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`       // Full Email Value
	Host     string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`         // Email Hosting Provider
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"` // Email Username
}

func (x *Contact_General_Email_Address) Reset() {
	*x = Contact_General_Email_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_General_Email_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_General_Email_Address) ProtoMessage() {}

func (x *Contact_General_Email_Address) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_General_Email_Address.ProtoReflect.Descriptor instead.
func (*Contact_General_Email_Address) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 5, 4, 1}
}

func (x *Contact_General_Email_Address) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Contact_General_Email_Address) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Contact_General_Email_Address) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Contact_General_Email_Address) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Simple Icon Button
type Contact_Social_Icon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   // Page Displayed
	Index int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"` // Position in Contact Array
	Link  *URLLink `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`    // Link Provided
}

func (x *Contact_Social_Icon) Reset() {
	*x = Contact_Social_Icon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_Social_Icon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_Social_Icon) ProtoMessage() {}

func (x *Contact_Social_Icon) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_Social_Icon.ProtoReflect.Descriptor instead.
func (*Contact_Social_Icon) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *Contact_Social_Icon) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Contact_Social_Icon) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Contact_Social_Icon) GetLink() *URLLink {
	if x != nil {
		return x.Link
	}
	return nil
}

// Feed Display
type Contact_Social_Feed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   // Page Displayed
	Index int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"` // Position in Contact Array
	Link  *URLLink `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`    // Link Provided
}

func (x *Contact_Social_Feed) Reset() {
	*x = Contact_Social_Feed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_Social_Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_Social_Feed) ProtoMessage() {}

func (x *Contact_Social_Feed) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_Social_Feed.ProtoReflect.Descriptor instead.
func (*Contact_Social_Feed) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 6, 1}
}

func (x *Contact_Social_Feed) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Contact_Social_Feed) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Contact_Social_Feed) GetLink() *URLLink {
	if x != nil {
		return x.Link
	}
	return nil
}

// Playlist Display
type Contact_Social_Playlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   // Page Displayed
	Index int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"` // Position in Contact Array
	Link  *URLLink `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`    // Link Provided
}

func (x *Contact_Social_Playlist) Reset() {
	*x = Contact_Social_Playlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_Social_Playlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_Social_Playlist) ProtoMessage() {}

func (x *Contact_Social_Playlist) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_Social_Playlist.ProtoReflect.Descriptor instead.
func (*Contact_Social_Playlist) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 6, 2}
}

func (x *Contact_Social_Playlist) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Contact_Social_Playlist) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Contact_Social_Playlist) GetLink() *URLLink {
	if x != nil {
		return x.Link
	}
	return nil
}

// Post Display
type Contact_Social_Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   // Page Displayed
	Index int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"` // Position in Contact Array
	Link  *URLLink `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`    // Link Provided
}

func (x *Contact_Social_Post) Reset() {
	*x = Contact_Social_Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact_Social_Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact_Social_Post) ProtoMessage() {}

func (x *Contact_Social_Post) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact_Social_Post.ProtoReflect.Descriptor instead.
func (*Contact_Social_Post) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0, 6, 3}
}

func (x *Contact_Social_Post) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Contact_Social_Post) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Contact_Social_Post) GetLink() *URLLink {
	if x != nil {
		return x.Link
	}
	return nil
}

// For Received Transfer File Information
type SFile_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`      // Local Asset ID
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`  // File Name without Path
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`  // File Location
	Size int32  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"` // File Size in Bytes
	Mime *MIME  `protobuf:"bytes,5,opt,name=mime,proto3" json:"mime,omitempty"`  // Standard Mime Type
	// Thumbnail Preview of File
	//
	// Types that are assignable to Thumbnail:
	//	*SFile_Item_ThumbBuffer
	//	*SFile_Item_ThumbPath
	Thumbnail  isSFile_Item_Thumbnail `protobuf_oneof:"thumbnail"`
	Properties *SFile_Item_Properties `protobuf:"bytes,8,opt,name=properties,proto3" json:"properties,omitempty"` // Media Properties
}

func (x *SFile_Item) Reset() {
	*x = SFile_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SFile_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SFile_Item) ProtoMessage() {}

func (x *SFile_Item) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SFile_Item.ProtoReflect.Descriptor instead.
func (*SFile_Item) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SFile_Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SFile_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SFile_Item) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SFile_Item) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SFile_Item) GetMime() *MIME {
	if x != nil {
		return x.Mime
	}
	return nil
}

func (m *SFile_Item) GetThumbnail() isSFile_Item_Thumbnail {
	if m != nil {
		return m.Thumbnail
	}
	return nil
}

func (x *SFile_Item) GetThumbBuffer() []byte {
	if x, ok := x.GetThumbnail().(*SFile_Item_ThumbBuffer); ok {
		return x.ThumbBuffer
	}
	return nil
}

func (x *SFile_Item) GetThumbPath() string {
	if x, ok := x.GetThumbnail().(*SFile_Item_ThumbPath); ok {
		return x.ThumbPath
	}
	return ""
}

func (x *SFile_Item) GetProperties() *SFile_Item_Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type isSFile_Item_Thumbnail interface {
	isSFile_Item_Thumbnail()
}

type SFile_Item_ThumbBuffer struct {
	ThumbBuffer []byte `protobuf:"bytes,6,opt,name=thumbBuffer,proto3,oneof"` // Thumbnail Buffer
}

type SFile_Item_ThumbPath struct {
	ThumbPath string `protobuf:"bytes,7,opt,name=thumbPath,proto3,oneof"` // Thumbnail Path
}

func (*SFile_Item_ThumbBuffer) isSFile_Item_Thumbnail() {}

func (*SFile_Item_ThumbPath) isSFile_Item_Thumbnail() {}

type SFile_Item_Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAudio      bool  `protobuf:"varint,1,opt,name=isAudio,proto3" json:"isAudio,omitempty"`           // If File is Audio
	IsImage      bool  `protobuf:"varint,2,opt,name=isImage,proto3" json:"isImage,omitempty"`           // If File is Image
	IsVideo      bool  `protobuf:"varint,3,opt,name=isVideo,proto3" json:"isVideo,omitempty"`           // If File is Video
	HasThumbnail bool  `protobuf:"varint,4,opt,name=hasThumbnail,proto3" json:"hasThumbnail,omitempty"` // If File has thumbnail
	IsThumbPath  bool  `protobuf:"varint,5,opt,name=isThumbPath,proto3" json:"isThumbPath,omitempty"`   // If Thumbnail Path is Provided
	Width        int32 `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`               // Media Width
	Height       int32 `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`             // Media Height
	Duration     int32 `protobuf:"varint,8,opt,name=duration,proto3" json:"duration,omitempty"`         // Length of Video - Optional
}

func (x *SFile_Item_Properties) Reset() {
	*x = SFile_Item_Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SFile_Item_Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SFile_Item_Properties) ProtoMessage() {}

func (x *SFile_Item_Properties) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SFile_Item_Properties.ProtoReflect.Descriptor instead.
func (*SFile_Item_Properties) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *SFile_Item_Properties) GetIsAudio() bool {
	if x != nil {
		return x.IsAudio
	}
	return false
}

func (x *SFile_Item_Properties) GetIsImage() bool {
	if x != nil {
		return x.IsImage
	}
	return false
}

func (x *SFile_Item_Properties) GetIsVideo() bool {
	if x != nil {
		return x.IsVideo
	}
	return false
}

func (x *SFile_Item_Properties) GetHasThumbnail() bool {
	if x != nil {
		return x.HasThumbnail
	}
	return false
}

func (x *SFile_Item_Properties) GetIsThumbPath() bool {
	if x != nil {
		return x.IsThumbPath
	}
	return false
}

func (x *SFile_Item_Properties) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *SFile_Item_Properties) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *SFile_Item_Properties) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// OpenGraph Image
type URLLink_OpenGraphImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`             // `meta:"og:image,og:image:url"`
	SecureUrl string `protobuf:"bytes,2,opt,name=secureUrl,proto3" json:"secureUrl,omitempty"` // `meta:"og:image:secure_url"`
	Width     int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`        // `meta:"og:image:width"`
	Height    int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`      // `meta:"og:image:height"`
	Type      string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`           // `meta:"og:image:type"`
}

func (x *URLLink_OpenGraphImage) Reset() {
	*x = URLLink_OpenGraphImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_OpenGraphImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_OpenGraphImage) ProtoMessage() {}

func (x *URLLink_OpenGraphImage) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_OpenGraphImage.ProtoReflect.Descriptor instead.
func (*URLLink_OpenGraphImage) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4, 0}
}

func (x *URLLink_OpenGraphImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_OpenGraphImage) GetSecureUrl() string {
	if x != nil {
		return x.SecureUrl
	}
	return ""
}

func (x *URLLink_OpenGraphImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *URLLink_OpenGraphImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *URLLink_OpenGraphImage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// OpenGraph Video
type URLLink_OpenGraphVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`             // `meta:"og:video,og:video:url"`
	SecureUrl string `protobuf:"bytes,2,opt,name=secureUrl,proto3" json:"secureUrl,omitempty"` // `meta:"og:video:secure_url"`
	Width     int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`        // `meta:"og:video:width"`
	Height    int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`      // `meta:"og:video:height"`
	Type      string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`           // `meta:"og:video:type"`
}

func (x *URLLink_OpenGraphVideo) Reset() {
	*x = URLLink_OpenGraphVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_OpenGraphVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_OpenGraphVideo) ProtoMessage() {}

func (x *URLLink_OpenGraphVideo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_OpenGraphVideo.ProtoReflect.Descriptor instead.
func (*URLLink_OpenGraphVideo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4, 1}
}

func (x *URLLink_OpenGraphVideo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_OpenGraphVideo) GetSecureUrl() string {
	if x != nil {
		return x.SecureUrl
	}
	return ""
}

func (x *URLLink_OpenGraphVideo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *URLLink_OpenGraphVideo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *URLLink_OpenGraphVideo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// OpenGraph Audio
type URLLink_OpenGraphAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`             // `meta:"og:audio,og:audio:url"`
	SecureUrl string `protobuf:"bytes,2,opt,name=secureUrl,proto3" json:"secureUrl,omitempty"` // `meta:"og:audio:secure_url"`
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`           // `meta:"og:audio:type"`
}

func (x *URLLink_OpenGraphAudio) Reset() {
	*x = URLLink_OpenGraphAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_OpenGraphAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_OpenGraphAudio) ProtoMessage() {}

func (x *URLLink_OpenGraphAudio) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_OpenGraphAudio.ProtoReflect.Descriptor instead.
func (*URLLink_OpenGraphAudio) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4, 2}
}

func (x *URLLink_OpenGraphAudio) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_OpenGraphAudio) GetSecureUrl() string {
	if x != nil {
		return x.SecureUrl
	}
	return ""
}

func (x *URLLink_OpenGraphAudio) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Twitter Card
type URLLink_TwitterCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card        string                          `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`               // `meta:"twitter:card"`
	Site        string                          `protobuf:"bytes,2,opt,name=site,proto3" json:"site,omitempty"`               // `meta:"twitter:site"`
	SiteId      string                          `protobuf:"bytes,3,opt,name=siteId,proto3" json:"siteId,omitempty"`           // `meta:"twitter:site:id"`
	Creator     string                          `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`         // `meta:"twitter:creator"`
	CreatorId   string                          `protobuf:"bytes,5,opt,name=creatorId,proto3" json:"creatorId,omitempty"`     // `meta:"twitter:creator:id"`
	Description string                          `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"` // `meta:"twitter:description"`
	Title       string                          `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`             // `meta:"twitter:title"`
	Image       string                          `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`             // `meta:"twitter:image,twitter:image:src"`
	ImageAlt    string                          `protobuf:"bytes,9,opt,name=imageAlt,proto3" json:"imageAlt,omitempty"`       // `meta:"twitter:image:alt"`
	Url         string                          `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`                // `meta:"twitter:url"`
	Player      *URLLink_TwitterCard_Player     `protobuf:"bytes,11,opt,name=player,proto3" json:"player,omitempty"`          // Twitter Item Player
	Iphone      *URLLink_TwitterCard_IPhone     `protobuf:"bytes,12,opt,name=iphone,proto3" json:"iphone,omitempty"`          // Twitter iPhone Data
	Ipad        *URLLink_TwitterCard_IPad       `protobuf:"bytes,13,opt,name=ipad,proto3" json:"ipad,omitempty"`              // Twitter iPad Data
	GooglePlay  *URLLink_TwitterCard_GooglePlay `protobuf:"bytes,14,opt,name=googlePlay,proto3" json:"googlePlay,omitempty"`  // Twitter Android Data
}

func (x *URLLink_TwitterCard) Reset() {
	*x = URLLink_TwitterCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard) ProtoMessage() {}

func (x *URLLink_TwitterCard) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4, 3}
}

func (x *URLLink_TwitterCard) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *URLLink_TwitterCard) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *URLLink_TwitterCard) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *URLLink_TwitterCard) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *URLLink_TwitterCard) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *URLLink_TwitterCard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *URLLink_TwitterCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *URLLink_TwitterCard) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *URLLink_TwitterCard) GetImageAlt() string {
	if x != nil {
		return x.ImageAlt
	}
	return ""
}

func (x *URLLink_TwitterCard) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_TwitterCard) GetPlayer() *URLLink_TwitterCard_Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *URLLink_TwitterCard) GetIphone() *URLLink_TwitterCard_IPhone {
	if x != nil {
		return x.Iphone
	}
	return nil
}

func (x *URLLink_TwitterCard) GetIpad() *URLLink_TwitterCard_IPad {
	if x != nil {
		return x.Ipad
	}
	return nil
}

func (x *URLLink_TwitterCard) GetGooglePlay() *URLLink_TwitterCard_GooglePlay {
	if x != nil {
		return x.GooglePlay
	}
	return nil
}

type URLLink_TwitterCard_Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`        // `meta:"twitter:player"`
	Width  int32  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`   // `meta:"twitter:width"`
	Height int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"` // `meta:"twitter:height"`
	Stream string `protobuf:"bytes,4,opt,name=stream,proto3" json:"stream,omitempty"`  // `meta:"twitter:stream"`
}

func (x *URLLink_TwitterCard_Player) Reset() {
	*x = URLLink_TwitterCard_Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard_Player) ProtoMessage() {}

func (x *URLLink_TwitterCard_Player) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard_Player.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard_Player) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4, 3, 0}
}

func (x *URLLink_TwitterCard_Player) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_TwitterCard_Player) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *URLLink_TwitterCard_Player) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *URLLink_TwitterCard_Player) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

type URLLink_TwitterCard_IPhone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // `meta:"twitter:app:name:iphone"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // `meta:"twitter:app:id:iphone"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`   // `meta:"twitter:app:url:iphone"`
}

func (x *URLLink_TwitterCard_IPhone) Reset() {
	*x = URLLink_TwitterCard_IPhone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard_IPhone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard_IPhone) ProtoMessage() {}

func (x *URLLink_TwitterCard_IPhone) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard_IPhone.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard_IPhone) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4, 3, 1}
}

func (x *URLLink_TwitterCard_IPhone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *URLLink_TwitterCard_IPhone) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *URLLink_TwitterCard_IPhone) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type URLLink_TwitterCard_IPad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // `meta:"twitter:app:name:ipad"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // `meta:"twitter:app:id:ipad"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`   // `meta:"twitter:app:url:ipad"`
}

func (x *URLLink_TwitterCard_IPad) Reset() {
	*x = URLLink_TwitterCard_IPad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard_IPad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard_IPad) ProtoMessage() {}

func (x *URLLink_TwitterCard_IPad) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard_IPad.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard_IPad) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4, 3, 2}
}

func (x *URLLink_TwitterCard_IPad) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *URLLink_TwitterCard_IPad) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *URLLink_TwitterCard_IPad) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type URLLink_TwitterCard_GooglePlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // `meta:"twitter:app:name:googleplay"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // `meta:"twitter:app:id:googleplay"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`   // `meta:"twitter:app:url:googleplay"`
}

func (x *URLLink_TwitterCard_GooglePlay) Reset() {
	*x = URLLink_TwitterCard_GooglePlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard_GooglePlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard_GooglePlay) ProtoMessage() {}

func (x *URLLink_TwitterCard_GooglePlay) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard_GooglePlay.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard_GooglePlay) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4, 3, 3}
}

func (x *URLLink_TwitterCard_GooglePlay) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *URLLink_TwitterCard_GooglePlay) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *URLLink_TwitterCard_GooglePlay) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_data_proto protoreflect.FileDescriptor

var file_data_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb,
	0x1d, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x2f, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x12, 0x2c, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e,
	0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x3a,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x73,
	0x12, 0x37, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x1a, 0x53, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x50, 0x0a, 0x0c, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xf3,
	0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x54, 0x77, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x54, 0x77, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x1a, 0xbb, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x2e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x22, 0xb2, 0x01,
	0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x65, 0x72, 0x74, 0x69, 0x61, 0x72, 0x79,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x6e, 0x6b, 0x10, 0x05,
	0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x10, 0x06,
	0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x76, 0x79, 0x10, 0x07,
	0x12, 0x10, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x70, 0x6c, 0x65,
	0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x10, 0x09, 0x12, 0x09, 0x0a,
	0x05, 0x57, 0x68, 0x69, 0x74, 0x65, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x72, 0x65, 0x79,
	0x10, 0x0b, 0x1a, 0xa8, 0x0a, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x31, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x72, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x99, 0x01, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x3b,
	0x0a, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x44,
	0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x76, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x07, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x61, 0x6c, 0x65, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x10, 0x02, 0x1a, 0xa1, 0x01,
	0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x42, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x2e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0xda, 0x02, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3d, 0x0a, 0x07, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x1a, 0x61, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x65, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x3d,
	0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9c, 0x0a,
	0x0a, 0x06, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x3f, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x65, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x48, 0x01, 0x52, 0x05,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x48, 0x01, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x01, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x53, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x53, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x57, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x53, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52,
	0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0xb1, 0x01, 0x0a, 0x05,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72,
	0x61, 0x6d, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x69, 0x6b, 0x54, 0x6f, 0x6b, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d,
	0x65, 0x64, 0x69, 0x75, 0x6d, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x63, 0x68, 0x61, 0x74,
	0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x10, 0x08, 0x12, 0x0c,
	0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06,
	0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x69, 0x6d, 0x65, 0x6f,
	0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x75, 0x6d, 0x72, 0x6f, 0x61, 0x64, 0x10, 0x0d, 0x22,
	0x34, 0x0a, 0x05, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x10, 0x02, 0x22, 0x48, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x61, 0x73, 0x68, 0x41, 0x70, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x65, 0x6e, 0x6d, 0x6f, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x50,
	0x61, 0x6c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x10, 0x04, 0x22,
	0x57, 0x0a, 0x0a, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x48, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x10, 0x04, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xce, 0x01, 0x0a,
	0x04, 0x4d, 0x49, 0x4d, 0x45, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x49, 0x4d, 0x45, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x71, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47,
	0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x44, 0x46, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e,
	0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x50, 0x52, 0x45,
	0x41, 0x44, 0x53, 0x48, 0x45, 0x45, 0x54, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44,
	0x45, 0x4f, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4e, 0x52, 0x10, 0x08, 0x22, 0xf2, 0x04,
	0x0a, 0x05, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x1a, 0xed, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x49, 0x4d,
	0x45, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x09, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0xea, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x22, 0xa8, 0x02, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x23, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x21, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb8, 0x0c,
	0x0a, 0x07, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x12, 0x34, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55,
	0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x34, 0x0a,
	0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x06, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c,
	0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x1a, 0x82, 0x01, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x82, 0x01, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x54, 0x0a, 0x0e,
	0x4f, 0x70, 0x65, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x1a, 0x93, 0x06, 0x0a, 0x0b, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x41, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x41, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52,
	0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72,
	0x64, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x06, 0x69, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x49, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x52, 0x06, 0x69, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x70,
	0x61, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x2e, 0x49, 0x50, 0x61, 0x64, 0x52, 0x04, 0x69, 0x70, 0x61, 0x64, 0x12, 0x44,
	0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e,
	0x6b, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x1a, 0x60, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x3e, 0x0a, 0x06, 0x49, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x3c, 0x0a, 0x04, 0x49, 0x50, 0x61, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x1a, 0x42, 0x0a, 0x0a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a, 0x54, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49,
	0x4c, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x10, 0x03, 0x12,
	0x07, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x42, 0x55, 0x4d, 0x10, 0x06, 0x42, 0x07,
	0x5a, 0x05, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_proto_rawDescOnce sync.Once
	file_data_proto_rawDescData = file_data_proto_rawDesc
)

func file_data_proto_rawDescGZIP() []byte {
	file_data_proto_rawDescOnce.Do(func() {
		file_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_proto_rawDescData)
	})
	return file_data_proto_rawDescData
}

var file_data_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_data_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_data_proto_goTypes = []interface{}{
	(Payload)(0),                           // 0: data.Payload
	(Contact_Design_Color)(0),              // 1: data.Contact.Design.Color
	(Contact_General_Gender_Options)(0),    // 2: data.Contact.General.Gender.Options
	(Contact_Social_Media)(0),              // 3: data.Contact.Social.Media
	(Contact_Social_Music)(0),              // 4: data.Contact.Social.Music
	(Contact_Social_Payment)(0),            // 5: data.Contact.Social.Payment
	(Contact_Social_Visibility)(0),         // 6: data.Contact.Social.Visibility
	(MIME_Type)(0),                         // 7: data.MIME.Type
	(*Contact)(nil),                        // 8: data.Contact
	(*MIME)(nil),                           // 9: data.MIME
	(*SFile)(nil),                          // 10: data.SFile
	(*Transfer)(nil),                       // 11: data.Transfer
	(*URLLink)(nil),                        // 12: data.URLLink
	nil,                                    // 13: data.Contact.AddressesEntry
	nil,                                    // 14: data.Contact.SocialsEntry
	nil,                                    // 15: data.Contact.WebsitesEntry
	(*Contact_Address)(nil),                // 16: data.Contact.Address
	(*Contact_Design)(nil),                 // 17: data.Contact.Design
	(*Contact_General)(nil),                // 18: data.Contact.General
	(*Contact_Social)(nil),                 // 19: data.Contact.Social
	(*Contact_General_Name)(nil),           // 20: data.Contact.General.Name
	(*Contact_General_Date)(nil),           // 21: data.Contact.General.Date
	(*Contact_General_Gender)(nil),         // 22: data.Contact.General.Gender
	(*Contact_General_Phone)(nil),          // 23: data.Contact.General.Phone
	(*Contact_General_Email)(nil),          // 24: data.Contact.General.Email
	(*Contact_General_Title)(nil),          // 25: data.Contact.General.Title
	nil,                                    // 26: data.Contact.General.Date.DatesEntry
	nil,                                    // 27: data.Contact.General.Phone.NumbersEntry
	nil,                                    // 28: data.Contact.General.Email.AddressesEntry
	(*Contact_General_Email_Address)(nil),  // 29: data.Contact.General.Email.Address
	(*Contact_Social_Icon)(nil),            // 30: data.Contact.Social.Icon
	(*Contact_Social_Feed)(nil),            // 31: data.Contact.Social.Feed
	(*Contact_Social_Playlist)(nil),        // 32: data.Contact.Social.Playlist
	(*Contact_Social_Post)(nil),            // 33: data.Contact.Social.Post
	(*SFile_Item)(nil),                     // 34: data.SFile.Item
	(*SFile_Item_Properties)(nil),          // 35: data.SFile.Item.Properties
	(*URLLink_OpenGraphImage)(nil),         // 36: data.URLLink.OpenGraphImage
	(*URLLink_OpenGraphVideo)(nil),         // 37: data.URLLink.OpenGraphVideo
	(*URLLink_OpenGraphAudio)(nil),         // 38: data.URLLink.OpenGraphAudio
	(*URLLink_TwitterCard)(nil),            // 39: data.URLLink.TwitterCard
	(*URLLink_TwitterCard_Player)(nil),     // 40: data.URLLink.TwitterCard.Player
	(*URLLink_TwitterCard_IPhone)(nil),     // 41: data.URLLink.TwitterCard.IPhone
	(*URLLink_TwitterCard_IPad)(nil),       // 42: data.URLLink.TwitterCard.IPad
	(*URLLink_TwitterCard_GooglePlay)(nil), // 43: data.URLLink.TwitterCard.GooglePlay
	(*Profile)(nil),                        // 44: data.Profile
}
var file_data_proto_depIdxs = []int32{
	44, // 0: data.Contact.profile:type_name -> data.Profile
	18, // 1: data.Contact.general:type_name -> data.Contact.General
	17, // 2: data.Contact.design:type_name -> data.Contact.Design
	13, // 3: data.Contact.addresses:type_name -> data.Contact.AddressesEntry
	14, // 4: data.Contact.socials:type_name -> data.Contact.SocialsEntry
	15, // 5: data.Contact.websites:type_name -> data.Contact.WebsitesEntry
	7,  // 6: data.MIME.type:type_name -> data.MIME.Type
	0,  // 7: data.SFile.payload:type_name -> data.Payload
	34, // 8: data.SFile.items:type_name -> data.SFile.Item
	0,  // 9: data.Transfer.payload:type_name -> data.Payload
	44, // 10: data.Transfer.receiver:type_name -> data.Profile
	44, // 11: data.Transfer.owner:type_name -> data.Profile
	8,  // 12: data.Transfer.contact:type_name -> data.Contact
	10, // 13: data.Transfer.file:type_name -> data.SFile
	12, // 14: data.Transfer.url:type_name -> data.URLLink
	36, // 15: data.URLLink.images:type_name -> data.URLLink.OpenGraphImage
	37, // 16: data.URLLink.videos:type_name -> data.URLLink.OpenGraphVideo
	38, // 17: data.URLLink.audios:type_name -> data.URLLink.OpenGraphAudio
	39, // 18: data.URLLink.twitter:type_name -> data.URLLink.TwitterCard
	16, // 19: data.Contact.AddressesEntry.value:type_name -> data.Contact.Address
	19, // 20: data.Contact.SocialsEntry.value:type_name -> data.Contact.Social
	12, // 21: data.Contact.WebsitesEntry.value:type_name -> data.URLLink
	1,  // 22: data.Contact.Design.primary:type_name -> data.Contact.Design.Color
	1,  // 23: data.Contact.Design.accent:type_name -> data.Contact.Design.Color
	20, // 24: data.Contact.General.name:type_name -> data.Contact.General.Name
	21, // 25: data.Contact.General.date:type_name -> data.Contact.General.Date
	22, // 26: data.Contact.General.gender:type_name -> data.Contact.General.Gender
	23, // 27: data.Contact.General.phone:type_name -> data.Contact.General.Phone
	24, // 28: data.Contact.General.email:type_name -> data.Contact.General.Email
	25, // 29: data.Contact.General.title:type_name -> data.Contact.General.Title
	6,  // 30: data.Contact.Social.visibility:type_name -> data.Contact.Social.Visibility
	30, // 31: data.Contact.Social.icon:type_name -> data.Contact.Social.Icon
	31, // 32: data.Contact.Social.feed:type_name -> data.Contact.Social.Feed
	32, // 33: data.Contact.Social.playlist:type_name -> data.Contact.Social.Playlist
	33, // 34: data.Contact.Social.post:type_name -> data.Contact.Social.Post
	3,  // 35: data.Contact.Social.media:type_name -> data.Contact.Social.Media
	4,  // 36: data.Contact.Social.music:type_name -> data.Contact.Social.Music
	5,  // 37: data.Contact.Social.payment:type_name -> data.Contact.Social.Payment
	26, // 38: data.Contact.General.Date.dates:type_name -> data.Contact.General.Date.DatesEntry
	2,  // 39: data.Contact.General.Gender.value:type_name -> data.Contact.General.Gender.Options
	27, // 40: data.Contact.General.Phone.numbers:type_name -> data.Contact.General.Phone.NumbersEntry
	29, // 41: data.Contact.General.Email.primary:type_name -> data.Contact.General.Email.Address
	28, // 42: data.Contact.General.Email.addresses:type_name -> data.Contact.General.Email.AddressesEntry
	29, // 43: data.Contact.General.Email.AddressesEntry.value:type_name -> data.Contact.General.Email.Address
	12, // 44: data.Contact.Social.Icon.link:type_name -> data.URLLink
	12, // 45: data.Contact.Social.Feed.link:type_name -> data.URLLink
	12, // 46: data.Contact.Social.Playlist.link:type_name -> data.URLLink
	12, // 47: data.Contact.Social.Post.link:type_name -> data.URLLink
	9,  // 48: data.SFile.Item.mime:type_name -> data.MIME
	35, // 49: data.SFile.Item.properties:type_name -> data.SFile.Item.Properties
	40, // 50: data.URLLink.TwitterCard.player:type_name -> data.URLLink.TwitterCard.Player
	41, // 51: data.URLLink.TwitterCard.iphone:type_name -> data.URLLink.TwitterCard.IPhone
	42, // 52: data.URLLink.TwitterCard.ipad:type_name -> data.URLLink.TwitterCard.IPad
	43, // 53: data.URLLink.TwitterCard.googlePlay:type_name -> data.URLLink.TwitterCard.GooglePlay
	54, // [54:54] is the sub-list for method output_type
	54, // [54:54] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_data_proto_init() }
func file_data_proto_init() {
	if File_data_proto != nil {
		return
	}
	file_peer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MIME); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_Design); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_General); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_Social); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_General_Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_General_Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_General_Gender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_General_Phone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_General_Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_General_Title); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_General_Email_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_Social_Icon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_Social_Feed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_Social_Playlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact_Social_Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SFile_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SFile_Item_Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_OpenGraphImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_OpenGraphVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_OpenGraphAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard_Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard_IPhone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard_IPad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard_GooglePlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_data_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Transfer_Contact)(nil),
		(*Transfer_File)(nil),
		(*Transfer_Url)(nil),
	}
	file_data_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*Contact_Social_Icon_)(nil),
		(*Contact_Social_Feed_)(nil),
		(*Contact_Social_Playlist_)(nil),
		(*Contact_Social_Post_)(nil),
		(*Contact_Social_Media_)(nil),
		(*Contact_Social_Music_)(nil),
		(*Contact_Social_Payment_)(nil),
	}
	file_data_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*SFile_Item_ThumbBuffer)(nil),
		(*SFile_Item_ThumbPath)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_proto_goTypes,
		DependencyIndexes: file_data_proto_depIdxs,
		EnumInfos:         file_data_proto_enumTypes,
		MessageInfos:      file_data_proto_msgTypes,
	}.Build()
	File_data_proto = out.File
	file_data_proto_rawDesc = nil
	file_data_proto_goTypes = nil
	file_data_proto_depIdxs = nil
}
