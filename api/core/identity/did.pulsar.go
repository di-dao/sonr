// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package identity

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_DIDDocument_1_list)(nil)

type _DIDDocument_1_list struct {
	list *[]string
}

func (x *_DIDDocument_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DIDDocument_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_DIDDocument_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_DIDDocument_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_DIDDocument_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message DIDDocument at list field Context as it is not of Message kind"))
}

func (x *_DIDDocument_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_DIDDocument_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_DIDDocument_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DIDDocument_3_list)(nil)

type _DIDDocument_3_list struct {
	list *[]string
}

func (x *_DIDDocument_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DIDDocument_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_DIDDocument_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_DIDDocument_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_DIDDocument_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message DIDDocument at list field Controller as it is not of Message kind"))
}

func (x *_DIDDocument_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_DIDDocument_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_DIDDocument_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DIDDocument_5_list)(nil)

type _DIDDocument_5_list struct {
	list *[]*VerificationRelationship
}

func (x *_DIDDocument_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DIDDocument_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DIDDocument_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	(*x.list)[i] = concreteValue
}

func (x *_DIDDocument_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DIDDocument_5_list) AppendMutable() protoreflect.Value {
	v := new(VerificationRelationship)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DIDDocument_5_list) NewElement() protoreflect.Value {
	v := new(VerificationRelationship)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DIDDocument_6_list)(nil)

type _DIDDocument_6_list struct {
	list *[]*VerificationRelationship
}

func (x *_DIDDocument_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DIDDocument_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DIDDocument_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	(*x.list)[i] = concreteValue
}

func (x *_DIDDocument_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DIDDocument_6_list) AppendMutable() protoreflect.Value {
	v := new(VerificationRelationship)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DIDDocument_6_list) NewElement() protoreflect.Value {
	v := new(VerificationRelationship)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DIDDocument_7_list)(nil)

type _DIDDocument_7_list struct {
	list *[]*VerificationRelationship
}

func (x *_DIDDocument_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DIDDocument_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DIDDocument_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	(*x.list)[i] = concreteValue
}

func (x *_DIDDocument_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DIDDocument_7_list) AppendMutable() protoreflect.Value {
	v := new(VerificationRelationship)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DIDDocument_7_list) NewElement() protoreflect.Value {
	v := new(VerificationRelationship)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DIDDocument_8_list)(nil)

type _DIDDocument_8_list struct {
	list *[]*VerificationRelationship
}

func (x *_DIDDocument_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DIDDocument_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DIDDocument_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	(*x.list)[i] = concreteValue
}

func (x *_DIDDocument_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DIDDocument_8_list) AppendMutable() protoreflect.Value {
	v := new(VerificationRelationship)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DIDDocument_8_list) NewElement() protoreflect.Value {
	v := new(VerificationRelationship)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DIDDocument_9_list)(nil)

type _DIDDocument_9_list struct {
	list *[]*VerificationRelationship
}

func (x *_DIDDocument_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DIDDocument_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DIDDocument_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	(*x.list)[i] = concreteValue
}

func (x *_DIDDocument_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VerificationRelationship)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DIDDocument_9_list) AppendMutable() protoreflect.Value {
	v := new(VerificationRelationship)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DIDDocument_9_list) NewElement() protoreflect.Value {
	v := new(VerificationRelationship)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DIDDocument_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_DIDDocument_10_list)(nil)

type _DIDDocument_10_list struct {
	list *[]string
}

func (x *_DIDDocument_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DIDDocument_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_DIDDocument_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_DIDDocument_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_DIDDocument_10_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message DIDDocument at list field AlsoKnownAs as it is not of Message kind"))
}

func (x *_DIDDocument_10_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_DIDDocument_10_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_DIDDocument_10_list) IsValid() bool {
	return x.list != nil
}

var (
	md_DIDDocument                       protoreflect.MessageDescriptor
	fd_DIDDocument_context               protoreflect.FieldDescriptor
	fd_DIDDocument_id                    protoreflect.FieldDescriptor
	fd_DIDDocument_controller            protoreflect.FieldDescriptor
	fd_DIDDocument_authentication        protoreflect.FieldDescriptor
	fd_DIDDocument_assertion_method      protoreflect.FieldDescriptor
	fd_DIDDocument_capability_invocation protoreflect.FieldDescriptor
	fd_DIDDocument_capability_delegation protoreflect.FieldDescriptor
	fd_DIDDocument_key_agreement         protoreflect.FieldDescriptor
	fd_DIDDocument_also_known_as         protoreflect.FieldDescriptor
)

func init() {
	file_core_identity_did_proto_init()
	md_DIDDocument = File_core_identity_did_proto.Messages().ByName("DIDDocument")
	fd_DIDDocument_context = md_DIDDocument.Fields().ByName("context")
	fd_DIDDocument_id = md_DIDDocument.Fields().ByName("id")
	fd_DIDDocument_controller = md_DIDDocument.Fields().ByName("controller")
	fd_DIDDocument_authentication = md_DIDDocument.Fields().ByName("authentication")
	fd_DIDDocument_assertion_method = md_DIDDocument.Fields().ByName("assertion_method")
	fd_DIDDocument_capability_invocation = md_DIDDocument.Fields().ByName("capability_invocation")
	fd_DIDDocument_capability_delegation = md_DIDDocument.Fields().ByName("capability_delegation")
	fd_DIDDocument_key_agreement = md_DIDDocument.Fields().ByName("key_agreement")
	fd_DIDDocument_also_known_as = md_DIDDocument.Fields().ByName("also_known_as")
}

var _ protoreflect.Message = (*fastReflection_DIDDocument)(nil)

type fastReflection_DIDDocument DIDDocument

func (x *DIDDocument) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DIDDocument)(x)
}

func (x *DIDDocument) slowProtoReflect() protoreflect.Message {
	mi := &file_core_identity_did_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DIDDocument_messageType fastReflection_DIDDocument_messageType
var _ protoreflect.MessageType = fastReflection_DIDDocument_messageType{}

type fastReflection_DIDDocument_messageType struct{}

func (x fastReflection_DIDDocument_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DIDDocument)(nil)
}
func (x fastReflection_DIDDocument_messageType) New() protoreflect.Message {
	return new(fastReflection_DIDDocument)
}
func (x fastReflection_DIDDocument_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DIDDocument
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DIDDocument) Descriptor() protoreflect.MessageDescriptor {
	return md_DIDDocument
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DIDDocument) Type() protoreflect.MessageType {
	return _fastReflection_DIDDocument_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DIDDocument) New() protoreflect.Message {
	return new(fastReflection_DIDDocument)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DIDDocument) Interface() protoreflect.ProtoMessage {
	return (*DIDDocument)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DIDDocument) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Context) != 0 {
		value := protoreflect.ValueOfList(&_DIDDocument_1_list{list: &x.Context})
		if !f(fd_DIDDocument_context, value) {
			return
		}
	}
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_DIDDocument_id, value) {
			return
		}
	}
	if len(x.Controller) != 0 {
		value := protoreflect.ValueOfList(&_DIDDocument_3_list{list: &x.Controller})
		if !f(fd_DIDDocument_controller, value) {
			return
		}
	}
	if len(x.Authentication) != 0 {
		value := protoreflect.ValueOfList(&_DIDDocument_5_list{list: &x.Authentication})
		if !f(fd_DIDDocument_authentication, value) {
			return
		}
	}
	if len(x.AssertionMethod) != 0 {
		value := protoreflect.ValueOfList(&_DIDDocument_6_list{list: &x.AssertionMethod})
		if !f(fd_DIDDocument_assertion_method, value) {
			return
		}
	}
	if len(x.CapabilityInvocation) != 0 {
		value := protoreflect.ValueOfList(&_DIDDocument_7_list{list: &x.CapabilityInvocation})
		if !f(fd_DIDDocument_capability_invocation, value) {
			return
		}
	}
	if len(x.CapabilityDelegation) != 0 {
		value := protoreflect.ValueOfList(&_DIDDocument_8_list{list: &x.CapabilityDelegation})
		if !f(fd_DIDDocument_capability_delegation, value) {
			return
		}
	}
	if len(x.KeyAgreement) != 0 {
		value := protoreflect.ValueOfList(&_DIDDocument_9_list{list: &x.KeyAgreement})
		if !f(fd_DIDDocument_key_agreement, value) {
			return
		}
	}
	if len(x.AlsoKnownAs) != 0 {
		value := protoreflect.ValueOfList(&_DIDDocument_10_list{list: &x.AlsoKnownAs})
		if !f(fd_DIDDocument_also_known_as, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DIDDocument) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "core.identity.DIDDocument.context":
		return len(x.Context) != 0
	case "core.identity.DIDDocument.id":
		return x.Id != ""
	case "core.identity.DIDDocument.controller":
		return len(x.Controller) != 0
	case "core.identity.DIDDocument.authentication":
		return len(x.Authentication) != 0
	case "core.identity.DIDDocument.assertion_method":
		return len(x.AssertionMethod) != 0
	case "core.identity.DIDDocument.capability_invocation":
		return len(x.CapabilityInvocation) != 0
	case "core.identity.DIDDocument.capability_delegation":
		return len(x.CapabilityDelegation) != 0
	case "core.identity.DIDDocument.key_agreement":
		return len(x.KeyAgreement) != 0
	case "core.identity.DIDDocument.also_known_as":
		return len(x.AlsoKnownAs) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.DIDDocument"))
		}
		panic(fmt.Errorf("message core.identity.DIDDocument does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DIDDocument) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "core.identity.DIDDocument.context":
		x.Context = nil
	case "core.identity.DIDDocument.id":
		x.Id = ""
	case "core.identity.DIDDocument.controller":
		x.Controller = nil
	case "core.identity.DIDDocument.authentication":
		x.Authentication = nil
	case "core.identity.DIDDocument.assertion_method":
		x.AssertionMethod = nil
	case "core.identity.DIDDocument.capability_invocation":
		x.CapabilityInvocation = nil
	case "core.identity.DIDDocument.capability_delegation":
		x.CapabilityDelegation = nil
	case "core.identity.DIDDocument.key_agreement":
		x.KeyAgreement = nil
	case "core.identity.DIDDocument.also_known_as":
		x.AlsoKnownAs = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.DIDDocument"))
		}
		panic(fmt.Errorf("message core.identity.DIDDocument does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DIDDocument) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "core.identity.DIDDocument.context":
		if len(x.Context) == 0 {
			return protoreflect.ValueOfList(&_DIDDocument_1_list{})
		}
		listValue := &_DIDDocument_1_list{list: &x.Context}
		return protoreflect.ValueOfList(listValue)
	case "core.identity.DIDDocument.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "core.identity.DIDDocument.controller":
		if len(x.Controller) == 0 {
			return protoreflect.ValueOfList(&_DIDDocument_3_list{})
		}
		listValue := &_DIDDocument_3_list{list: &x.Controller}
		return protoreflect.ValueOfList(listValue)
	case "core.identity.DIDDocument.authentication":
		if len(x.Authentication) == 0 {
			return protoreflect.ValueOfList(&_DIDDocument_5_list{})
		}
		listValue := &_DIDDocument_5_list{list: &x.Authentication}
		return protoreflect.ValueOfList(listValue)
	case "core.identity.DIDDocument.assertion_method":
		if len(x.AssertionMethod) == 0 {
			return protoreflect.ValueOfList(&_DIDDocument_6_list{})
		}
		listValue := &_DIDDocument_6_list{list: &x.AssertionMethod}
		return protoreflect.ValueOfList(listValue)
	case "core.identity.DIDDocument.capability_invocation":
		if len(x.CapabilityInvocation) == 0 {
			return protoreflect.ValueOfList(&_DIDDocument_7_list{})
		}
		listValue := &_DIDDocument_7_list{list: &x.CapabilityInvocation}
		return protoreflect.ValueOfList(listValue)
	case "core.identity.DIDDocument.capability_delegation":
		if len(x.CapabilityDelegation) == 0 {
			return protoreflect.ValueOfList(&_DIDDocument_8_list{})
		}
		listValue := &_DIDDocument_8_list{list: &x.CapabilityDelegation}
		return protoreflect.ValueOfList(listValue)
	case "core.identity.DIDDocument.key_agreement":
		if len(x.KeyAgreement) == 0 {
			return protoreflect.ValueOfList(&_DIDDocument_9_list{})
		}
		listValue := &_DIDDocument_9_list{list: &x.KeyAgreement}
		return protoreflect.ValueOfList(listValue)
	case "core.identity.DIDDocument.also_known_as":
		if len(x.AlsoKnownAs) == 0 {
			return protoreflect.ValueOfList(&_DIDDocument_10_list{})
		}
		listValue := &_DIDDocument_10_list{list: &x.AlsoKnownAs}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.DIDDocument"))
		}
		panic(fmt.Errorf("message core.identity.DIDDocument does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DIDDocument) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "core.identity.DIDDocument.context":
		lv := value.List()
		clv := lv.(*_DIDDocument_1_list)
		x.Context = *clv.list
	case "core.identity.DIDDocument.id":
		x.Id = value.Interface().(string)
	case "core.identity.DIDDocument.controller":
		lv := value.List()
		clv := lv.(*_DIDDocument_3_list)
		x.Controller = *clv.list
	case "core.identity.DIDDocument.authentication":
		lv := value.List()
		clv := lv.(*_DIDDocument_5_list)
		x.Authentication = *clv.list
	case "core.identity.DIDDocument.assertion_method":
		lv := value.List()
		clv := lv.(*_DIDDocument_6_list)
		x.AssertionMethod = *clv.list
	case "core.identity.DIDDocument.capability_invocation":
		lv := value.List()
		clv := lv.(*_DIDDocument_7_list)
		x.CapabilityInvocation = *clv.list
	case "core.identity.DIDDocument.capability_delegation":
		lv := value.List()
		clv := lv.(*_DIDDocument_8_list)
		x.CapabilityDelegation = *clv.list
	case "core.identity.DIDDocument.key_agreement":
		lv := value.List()
		clv := lv.(*_DIDDocument_9_list)
		x.KeyAgreement = *clv.list
	case "core.identity.DIDDocument.also_known_as":
		lv := value.List()
		clv := lv.(*_DIDDocument_10_list)
		x.AlsoKnownAs = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.DIDDocument"))
		}
		panic(fmt.Errorf("message core.identity.DIDDocument does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DIDDocument) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "core.identity.DIDDocument.context":
		if x.Context == nil {
			x.Context = []string{}
		}
		value := &_DIDDocument_1_list{list: &x.Context}
		return protoreflect.ValueOfList(value)
	case "core.identity.DIDDocument.controller":
		if x.Controller == nil {
			x.Controller = []string{}
		}
		value := &_DIDDocument_3_list{list: &x.Controller}
		return protoreflect.ValueOfList(value)
	case "core.identity.DIDDocument.authentication":
		if x.Authentication == nil {
			x.Authentication = []*VerificationRelationship{}
		}
		value := &_DIDDocument_5_list{list: &x.Authentication}
		return protoreflect.ValueOfList(value)
	case "core.identity.DIDDocument.assertion_method":
		if x.AssertionMethod == nil {
			x.AssertionMethod = []*VerificationRelationship{}
		}
		value := &_DIDDocument_6_list{list: &x.AssertionMethod}
		return protoreflect.ValueOfList(value)
	case "core.identity.DIDDocument.capability_invocation":
		if x.CapabilityInvocation == nil {
			x.CapabilityInvocation = []*VerificationRelationship{}
		}
		value := &_DIDDocument_7_list{list: &x.CapabilityInvocation}
		return protoreflect.ValueOfList(value)
	case "core.identity.DIDDocument.capability_delegation":
		if x.CapabilityDelegation == nil {
			x.CapabilityDelegation = []*VerificationRelationship{}
		}
		value := &_DIDDocument_8_list{list: &x.CapabilityDelegation}
		return protoreflect.ValueOfList(value)
	case "core.identity.DIDDocument.key_agreement":
		if x.KeyAgreement == nil {
			x.KeyAgreement = []*VerificationRelationship{}
		}
		value := &_DIDDocument_9_list{list: &x.KeyAgreement}
		return protoreflect.ValueOfList(value)
	case "core.identity.DIDDocument.also_known_as":
		if x.AlsoKnownAs == nil {
			x.AlsoKnownAs = []string{}
		}
		value := &_DIDDocument_10_list{list: &x.AlsoKnownAs}
		return protoreflect.ValueOfList(value)
	case "core.identity.DIDDocument.id":
		panic(fmt.Errorf("field id of message core.identity.DIDDocument is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.DIDDocument"))
		}
		panic(fmt.Errorf("message core.identity.DIDDocument does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DIDDocument) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "core.identity.DIDDocument.context":
		list := []string{}
		return protoreflect.ValueOfList(&_DIDDocument_1_list{list: &list})
	case "core.identity.DIDDocument.id":
		return protoreflect.ValueOfString("")
	case "core.identity.DIDDocument.controller":
		list := []string{}
		return protoreflect.ValueOfList(&_DIDDocument_3_list{list: &list})
	case "core.identity.DIDDocument.authentication":
		list := []*VerificationRelationship{}
		return protoreflect.ValueOfList(&_DIDDocument_5_list{list: &list})
	case "core.identity.DIDDocument.assertion_method":
		list := []*VerificationRelationship{}
		return protoreflect.ValueOfList(&_DIDDocument_6_list{list: &list})
	case "core.identity.DIDDocument.capability_invocation":
		list := []*VerificationRelationship{}
		return protoreflect.ValueOfList(&_DIDDocument_7_list{list: &list})
	case "core.identity.DIDDocument.capability_delegation":
		list := []*VerificationRelationship{}
		return protoreflect.ValueOfList(&_DIDDocument_8_list{list: &list})
	case "core.identity.DIDDocument.key_agreement":
		list := []*VerificationRelationship{}
		return protoreflect.ValueOfList(&_DIDDocument_9_list{list: &list})
	case "core.identity.DIDDocument.also_known_as":
		list := []string{}
		return protoreflect.ValueOfList(&_DIDDocument_10_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.DIDDocument"))
		}
		panic(fmt.Errorf("message core.identity.DIDDocument does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DIDDocument) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in core.identity.DIDDocument", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DIDDocument) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DIDDocument) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DIDDocument) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DIDDocument) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DIDDocument)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Context) > 0 {
			for _, s := range x.Context {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Controller) > 0 {
			for _, s := range x.Controller {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Authentication) > 0 {
			for _, e := range x.Authentication {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AssertionMethod) > 0 {
			for _, e := range x.AssertionMethod {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CapabilityInvocation) > 0 {
			for _, e := range x.CapabilityInvocation {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CapabilityDelegation) > 0 {
			for _, e := range x.CapabilityDelegation {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.KeyAgreement) > 0 {
			for _, e := range x.KeyAgreement {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.AlsoKnownAs) > 0 {
			for _, s := range x.AlsoKnownAs {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DIDDocument)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AlsoKnownAs) > 0 {
			for iNdEx := len(x.AlsoKnownAs) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.AlsoKnownAs[iNdEx])
				copy(dAtA[i:], x.AlsoKnownAs[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AlsoKnownAs[iNdEx])))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.KeyAgreement) > 0 {
			for iNdEx := len(x.KeyAgreement) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.KeyAgreement[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if len(x.CapabilityDelegation) > 0 {
			for iNdEx := len(x.CapabilityDelegation) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CapabilityDelegation[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.CapabilityInvocation) > 0 {
			for iNdEx := len(x.CapabilityInvocation) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CapabilityInvocation[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.AssertionMethod) > 0 {
			for iNdEx := len(x.AssertionMethod) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AssertionMethod[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.Authentication) > 0 {
			for iNdEx := len(x.Authentication) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Authentication[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.Controller) > 0 {
			for iNdEx := len(x.Controller) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Controller[iNdEx])
				copy(dAtA[i:], x.Controller[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Controller[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Context) > 0 {
			for iNdEx := len(x.Context) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Context[iNdEx])
				copy(dAtA[i:], x.Context[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Context[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DIDDocument)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DIDDocument: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DIDDocument: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Context", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Context = append(x.Context, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Controller = append(x.Controller, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authentication", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authentication = append(x.Authentication, &VerificationRelationship{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Authentication[len(x.Authentication)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AssertionMethod", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AssertionMethod = append(x.AssertionMethod, &VerificationRelationship{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AssertionMethod[len(x.AssertionMethod)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CapabilityInvocation", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CapabilityInvocation = append(x.CapabilityInvocation, &VerificationRelationship{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CapabilityInvocation[len(x.CapabilityInvocation)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CapabilityDelegation", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CapabilityDelegation = append(x.CapabilityDelegation, &VerificationRelationship{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CapabilityDelegation[len(x.CapabilityDelegation)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyAgreement", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KeyAgreement = append(x.KeyAgreement, &VerificationRelationship{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.KeyAgreement[len(x.KeyAgreement)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AlsoKnownAs", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AlsoKnownAs = append(x.AlsoKnownAs, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_VerificationMethod_8_list)(nil)

type _VerificationMethod_8_list struct {
	list *[]string
}

func (x *_VerificationMethod_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_VerificationMethod_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_VerificationMethod_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_VerificationMethod_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_VerificationMethod_8_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message VerificationMethod at list field Transports as it is not of Message kind"))
}

func (x *_VerificationMethod_8_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_VerificationMethod_8_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_VerificationMethod_8_list) IsValid() bool {
	return x.list != nil
}

var (
	md_VerificationMethod                       protoreflect.MessageDescriptor
	fd_VerificationMethod_id                    protoreflect.FieldDescriptor
	fd_VerificationMethod_type                  protoreflect.FieldDescriptor
	fd_VerificationMethod_controller            protoreflect.FieldDescriptor
	fd_VerificationMethod_public_key_jwk        protoreflect.FieldDescriptor
	fd_VerificationMethod_public_key_multibase  protoreflect.FieldDescriptor
	fd_VerificationMethod_blockchain_account_id protoreflect.FieldDescriptor
	fd_VerificationMethod_attestation_type      protoreflect.FieldDescriptor
	fd_VerificationMethod_transports            protoreflect.FieldDescriptor
)

func init() {
	file_core_identity_did_proto_init()
	md_VerificationMethod = File_core_identity_did_proto.Messages().ByName("VerificationMethod")
	fd_VerificationMethod_id = md_VerificationMethod.Fields().ByName("id")
	fd_VerificationMethod_type = md_VerificationMethod.Fields().ByName("type")
	fd_VerificationMethod_controller = md_VerificationMethod.Fields().ByName("controller")
	fd_VerificationMethod_public_key_jwk = md_VerificationMethod.Fields().ByName("public_key_jwk")
	fd_VerificationMethod_public_key_multibase = md_VerificationMethod.Fields().ByName("public_key_multibase")
	fd_VerificationMethod_blockchain_account_id = md_VerificationMethod.Fields().ByName("blockchain_account_id")
	fd_VerificationMethod_attestation_type = md_VerificationMethod.Fields().ByName("attestation_type")
	fd_VerificationMethod_transports = md_VerificationMethod.Fields().ByName("transports")
}

var _ protoreflect.Message = (*fastReflection_VerificationMethod)(nil)

type fastReflection_VerificationMethod VerificationMethod

func (x *VerificationMethod) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VerificationMethod)(x)
}

func (x *VerificationMethod) slowProtoReflect() protoreflect.Message {
	mi := &file_core_identity_did_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VerificationMethod_messageType fastReflection_VerificationMethod_messageType
var _ protoreflect.MessageType = fastReflection_VerificationMethod_messageType{}

type fastReflection_VerificationMethod_messageType struct{}

func (x fastReflection_VerificationMethod_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VerificationMethod)(nil)
}
func (x fastReflection_VerificationMethod_messageType) New() protoreflect.Message {
	return new(fastReflection_VerificationMethod)
}
func (x fastReflection_VerificationMethod_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VerificationMethod
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VerificationMethod) Descriptor() protoreflect.MessageDescriptor {
	return md_VerificationMethod
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VerificationMethod) Type() protoreflect.MessageType {
	return _fastReflection_VerificationMethod_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VerificationMethod) New() protoreflect.Message {
	return new(fastReflection_VerificationMethod)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VerificationMethod) Interface() protoreflect.ProtoMessage {
	return (*VerificationMethod)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VerificationMethod) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_VerificationMethod_id, value) {
			return
		}
	}
	if x.Type_ != "" {
		value := protoreflect.ValueOfString(x.Type_)
		if !f(fd_VerificationMethod_type, value) {
			return
		}
	}
	if x.Controller != "" {
		value := protoreflect.ValueOfString(x.Controller)
		if !f(fd_VerificationMethod_controller, value) {
			return
		}
	}
	if x.PublicKeyJwk != "" {
		value := protoreflect.ValueOfString(x.PublicKeyJwk)
		if !f(fd_VerificationMethod_public_key_jwk, value) {
			return
		}
	}
	if x.PublicKeyMultibase != "" {
		value := protoreflect.ValueOfString(x.PublicKeyMultibase)
		if !f(fd_VerificationMethod_public_key_multibase, value) {
			return
		}
	}
	if x.BlockchainAccountId != "" {
		value := protoreflect.ValueOfString(x.BlockchainAccountId)
		if !f(fd_VerificationMethod_blockchain_account_id, value) {
			return
		}
	}
	if x.AttestationType != "" {
		value := protoreflect.ValueOfString(x.AttestationType)
		if !f(fd_VerificationMethod_attestation_type, value) {
			return
		}
	}
	if len(x.Transports) != 0 {
		value := protoreflect.ValueOfList(&_VerificationMethod_8_list{list: &x.Transports})
		if !f(fd_VerificationMethod_transports, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VerificationMethod) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "core.identity.VerificationMethod.id":
		return x.Id != ""
	case "core.identity.VerificationMethod.type":
		return x.Type_ != ""
	case "core.identity.VerificationMethod.controller":
		return x.Controller != ""
	case "core.identity.VerificationMethod.public_key_jwk":
		return x.PublicKeyJwk != ""
	case "core.identity.VerificationMethod.public_key_multibase":
		return x.PublicKeyMultibase != ""
	case "core.identity.VerificationMethod.blockchain_account_id":
		return x.BlockchainAccountId != ""
	case "core.identity.VerificationMethod.attestation_type":
		return x.AttestationType != ""
	case "core.identity.VerificationMethod.transports":
		return len(x.Transports) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationMethod"))
		}
		panic(fmt.Errorf("message core.identity.VerificationMethod does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VerificationMethod) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "core.identity.VerificationMethod.id":
		x.Id = ""
	case "core.identity.VerificationMethod.type":
		x.Type_ = ""
	case "core.identity.VerificationMethod.controller":
		x.Controller = ""
	case "core.identity.VerificationMethod.public_key_jwk":
		x.PublicKeyJwk = ""
	case "core.identity.VerificationMethod.public_key_multibase":
		x.PublicKeyMultibase = ""
	case "core.identity.VerificationMethod.blockchain_account_id":
		x.BlockchainAccountId = ""
	case "core.identity.VerificationMethod.attestation_type":
		x.AttestationType = ""
	case "core.identity.VerificationMethod.transports":
		x.Transports = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationMethod"))
		}
		panic(fmt.Errorf("message core.identity.VerificationMethod does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VerificationMethod) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "core.identity.VerificationMethod.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "core.identity.VerificationMethod.type":
		value := x.Type_
		return protoreflect.ValueOfString(value)
	case "core.identity.VerificationMethod.controller":
		value := x.Controller
		return protoreflect.ValueOfString(value)
	case "core.identity.VerificationMethod.public_key_jwk":
		value := x.PublicKeyJwk
		return protoreflect.ValueOfString(value)
	case "core.identity.VerificationMethod.public_key_multibase":
		value := x.PublicKeyMultibase
		return protoreflect.ValueOfString(value)
	case "core.identity.VerificationMethod.blockchain_account_id":
		value := x.BlockchainAccountId
		return protoreflect.ValueOfString(value)
	case "core.identity.VerificationMethod.attestation_type":
		value := x.AttestationType
		return protoreflect.ValueOfString(value)
	case "core.identity.VerificationMethod.transports":
		if len(x.Transports) == 0 {
			return protoreflect.ValueOfList(&_VerificationMethod_8_list{})
		}
		listValue := &_VerificationMethod_8_list{list: &x.Transports}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationMethod"))
		}
		panic(fmt.Errorf("message core.identity.VerificationMethod does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VerificationMethod) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "core.identity.VerificationMethod.id":
		x.Id = value.Interface().(string)
	case "core.identity.VerificationMethod.type":
		x.Type_ = value.Interface().(string)
	case "core.identity.VerificationMethod.controller":
		x.Controller = value.Interface().(string)
	case "core.identity.VerificationMethod.public_key_jwk":
		x.PublicKeyJwk = value.Interface().(string)
	case "core.identity.VerificationMethod.public_key_multibase":
		x.PublicKeyMultibase = value.Interface().(string)
	case "core.identity.VerificationMethod.blockchain_account_id":
		x.BlockchainAccountId = value.Interface().(string)
	case "core.identity.VerificationMethod.attestation_type":
		x.AttestationType = value.Interface().(string)
	case "core.identity.VerificationMethod.transports":
		lv := value.List()
		clv := lv.(*_VerificationMethod_8_list)
		x.Transports = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationMethod"))
		}
		panic(fmt.Errorf("message core.identity.VerificationMethod does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VerificationMethod) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "core.identity.VerificationMethod.transports":
		if x.Transports == nil {
			x.Transports = []string{}
		}
		value := &_VerificationMethod_8_list{list: &x.Transports}
		return protoreflect.ValueOfList(value)
	case "core.identity.VerificationMethod.id":
		panic(fmt.Errorf("field id of message core.identity.VerificationMethod is not mutable"))
	case "core.identity.VerificationMethod.type":
		panic(fmt.Errorf("field type of message core.identity.VerificationMethod is not mutable"))
	case "core.identity.VerificationMethod.controller":
		panic(fmt.Errorf("field controller of message core.identity.VerificationMethod is not mutable"))
	case "core.identity.VerificationMethod.public_key_jwk":
		panic(fmt.Errorf("field public_key_jwk of message core.identity.VerificationMethod is not mutable"))
	case "core.identity.VerificationMethod.public_key_multibase":
		panic(fmt.Errorf("field public_key_multibase of message core.identity.VerificationMethod is not mutable"))
	case "core.identity.VerificationMethod.blockchain_account_id":
		panic(fmt.Errorf("field blockchain_account_id of message core.identity.VerificationMethod is not mutable"))
	case "core.identity.VerificationMethod.attestation_type":
		panic(fmt.Errorf("field attestation_type of message core.identity.VerificationMethod is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationMethod"))
		}
		panic(fmt.Errorf("message core.identity.VerificationMethod does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VerificationMethod) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "core.identity.VerificationMethod.id":
		return protoreflect.ValueOfString("")
	case "core.identity.VerificationMethod.type":
		return protoreflect.ValueOfString("")
	case "core.identity.VerificationMethod.controller":
		return protoreflect.ValueOfString("")
	case "core.identity.VerificationMethod.public_key_jwk":
		return protoreflect.ValueOfString("")
	case "core.identity.VerificationMethod.public_key_multibase":
		return protoreflect.ValueOfString("")
	case "core.identity.VerificationMethod.blockchain_account_id":
		return protoreflect.ValueOfString("")
	case "core.identity.VerificationMethod.attestation_type":
		return protoreflect.ValueOfString("")
	case "core.identity.VerificationMethod.transports":
		list := []string{}
		return protoreflect.ValueOfList(&_VerificationMethod_8_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationMethod"))
		}
		panic(fmt.Errorf("message core.identity.VerificationMethod does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VerificationMethod) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in core.identity.VerificationMethod", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VerificationMethod) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VerificationMethod) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VerificationMethod) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VerificationMethod) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VerificationMethod)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Type_)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Controller)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PublicKeyJwk)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PublicKeyMultibase)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BlockchainAccountId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AttestationType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Transports) > 0 {
			for _, s := range x.Transports {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VerificationMethod)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Transports) > 0 {
			for iNdEx := len(x.Transports) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Transports[iNdEx])
				copy(dAtA[i:], x.Transports[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Transports[iNdEx])))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.AttestationType) > 0 {
			i -= len(x.AttestationType)
			copy(dAtA[i:], x.AttestationType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AttestationType)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.BlockchainAccountId) > 0 {
			i -= len(x.BlockchainAccountId)
			copy(dAtA[i:], x.BlockchainAccountId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlockchainAccountId)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.PublicKeyMultibase) > 0 {
			i -= len(x.PublicKeyMultibase)
			copy(dAtA[i:], x.PublicKeyMultibase)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PublicKeyMultibase)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.PublicKeyJwk) > 0 {
			i -= len(x.PublicKeyJwk)
			copy(dAtA[i:], x.PublicKeyJwk)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PublicKeyJwk)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Controller) > 0 {
			i -= len(x.Controller)
			copy(dAtA[i:], x.Controller)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Controller)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Type_) > 0 {
			i -= len(x.Type_)
			copy(dAtA[i:], x.Type_)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Type_)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VerificationMethod)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VerificationMethod: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VerificationMethod: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Type_", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Type_ = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Controller = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PublicKeyJwk", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PublicKeyJwk = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PublicKeyMultibase", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PublicKeyMultibase = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockchainAccountId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlockchainAccountId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AttestationType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AttestationType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Transports", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Transports = append(x.Transports, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_VerificationRelationship                     protoreflect.MessageDescriptor
	fd_VerificationRelationship_verification_method protoreflect.FieldDescriptor
	fd_VerificationRelationship_reference           protoreflect.FieldDescriptor
	fd_VerificationRelationship_type                protoreflect.FieldDescriptor
	fd_VerificationRelationship_owner               protoreflect.FieldDescriptor
)

func init() {
	file_core_identity_did_proto_init()
	md_VerificationRelationship = File_core_identity_did_proto.Messages().ByName("VerificationRelationship")
	fd_VerificationRelationship_verification_method = md_VerificationRelationship.Fields().ByName("verification_method")
	fd_VerificationRelationship_reference = md_VerificationRelationship.Fields().ByName("reference")
	fd_VerificationRelationship_type = md_VerificationRelationship.Fields().ByName("type")
	fd_VerificationRelationship_owner = md_VerificationRelationship.Fields().ByName("owner")
}

var _ protoreflect.Message = (*fastReflection_VerificationRelationship)(nil)

type fastReflection_VerificationRelationship VerificationRelationship

func (x *VerificationRelationship) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VerificationRelationship)(x)
}

func (x *VerificationRelationship) slowProtoReflect() protoreflect.Message {
	mi := &file_core_identity_did_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VerificationRelationship_messageType fastReflection_VerificationRelationship_messageType
var _ protoreflect.MessageType = fastReflection_VerificationRelationship_messageType{}

type fastReflection_VerificationRelationship_messageType struct{}

func (x fastReflection_VerificationRelationship_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VerificationRelationship)(nil)
}
func (x fastReflection_VerificationRelationship_messageType) New() protoreflect.Message {
	return new(fastReflection_VerificationRelationship)
}
func (x fastReflection_VerificationRelationship_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VerificationRelationship
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VerificationRelationship) Descriptor() protoreflect.MessageDescriptor {
	return md_VerificationRelationship
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VerificationRelationship) Type() protoreflect.MessageType {
	return _fastReflection_VerificationRelationship_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VerificationRelationship) New() protoreflect.Message {
	return new(fastReflection_VerificationRelationship)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VerificationRelationship) Interface() protoreflect.ProtoMessage {
	return (*VerificationRelationship)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VerificationRelationship) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.VerificationMethod != nil {
		value := protoreflect.ValueOfMessage(x.VerificationMethod.ProtoReflect())
		if !f(fd_VerificationRelationship_verification_method, value) {
			return
		}
	}
	if x.Reference != "" {
		value := protoreflect.ValueOfString(x.Reference)
		if !f(fd_VerificationRelationship_reference, value) {
			return
		}
	}
	if x.Type_ != "" {
		value := protoreflect.ValueOfString(x.Type_)
		if !f(fd_VerificationRelationship_type, value) {
			return
		}
	}
	if x.Owner != "" {
		value := protoreflect.ValueOfString(x.Owner)
		if !f(fd_VerificationRelationship_owner, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VerificationRelationship) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "core.identity.VerificationRelationship.verification_method":
		return x.VerificationMethod != nil
	case "core.identity.VerificationRelationship.reference":
		return x.Reference != ""
	case "core.identity.VerificationRelationship.type":
		return x.Type_ != ""
	case "core.identity.VerificationRelationship.owner":
		return x.Owner != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationRelationship"))
		}
		panic(fmt.Errorf("message core.identity.VerificationRelationship does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VerificationRelationship) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "core.identity.VerificationRelationship.verification_method":
		x.VerificationMethod = nil
	case "core.identity.VerificationRelationship.reference":
		x.Reference = ""
	case "core.identity.VerificationRelationship.type":
		x.Type_ = ""
	case "core.identity.VerificationRelationship.owner":
		x.Owner = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationRelationship"))
		}
		panic(fmt.Errorf("message core.identity.VerificationRelationship does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VerificationRelationship) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "core.identity.VerificationRelationship.verification_method":
		value := x.VerificationMethod
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "core.identity.VerificationRelationship.reference":
		value := x.Reference
		return protoreflect.ValueOfString(value)
	case "core.identity.VerificationRelationship.type":
		value := x.Type_
		return protoreflect.ValueOfString(value)
	case "core.identity.VerificationRelationship.owner":
		value := x.Owner
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationRelationship"))
		}
		panic(fmt.Errorf("message core.identity.VerificationRelationship does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VerificationRelationship) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "core.identity.VerificationRelationship.verification_method":
		x.VerificationMethod = value.Message().Interface().(*VerificationMethod)
	case "core.identity.VerificationRelationship.reference":
		x.Reference = value.Interface().(string)
	case "core.identity.VerificationRelationship.type":
		x.Type_ = value.Interface().(string)
	case "core.identity.VerificationRelationship.owner":
		x.Owner = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationRelationship"))
		}
		panic(fmt.Errorf("message core.identity.VerificationRelationship does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VerificationRelationship) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "core.identity.VerificationRelationship.verification_method":
		if x.VerificationMethod == nil {
			x.VerificationMethod = new(VerificationMethod)
		}
		return protoreflect.ValueOfMessage(x.VerificationMethod.ProtoReflect())
	case "core.identity.VerificationRelationship.reference":
		panic(fmt.Errorf("field reference of message core.identity.VerificationRelationship is not mutable"))
	case "core.identity.VerificationRelationship.type":
		panic(fmt.Errorf("field type of message core.identity.VerificationRelationship is not mutable"))
	case "core.identity.VerificationRelationship.owner":
		panic(fmt.Errorf("field owner of message core.identity.VerificationRelationship is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationRelationship"))
		}
		panic(fmt.Errorf("message core.identity.VerificationRelationship does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VerificationRelationship) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "core.identity.VerificationRelationship.verification_method":
		m := new(VerificationMethod)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "core.identity.VerificationRelationship.reference":
		return protoreflect.ValueOfString("")
	case "core.identity.VerificationRelationship.type":
		return protoreflect.ValueOfString("")
	case "core.identity.VerificationRelationship.owner":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: core.identity.VerificationRelationship"))
		}
		panic(fmt.Errorf("message core.identity.VerificationRelationship does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VerificationRelationship) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in core.identity.VerificationRelationship", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VerificationRelationship) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VerificationRelationship) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VerificationRelationship) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VerificationRelationship) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VerificationRelationship)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.VerificationMethod != nil {
			l = options.Size(x.VerificationMethod)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Reference)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Type_)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Owner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VerificationRelationship)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Owner) > 0 {
			i -= len(x.Owner)
			copy(dAtA[i:], x.Owner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Owner)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Type_) > 0 {
			i -= len(x.Type_)
			copy(dAtA[i:], x.Type_)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Type_)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Reference) > 0 {
			i -= len(x.Reference)
			copy(dAtA[i:], x.Reference)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Reference)))
			i--
			dAtA[i] = 0x12
		}
		if x.VerificationMethod != nil {
			encoded, err := options.Marshal(x.VerificationMethod)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VerificationRelationship)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VerificationRelationship: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VerificationRelationship: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerificationMethod", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VerificationMethod == nil {
					x.VerificationMethod = &VerificationMethod{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VerificationMethod); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reference", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Reference = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Type_", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Type_ = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Owner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: core/identity/did.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DIDDocument represents a Decentralized Identifier (DID) document that
// contains information about the DID subject, such as public keys, verification
// methods, and services.
type DIDDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context              []string                    `protobuf:"bytes,1,rep,name=context,proto3" json:"context,omitempty"`                                                       // The JSON-LD context(s) used in the document
	Id                   string                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                                                 // The identifier for the DID subject
	Controller           []string                    `protobuf:"bytes,3,rep,name=controller,proto3" json:"controller,omitempty"`                                                 // optional, the entity/entities controlling the DID subject
	Authentication       []*VerificationRelationship `protobuf:"bytes,5,rep,name=authentication,proto3" json:"authentication,omitempty"`                                         // optional, the set of authentication methods associated with the DID
	AssertionMethod      []*VerificationRelationship `protobuf:"bytes,6,rep,name=assertion_method,json=assertionMethod,proto3" json:"assertion_method,omitempty"`                // optional, the set of assertion methods associated with the DID
	CapabilityInvocation []*VerificationRelationship `protobuf:"bytes,7,rep,name=capability_invocation,json=capabilityInvocation,proto3" json:"capability_invocation,omitempty"` // optional, the set of capability invocation methods associated with
	CapabilityDelegation []*VerificationRelationship `protobuf:"bytes,8,rep,name=capability_delegation,json=capabilityDelegation,proto3" json:"capability_delegation,omitempty"` // optional, the set of capability delegation methods associated with
	KeyAgreement         []*VerificationRelationship `protobuf:"bytes,9,rep,name=key_agreement,json=keyAgreement,proto3" json:"key_agreement,omitempty"`                         // optional, the set of key agreement methods associated with the DID
	AlsoKnownAs          []string                    `protobuf:"bytes,10,rep,name=also_known_as,json=alsoKnownAs,proto3" json:"also_known_as,omitempty"`                         // optional, the set of identifiers for other personas or identities
}

func (x *DIDDocument) Reset() {
	*x = DIDDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_identity_did_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DIDDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DIDDocument) ProtoMessage() {}

// Deprecated: Use DIDDocument.ProtoReflect.Descriptor instead.
func (*DIDDocument) Descriptor() ([]byte, []int) {
	return file_core_identity_did_proto_rawDescGZIP(), []int{0}
}

func (x *DIDDocument) GetContext() []string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *DIDDocument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DIDDocument) GetController() []string {
	if x != nil {
		return x.Controller
	}
	return nil
}

func (x *DIDDocument) GetAuthentication() []*VerificationRelationship {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *DIDDocument) GetAssertionMethod() []*VerificationRelationship {
	if x != nil {
		return x.AssertionMethod
	}
	return nil
}

func (x *DIDDocument) GetCapabilityInvocation() []*VerificationRelationship {
	if x != nil {
		return x.CapabilityInvocation
	}
	return nil
}

func (x *DIDDocument) GetCapabilityDelegation() []*VerificationRelationship {
	if x != nil {
		return x.CapabilityDelegation
	}
	return nil
}

func (x *DIDDocument) GetKeyAgreement() []*VerificationRelationship {
	if x != nil {
		return x.KeyAgreement
	}
	return nil
}

func (x *DIDDocument) GetAlsoKnownAs() []string {
	if x != nil {
		return x.AlsoKnownAs
	}
	return nil
}

// VerificationMethod represents a verification method that can be used to
// authenticate the DID subject or perform other cryptographic operations.
type VerificationMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                // The identifier for the verification method
	Type_               string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                                            // The type of the verification method
	Controller          string   `protobuf:"bytes,3,opt,name=controller,proto3" json:"controller,omitempty"`                                                // The entity controlling the verification method
	PublicKeyJwk        string   `protobuf:"bytes,4,opt,name=public_key_jwk,json=publicKeyJwk,proto3" json:"public_key_jwk,omitempty"`                      // optional, the public key in JSON Web Key (JWK) format
	PublicKeyMultibase  string   `protobuf:"bytes,5,opt,name=public_key_multibase,json=publicKeyMultibase,proto3" json:"public_key_multibase,omitempty"`    // optional, the public key in multibase-encoded format
	BlockchainAccountId string   `protobuf:"bytes,6,opt,name=blockchain_account_id,json=blockchainAccountId,proto3" json:"blockchain_account_id,omitempty"` // optional, the blockchain account identifier associated with the
	AttestationType     string   `protobuf:"bytes,7,opt,name=attestation_type,json=attestationType,proto3" json:"attestation_type,omitempty"`               // optional, the type of attestation associated with the verification
	Transports          []string `protobuf:"bytes,8,rep,name=transports,proto3" json:"transports,omitempty"`                                                // optional, the set of transport protocols supported by the
}

func (x *VerificationMethod) Reset() {
	*x = VerificationMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_identity_did_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationMethod) ProtoMessage() {}

// Deprecated: Use VerificationMethod.ProtoReflect.Descriptor instead.
func (*VerificationMethod) Descriptor() ([]byte, []int) {
	return file_core_identity_did_proto_rawDescGZIP(), []int{1}
}

func (x *VerificationMethod) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VerificationMethod) GetType_() string {
	if x != nil {
		return x.Type_
	}
	return ""
}

func (x *VerificationMethod) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *VerificationMethod) GetPublicKeyJwk() string {
	if x != nil {
		return x.PublicKeyJwk
	}
	return ""
}

func (x *VerificationMethod) GetPublicKeyMultibase() string {
	if x != nil {
		return x.PublicKeyMultibase
	}
	return ""
}

func (x *VerificationMethod) GetBlockchainAccountId() string {
	if x != nil {
		return x.BlockchainAccountId
	}
	return ""
}

func (x *VerificationMethod) GetAttestationType() string {
	if x != nil {
		return x.AttestationType
	}
	return ""
}

func (x *VerificationMethod) GetTransports() []string {
	if x != nil {
		return x.Transports
	}
	return nil
}

// VerificationRelationship represents a relationship between a verification
// method and a specific verification purpose (e.g., authentication, assertion,
// etc.).
type VerificationRelationship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationMethod *VerificationMethod `protobuf:"bytes,1,opt,name=verification_method,json=verificationMethod,proto3" json:"verification_method,omitempty"` // The verification method associated with the relationship
	Reference          string              `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`                                             // The reference identifier for the relationship
	Type_              string              `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                                                       // The type of the verification relationship
	Owner              string              `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`                                                     // The idx address of the owner of the verification relationship
}

func (x *VerificationRelationship) Reset() {
	*x = VerificationRelationship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_identity_did_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationRelationship) ProtoMessage() {}

// Deprecated: Use VerificationRelationship.ProtoReflect.Descriptor instead.
func (*VerificationRelationship) Descriptor() ([]byte, []int) {
	return file_core_identity_did_proto_rawDescGZIP(), []int{2}
}

func (x *VerificationRelationship) GetVerificationMethod() *VerificationMethod {
	if x != nil {
		return x.VerificationMethod
	}
	return nil
}

func (x *VerificationRelationship) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *VerificationRelationship) GetType_() string {
	if x != nil {
		return x.Type_
	}
	return ""
}

func (x *VerificationRelationship) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

var File_core_identity_did_proto protoreflect.FileDescriptor

var file_core_identity_did_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x64, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xaa, 0x04, 0x0a, 0x0b, 0x44, 0x49, 0x44,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x5c, 0x0a, 0x15, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x14, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x15, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x14, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6c, 0x73, 0x6f, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x61, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x73, 0x6f, 0x4b, 0x6e,
	0x6f, 0x77, 0x6e, 0x41, 0x73, 0x22, 0xaf, 0x02, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6a,
	0x77, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x4a, 0x77, 0x6b, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x62, 0x61, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x62, 0x61, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x12, 0x52, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x42, 0x98, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x08, 0x44, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x6f, 0x6e, 0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0xa2, 0x02, 0x03, 0x43, 0x49, 0x58, 0xaa, 0x02,
	0x0d, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0xca, 0x02,
	0x0d, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0xe2, 0x02,
	0x19, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x43, 0x6f, 0x72,
	0x65, 0x3a, 0x3a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_core_identity_did_proto_rawDescOnce sync.Once
	file_core_identity_did_proto_rawDescData = file_core_identity_did_proto_rawDesc
)

func file_core_identity_did_proto_rawDescGZIP() []byte {
	file_core_identity_did_proto_rawDescOnce.Do(func() {
		file_core_identity_did_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_identity_did_proto_rawDescData)
	})
	return file_core_identity_did_proto_rawDescData
}

var file_core_identity_did_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_core_identity_did_proto_goTypes = []interface{}{
	(*DIDDocument)(nil),              // 0: core.identity.DIDDocument
	(*VerificationMethod)(nil),       // 1: core.identity.VerificationMethod
	(*VerificationRelationship)(nil), // 2: core.identity.VerificationRelationship
}
var file_core_identity_did_proto_depIdxs = []int32{
	2, // 0: core.identity.DIDDocument.authentication:type_name -> core.identity.VerificationRelationship
	2, // 1: core.identity.DIDDocument.assertion_method:type_name -> core.identity.VerificationRelationship
	2, // 2: core.identity.DIDDocument.capability_invocation:type_name -> core.identity.VerificationRelationship
	2, // 3: core.identity.DIDDocument.capability_delegation:type_name -> core.identity.VerificationRelationship
	2, // 4: core.identity.DIDDocument.key_agreement:type_name -> core.identity.VerificationRelationship
	1, // 5: core.identity.VerificationRelationship.verification_method:type_name -> core.identity.VerificationMethod
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_core_identity_did_proto_init() }
func file_core_identity_did_proto_init() {
	if File_core_identity_did_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_identity_did_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DIDDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_identity_did_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_identity_did_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationRelationship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_identity_did_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_identity_did_proto_goTypes,
		DependencyIndexes: file_core_identity_did_proto_depIdxs,
		MessageInfos:      file_core_identity_did_proto_msgTypes,
	}.Build()
	File_core_identity_did_proto = out.File
	file_core_identity_did_proto_rawDesc = nil
	file_core_identity_did_proto_goTypes = nil
	file_core_identity_did_proto_depIdxs = nil
}
