syntax = "proto3";
package sonr.service.v1;

option go_package = "github.com/sonrhq/sonr/x/service";

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "sonr/service/v1/types.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateRecord creates a new record
  rpc CreateRecord(MsgCreateRecord) returns (MsgCreateRecordResponse);

  // UpdateRecord updates a record
  rpc UpdateRecord(MsgUpdateRecord) returns (MsgUpdateRecordResponse);

  // DeleteRecord deletes a record
  rpc DeleteRecord(MsgDeleteRecord) returns (MsgDeleteRecordResponse);

  // UpdateParams updates the module parameters.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // RegisterAccount registers an account by using the x/identity module
  rpc RegisterAccount(MsgRegisterAccount) returns (MsgRegisterAccountResponse);

  // LoginAccount logs in an account by using the x/identity module
  rpc LoginAccount(MsgLoginAccount) returns (MsgLoginAccountResponse);
}

// MsgCreateRecord is the Msg/CreateRecord request type.
message MsgCreateRecord {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sonrhq/service/MsgCreateRecord";

  // owner is the address of the owner of the record
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // name is the name of the record
  string name = 2;

  // description is the description of the record
  string description = 3;

  // origin is the origin of the record
  string origin = 4;

  // permissions in int32 format
  int32 permissions = 5;
}

// MsgCreateRecordResponse defines the Msg/CreateRecord response type.
message MsgCreateRecordResponse {}

// MsgUpdateRecord is the Msg/UpdateRecord request type.
message MsgUpdateRecord {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sonrhq/service/MsgUpdateRecord";

  // owner is the address of the owner of the record
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // record_id is the id of the record to update
  uint64 record_id = 2;

  // name is the name of the record
  string name = 3;

  // description is the description of the record
  string description = 4;

  // origin is the origin of the record
  string origin = 5;

  // permissions in int32 format
  int32 permissions = 6;
}

// MsgUpdateRecordResponse defines the Msg/UpdateRecord response type.
message MsgUpdateRecordResponse {}

// MsgDeleteRecord is the Msg/DeleteRecord request type.
message MsgDeleteRecord {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sonrhq/service/MsgDeleteRecord";

  // owner is the address of the owner of the record
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // record_id is the id of the record to delete
  uint64 record_id = 2;
}

// MsgDeleteRecordResponse defines the Msg/DeleteRecord response type.
message MsgDeleteRecordResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sonrhq/service/MsgUpdateParams";

  // authority is the address that controls the module
  // NOTE: Defaults to the governance module unless overwritten.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the module parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}


// MsgRegisterAccount is the Msg/RegisterAccount request type.
message MsgRegisterAccount {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sonrhq/service/MsgRegisterAccount";

  // authority is the address that controls the module
  // NOTE: Defaults to the governance module unless overwritten.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // origin is the origin of the account
  string origin = 2;

  // handle is the handle of the account
  string handle = 3;
}

// MsgRegisterAccountResponse defines the response structure for executing a Register request.
message MsgRegisterAccountResponse {}

// MsgLoginAccount is the Msg/LoginAccount request type.
message MsgLoginAccount {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sonrhq/service/MsgLoginAccount";

  // authority is the address that controls the module
  // NOTE: Defaults to the governance module unless overwritten.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

// origin is the origin of the account
  string origin = 2;

  // handle is the handle of the account
  string handle = 3;
}

// MsgLoginAccountResponse defines the response structure for executing a Login request.
message MsgLoginAccountResponse {}
