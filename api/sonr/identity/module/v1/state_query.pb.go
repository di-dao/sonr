// Code generated by protoc-gen-go-cosmos-orm-proto. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: sonr/identity/module/v1/state_query.proto

package modulev1

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetAccountRequest is the StateQuery/GetAccountRequest request type.
type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sequence specifies the value of the sequence field in the primary key.
	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccountRequest) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// GetAccountResponse is the StateQuery/GetAccountResponse response type.
type GetAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Account `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetAccountResponse) Reset() {
	*x = GetAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountResponse) ProtoMessage() {}

func (x *GetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountResponse.ProtoReflect.Descriptor instead.
func (*GetAccountResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetAccountResponse) GetValue() *Account {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetAccountByAddressRequest is the StateQuery/GetAccountByAddressRequest request type.
type GetAccountByAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAccountByAddressRequest) Reset() {
	*x = GetAccountByAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByAddressRequest) ProtoMessage() {}

func (x *GetAccountByAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByAddressRequest.ProtoReflect.Descriptor instead.
func (*GetAccountByAddressRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetAccountByAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// GetAccountByAddressResponse is the StateQuery/GetAccountByAddressResponse response type.
type GetAccountByAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Account `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetAccountByAddressResponse) Reset() {
	*x = GetAccountByAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByAddressResponse) ProtoMessage() {}

func (x *GetAccountByAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByAddressResponse.ProtoReflect.Descriptor instead.
func (*GetAccountByAddressResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccountByAddressResponse) GetValue() *Account {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetAccountByPublicKeyRequest is the StateQuery/GetAccountByPublicKeyRequest request type.
type GetAccountByPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *GetAccountByPublicKeyRequest) Reset() {
	*x = GetAccountByPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByPublicKeyRequest) ProtoMessage() {}

func (x *GetAccountByPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAccountByPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{4}
}

func (x *GetAccountByPublicKeyRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// GetAccountByPublicKeyResponse is the StateQuery/GetAccountByPublicKeyResponse response type.
type GetAccountByPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Account `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetAccountByPublicKeyResponse) Reset() {
	*x = GetAccountByPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByPublicKeyResponse) ProtoMessage() {}

func (x *GetAccountByPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetAccountByPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccountByPublicKeyResponse) GetValue() *Account {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListAccountRequest is the StateQuery/ListAccountRequest request type.
type ListAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListAccountRequest_PrefixQuery
	//	*ListAccountRequest_RangeQuery_
	Query isListAccountRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAccountRequest) Reset() {
	*x = ListAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest) ProtoMessage() {}

func (x *ListAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest.ProtoReflect.Descriptor instead.
func (*ListAccountRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6}
}

func (m *ListAccountRequest) GetQuery() isListAccountRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListAccountRequest) GetPrefixQuery() *ListAccountRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListAccountRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListAccountRequest) GetRangeQuery() *ListAccountRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListAccountRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListAccountRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListAccountRequest_Query interface {
	isListAccountRequest_Query()
}

type ListAccountRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListAccountRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListAccountRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListAccountRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListAccountRequest_PrefixQuery) isListAccountRequest_Query() {}

func (*ListAccountRequest_RangeQuery_) isListAccountRequest_Query() {}

// ListAccountResponse is the StateQuery/ListAccountResponse response type.
type ListAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Account `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAccountResponse) Reset() {
	*x = ListAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountResponse) ProtoMessage() {}

func (x *ListAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountResponse.ProtoReflect.Descriptor instead.
func (*ListAccountResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{7}
}

func (x *ListAccountResponse) GetValues() []*Account {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListAccountResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetBlockchainRequest is the StateQuery/GetBlockchainRequest request type.
type GetBlockchainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index specifies the value of the index field in the primary key.
	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetBlockchainRequest) Reset() {
	*x = GetBlockchainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainRequest) ProtoMessage() {}

func (x *GetBlockchainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainRequest.ProtoReflect.Descriptor instead.
func (*GetBlockchainRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{8}
}

func (x *GetBlockchainRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

// GetBlockchainResponse is the StateQuery/GetBlockchainResponse response type.
type GetBlockchainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Blockchain `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetBlockchainResponse) Reset() {
	*x = GetBlockchainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainResponse) ProtoMessage() {}

func (x *GetBlockchainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainResponse.ProtoReflect.Descriptor instead.
func (*GetBlockchainResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{9}
}

func (x *GetBlockchainResponse) GetValue() *Blockchain {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetBlockchainByChainIdRequest is the StateQuery/GetBlockchainByChainIdRequest request type.
type GetBlockchainByChainIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *GetBlockchainByChainIdRequest) Reset() {
	*x = GetBlockchainByChainIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainByChainIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainByChainIdRequest) ProtoMessage() {}

func (x *GetBlockchainByChainIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainByChainIdRequest.ProtoReflect.Descriptor instead.
func (*GetBlockchainByChainIdRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{10}
}

func (x *GetBlockchainByChainIdRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

// GetBlockchainByChainIdResponse is the StateQuery/GetBlockchainByChainIdResponse response type.
type GetBlockchainByChainIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Blockchain `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetBlockchainByChainIdResponse) Reset() {
	*x = GetBlockchainByChainIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainByChainIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainByChainIdResponse) ProtoMessage() {}

func (x *GetBlockchainByChainIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainByChainIdResponse.ProtoReflect.Descriptor instead.
func (*GetBlockchainByChainIdResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{11}
}

func (x *GetBlockchainByChainIdResponse) GetValue() *Blockchain {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetBlockchainByNameRequest is the StateQuery/GetBlockchainByNameRequest request type.
type GetBlockchainByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetBlockchainByNameRequest) Reset() {
	*x = GetBlockchainByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainByNameRequest) ProtoMessage() {}

func (x *GetBlockchainByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainByNameRequest.ProtoReflect.Descriptor instead.
func (*GetBlockchainByNameRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{12}
}

func (x *GetBlockchainByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetBlockchainByNameResponse is the StateQuery/GetBlockchainByNameResponse response type.
type GetBlockchainByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Blockchain `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetBlockchainByNameResponse) Reset() {
	*x = GetBlockchainByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockchainByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockchainByNameResponse) ProtoMessage() {}

func (x *GetBlockchainByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockchainByNameResponse.ProtoReflect.Descriptor instead.
func (*GetBlockchainByNameResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlockchainByNameResponse) GetValue() *Blockchain {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListBlockchainRequest is the StateQuery/ListBlockchainRequest request type.
type ListBlockchainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListBlockchainRequest_PrefixQuery
	//	*ListBlockchainRequest_RangeQuery_
	Query isListBlockchainRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListBlockchainRequest) Reset() {
	*x = ListBlockchainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest) ProtoMessage() {}

func (x *ListBlockchainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14}
}

func (m *ListBlockchainRequest) GetQuery() isListBlockchainRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListBlockchainRequest) GetPrefixQuery() *ListBlockchainRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListBlockchainRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListBlockchainRequest) GetRangeQuery() *ListBlockchainRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListBlockchainRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListBlockchainRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListBlockchainRequest_Query interface {
	isListBlockchainRequest_Query()
}

type ListBlockchainRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListBlockchainRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListBlockchainRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListBlockchainRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListBlockchainRequest_PrefixQuery) isListBlockchainRequest_Query() {}

func (*ListBlockchainRequest_RangeQuery_) isListBlockchainRequest_Query() {}

// ListBlockchainResponse is the StateQuery/ListBlockchainResponse response type.
type ListBlockchainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Blockchain `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListBlockchainResponse) Reset() {
	*x = ListBlockchainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainResponse) ProtoMessage() {}

func (x *ListBlockchainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainResponse.ProtoReflect.Descriptor instead.
func (*ListBlockchainResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{15}
}

func (x *ListBlockchainResponse) GetValues() []*Blockchain {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListBlockchainResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetAccumulatorRequest is the StateQuery/GetAccumulatorRequest request type.
type GetAccumulatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index specifies the value of the index field in the primary key.
	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetAccumulatorRequest) Reset() {
	*x = GetAccumulatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccumulatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccumulatorRequest) ProtoMessage() {}

func (x *GetAccumulatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccumulatorRequest.ProtoReflect.Descriptor instead.
func (*GetAccumulatorRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{16}
}

func (x *GetAccumulatorRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

// GetAccumulatorResponse is the StateQuery/GetAccumulatorResponse response type.
type GetAccumulatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Accumulator `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetAccumulatorResponse) Reset() {
	*x = GetAccumulatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccumulatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccumulatorResponse) ProtoMessage() {}

func (x *GetAccumulatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccumulatorResponse.ProtoReflect.Descriptor instead.
func (*GetAccumulatorResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{17}
}

func (x *GetAccumulatorResponse) GetValue() *Accumulator {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetAccumulatorByControllerKeyRequest is the StateQuery/GetAccumulatorByControllerKeyRequest request type.
type GetAccumulatorByControllerKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Controller string `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	Key        string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetAccumulatorByControllerKeyRequest) Reset() {
	*x = GetAccumulatorByControllerKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccumulatorByControllerKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccumulatorByControllerKeyRequest) ProtoMessage() {}

func (x *GetAccumulatorByControllerKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccumulatorByControllerKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAccumulatorByControllerKeyRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{18}
}

func (x *GetAccumulatorByControllerKeyRequest) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *GetAccumulatorByControllerKeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// GetAccumulatorByControllerKeyResponse is the StateQuery/GetAccumulatorByControllerKeyResponse response type.
type GetAccumulatorByControllerKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Accumulator `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetAccumulatorByControllerKeyResponse) Reset() {
	*x = GetAccumulatorByControllerKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccumulatorByControllerKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccumulatorByControllerKeyResponse) ProtoMessage() {}

func (x *GetAccumulatorByControllerKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccumulatorByControllerKeyResponse.ProtoReflect.Descriptor instead.
func (*GetAccumulatorByControllerKeyResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{19}
}

func (x *GetAccumulatorByControllerKeyResponse) GetValue() *Accumulator {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListAccumulatorRequest is the StateQuery/ListAccumulatorRequest request type.
type ListAccumulatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListAccumulatorRequest_PrefixQuery
	//	*ListAccumulatorRequest_RangeQuery_
	Query isListAccumulatorRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAccumulatorRequest) Reset() {
	*x = ListAccumulatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccumulatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccumulatorRequest) ProtoMessage() {}

func (x *ListAccumulatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccumulatorRequest.ProtoReflect.Descriptor instead.
func (*ListAccumulatorRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{20}
}

func (m *ListAccumulatorRequest) GetQuery() isListAccumulatorRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListAccumulatorRequest) GetPrefixQuery() *ListAccumulatorRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListAccumulatorRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListAccumulatorRequest) GetRangeQuery() *ListAccumulatorRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListAccumulatorRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListAccumulatorRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListAccumulatorRequest_Query interface {
	isListAccumulatorRequest_Query()
}

type ListAccumulatorRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListAccumulatorRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListAccumulatorRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListAccumulatorRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListAccumulatorRequest_PrefixQuery) isListAccumulatorRequest_Query() {}

func (*ListAccumulatorRequest_RangeQuery_) isListAccumulatorRequest_Query() {}

// ListAccumulatorResponse is the StateQuery/ListAccumulatorResponse response type.
type ListAccumulatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Accumulator `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAccumulatorResponse) Reset() {
	*x = ListAccumulatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccumulatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccumulatorResponse) ProtoMessage() {}

func (x *ListAccumulatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccumulatorResponse.ProtoReflect.Descriptor instead.
func (*ListAccumulatorResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{21}
}

func (x *ListAccumulatorResponse) GetValues() []*Accumulator {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListAccumulatorResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetControllerRequest is the StateQuery/GetControllerRequest request type.
type GetControllerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sequence specifies the value of the sequence field in the primary key.
	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *GetControllerRequest) Reset() {
	*x = GetControllerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerRequest) ProtoMessage() {}

func (x *GetControllerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerRequest.ProtoReflect.Descriptor instead.
func (*GetControllerRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{22}
}

func (x *GetControllerRequest) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// GetControllerResponse is the StateQuery/GetControllerResponse response type.
type GetControllerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Controller `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetControllerResponse) Reset() {
	*x = GetControllerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerResponse) ProtoMessage() {}

func (x *GetControllerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerResponse.ProtoReflect.Descriptor instead.
func (*GetControllerResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{23}
}

func (x *GetControllerResponse) GetValue() *Controller {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetControllerByAddressRequest is the StateQuery/GetControllerByAddressRequest request type.
type GetControllerByAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetControllerByAddressRequest) Reset() {
	*x = GetControllerByAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerByAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerByAddressRequest) ProtoMessage() {}

func (x *GetControllerByAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerByAddressRequest.ProtoReflect.Descriptor instead.
func (*GetControllerByAddressRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{24}
}

func (x *GetControllerByAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// GetControllerByAddressResponse is the StateQuery/GetControllerByAddressResponse response type.
type GetControllerByAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Controller `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetControllerByAddressResponse) Reset() {
	*x = GetControllerByAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerByAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerByAddressResponse) ProtoMessage() {}

func (x *GetControllerByAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerByAddressResponse.ProtoReflect.Descriptor instead.
func (*GetControllerByAddressResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{25}
}

func (x *GetControllerByAddressResponse) GetValue() *Controller {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetControllerByPublicKeyRequest is the StateQuery/GetControllerByPublicKeyRequest request type.
type GetControllerByPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *GetControllerByPublicKeyRequest) Reset() {
	*x = GetControllerByPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerByPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerByPublicKeyRequest) ProtoMessage() {}

func (x *GetControllerByPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerByPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetControllerByPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{26}
}

func (x *GetControllerByPublicKeyRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// GetControllerByPublicKeyResponse is the StateQuery/GetControllerByPublicKeyResponse response type.
type GetControllerByPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Controller `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetControllerByPublicKeyResponse) Reset() {
	*x = GetControllerByPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerByPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerByPublicKeyResponse) ProtoMessage() {}

func (x *GetControllerByPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerByPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetControllerByPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{27}
}

func (x *GetControllerByPublicKeyResponse) GetValue() *Controller {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetControllerByPeerIdRequest is the StateQuery/GetControllerByPeerIdRequest request type.
type GetControllerByPeerIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *GetControllerByPeerIdRequest) Reset() {
	*x = GetControllerByPeerIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerByPeerIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerByPeerIdRequest) ProtoMessage() {}

func (x *GetControllerByPeerIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerByPeerIdRequest.ProtoReflect.Descriptor instead.
func (*GetControllerByPeerIdRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{28}
}

func (x *GetControllerByPeerIdRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

// GetControllerByPeerIdResponse is the StateQuery/GetControllerByPeerIdResponse response type.
type GetControllerByPeerIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Controller `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetControllerByPeerIdResponse) Reset() {
	*x = GetControllerByPeerIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerByPeerIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerByPeerIdResponse) ProtoMessage() {}

func (x *GetControllerByPeerIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerByPeerIdResponse.ProtoReflect.Descriptor instead.
func (*GetControllerByPeerIdResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{29}
}

func (x *GetControllerByPeerIdResponse) GetValue() *Controller {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetControllerByIpnsRequest is the StateQuery/GetControllerByIpnsRequest request type.
type GetControllerByIpnsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipns string `protobuf:"bytes,1,opt,name=ipns,proto3" json:"ipns,omitempty"`
}

func (x *GetControllerByIpnsRequest) Reset() {
	*x = GetControllerByIpnsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerByIpnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerByIpnsRequest) ProtoMessage() {}

func (x *GetControllerByIpnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerByIpnsRequest.ProtoReflect.Descriptor instead.
func (*GetControllerByIpnsRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{30}
}

func (x *GetControllerByIpnsRequest) GetIpns() string {
	if x != nil {
		return x.Ipns
	}
	return ""
}

// GetControllerByIpnsResponse is the StateQuery/GetControllerByIpnsResponse response type.
type GetControllerByIpnsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Controller `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetControllerByIpnsResponse) Reset() {
	*x = GetControllerByIpnsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetControllerByIpnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetControllerByIpnsResponse) ProtoMessage() {}

func (x *GetControllerByIpnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetControllerByIpnsResponse.ProtoReflect.Descriptor instead.
func (*GetControllerByIpnsResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{31}
}

func (x *GetControllerByIpnsResponse) GetValue() *Controller {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListControllerRequest is the StateQuery/ListControllerRequest request type.
type ListControllerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListControllerRequest_PrefixQuery
	//	*ListControllerRequest_RangeQuery_
	Query isListControllerRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListControllerRequest) Reset() {
	*x = ListControllerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRequest) ProtoMessage() {}

func (x *ListControllerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRequest.ProtoReflect.Descriptor instead.
func (*ListControllerRequest) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{32}
}

func (m *ListControllerRequest) GetQuery() isListControllerRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListControllerRequest) GetPrefixQuery() *ListControllerRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListControllerRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListControllerRequest) GetRangeQuery() *ListControllerRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListControllerRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListControllerRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListControllerRequest_Query interface {
	isListControllerRequest_Query()
}

type ListControllerRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListControllerRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListControllerRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListControllerRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListControllerRequest_PrefixQuery) isListControllerRequest_Query() {}

func (*ListControllerRequest_RangeQuery_) isListControllerRequest_Query() {}

// ListControllerResponse is the StateQuery/ListControllerResponse response type.
type ListControllerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Controller `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListControllerResponse) Reset() {
	*x = ListControllerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerResponse) ProtoMessage() {}

func (x *ListControllerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerResponse.ProtoReflect.Descriptor instead.
func (*ListControllerResponse) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{33}
}

func (x *ListControllerResponse) GetValues() []*Controller {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListControllerResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListAccountRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListAccountRequest_IndexKey_Sequence_
	//	*ListAccountRequest_IndexKey_Address_
	//	*ListAccountRequest_IndexKey_PublicKey_
	Key isListAccountRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListAccountRequest_IndexKey) Reset() {
	*x = ListAccountRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_IndexKey) ProtoMessage() {}

func (x *ListAccountRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 0}
}

func (m *ListAccountRequest_IndexKey) GetKey() isListAccountRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListAccountRequest_IndexKey) GetSequence() *ListAccountRequest_IndexKey_Sequence {
	if x, ok := x.GetKey().(*ListAccountRequest_IndexKey_Sequence_); ok {
		return x.Sequence
	}
	return nil
}

func (x *ListAccountRequest_IndexKey) GetAddress() *ListAccountRequest_IndexKey_Address {
	if x, ok := x.GetKey().(*ListAccountRequest_IndexKey_Address_); ok {
		return x.Address
	}
	return nil
}

func (x *ListAccountRequest_IndexKey) GetPublicKey() *ListAccountRequest_IndexKey_PublicKey {
	if x, ok := x.GetKey().(*ListAccountRequest_IndexKey_PublicKey_); ok {
		return x.PublicKey
	}
	return nil
}

type isListAccountRequest_IndexKey_Key interface {
	isListAccountRequest_IndexKey_Key()
}

type ListAccountRequest_IndexKey_Sequence_ struct {
	// sequence specifies the value of the Sequence index key to use in the query.
	Sequence *ListAccountRequest_IndexKey_Sequence `protobuf:"bytes,1,opt,name=sequence,proto3,oneof"`
}

type ListAccountRequest_IndexKey_Address_ struct {
	// address specifies the value of the Address index key to use in the query.
	Address *ListAccountRequest_IndexKey_Address `protobuf:"bytes,2,opt,name=address,proto3,oneof"`
}

type ListAccountRequest_IndexKey_PublicKey_ struct {
	// public_key specifies the value of the PublicKey index key to use in the query.
	PublicKey *ListAccountRequest_IndexKey_PublicKey `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3,oneof"`
}

func (*ListAccountRequest_IndexKey_Sequence_) isListAccountRequest_IndexKey_Key() {}

func (*ListAccountRequest_IndexKey_Address_) isListAccountRequest_IndexKey_Key() {}

func (*ListAccountRequest_IndexKey_PublicKey_) isListAccountRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListAccountRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListAccountRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListAccountRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListAccountRequest_RangeQuery) Reset() {
	*x = ListAccountRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_RangeQuery) ProtoMessage() {}

func (x *ListAccountRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ListAccountRequest_RangeQuery) GetFrom() *ListAccountRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListAccountRequest_RangeQuery) GetTo() *ListAccountRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListAccountRequest_IndexKey_Sequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sequence is the value of the sequence field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Sequence *uint64 `protobuf:"varint,1,opt,name=sequence,proto3,oneof" json:"sequence,omitempty"`
}

func (x *ListAccountRequest_IndexKey_Sequence) Reset() {
	*x = ListAccountRequest_IndexKey_Sequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_IndexKey_Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_IndexKey_Sequence) ProtoMessage() {}

func (x *ListAccountRequest_IndexKey_Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_IndexKey_Sequence.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_IndexKey_Sequence) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *ListAccountRequest_IndexKey_Sequence) GetSequence() uint64 {
	if x != nil && x.Sequence != nil {
		return *x.Sequence
	}
	return 0
}

type ListAccountRequest_IndexKey_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is the value of the address field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Address *string `protobuf:"bytes,1,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *ListAccountRequest_IndexKey_Address) Reset() {
	*x = ListAccountRequest_IndexKey_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_IndexKey_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_IndexKey_Address) ProtoMessage() {}

func (x *ListAccountRequest_IndexKey_Address) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_IndexKey_Address.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_IndexKey_Address) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 0, 1}
}

func (x *ListAccountRequest_IndexKey_Address) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type ListAccountRequest_IndexKey_PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// public_key is the value of the public_key field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3,oneof" json:"public_key,omitempty"`
}

func (x *ListAccountRequest_IndexKey_PublicKey) Reset() {
	*x = ListAccountRequest_IndexKey_PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountRequest_IndexKey_PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest_IndexKey_PublicKey) ProtoMessage() {}

func (x *ListAccountRequest_IndexKey_PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest_IndexKey_PublicKey.ProtoReflect.Descriptor instead.
func (*ListAccountRequest_IndexKey_PublicKey) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{6, 0, 2}
}

func (x *ListAccountRequest_IndexKey_PublicKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListBlockchainRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListBlockchainRequest_IndexKey_Index_
	//	*ListBlockchainRequest_IndexKey_ChainId_
	//	*ListBlockchainRequest_IndexKey_Name_
	Key isListBlockchainRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListBlockchainRequest_IndexKey) Reset() {
	*x = ListBlockchainRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_IndexKey) ProtoMessage() {}

func (x *ListBlockchainRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0}
}

func (m *ListBlockchainRequest_IndexKey) GetKey() isListBlockchainRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListBlockchainRequest_IndexKey) GetIndex() *ListBlockchainRequest_IndexKey_Index {
	if x, ok := x.GetKey().(*ListBlockchainRequest_IndexKey_Index_); ok {
		return x.Index
	}
	return nil
}

func (x *ListBlockchainRequest_IndexKey) GetChainId() *ListBlockchainRequest_IndexKey_ChainId {
	if x, ok := x.GetKey().(*ListBlockchainRequest_IndexKey_ChainId_); ok {
		return x.ChainId
	}
	return nil
}

func (x *ListBlockchainRequest_IndexKey) GetName() *ListBlockchainRequest_IndexKey_Name {
	if x, ok := x.GetKey().(*ListBlockchainRequest_IndexKey_Name_); ok {
		return x.Name
	}
	return nil
}

type isListBlockchainRequest_IndexKey_Key interface {
	isListBlockchainRequest_IndexKey_Key()
}

type ListBlockchainRequest_IndexKey_Index_ struct {
	// index specifies the value of the Index index key to use in the query.
	Index *ListBlockchainRequest_IndexKey_Index `protobuf:"bytes,1,opt,name=index,proto3,oneof"`
}

type ListBlockchainRequest_IndexKey_ChainId_ struct {
	// chain_id specifies the value of the ChainId index key to use in the query.
	ChainId *ListBlockchainRequest_IndexKey_ChainId `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3,oneof"`
}

type ListBlockchainRequest_IndexKey_Name_ struct {
	// name specifies the value of the Name index key to use in the query.
	Name *ListBlockchainRequest_IndexKey_Name `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

func (*ListBlockchainRequest_IndexKey_Index_) isListBlockchainRequest_IndexKey_Key() {}

func (*ListBlockchainRequest_IndexKey_ChainId_) isListBlockchainRequest_IndexKey_Key() {}

func (*ListBlockchainRequest_IndexKey_Name_) isListBlockchainRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListBlockchainRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListBlockchainRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListBlockchainRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListBlockchainRequest_RangeQuery) Reset() {
	*x = ListBlockchainRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_RangeQuery) ProtoMessage() {}

func (x *ListBlockchainRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 1}
}

func (x *ListBlockchainRequest_RangeQuery) GetFrom() *ListBlockchainRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListBlockchainRequest_RangeQuery) GetTo() *ListBlockchainRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListBlockchainRequest_IndexKey_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index is the value of the index field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Index *uint64 `protobuf:"varint,1,opt,name=index,proto3,oneof" json:"index,omitempty"`
}

func (x *ListBlockchainRequest_IndexKey_Index) Reset() {
	*x = ListBlockchainRequest_IndexKey_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_IndexKey_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_IndexKey_Index) ProtoMessage() {}

func (x *ListBlockchainRequest_IndexKey_Index) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_IndexKey_Index.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_IndexKey_Index) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *ListBlockchainRequest_IndexKey_Index) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type ListBlockchainRequest_IndexKey_ChainId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// chain_id is the value of the chain_id field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	ChainId *string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3,oneof" json:"chain_id,omitempty"`
}

func (x *ListBlockchainRequest_IndexKey_ChainId) Reset() {
	*x = ListBlockchainRequest_IndexKey_ChainId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_IndexKey_ChainId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_IndexKey_ChainId) ProtoMessage() {}

func (x *ListBlockchainRequest_IndexKey_ChainId) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_IndexKey_ChainId.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_IndexKey_ChainId) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 1}
}

func (x *ListBlockchainRequest_IndexKey_ChainId) GetChainId() string {
	if x != nil && x.ChainId != nil {
		return *x.ChainId
	}
	return ""
}

type ListBlockchainRequest_IndexKey_Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the value of the name field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *ListBlockchainRequest_IndexKey_Name) Reset() {
	*x = ListBlockchainRequest_IndexKey_Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlockchainRequest_IndexKey_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlockchainRequest_IndexKey_Name) ProtoMessage() {}

func (x *ListBlockchainRequest_IndexKey_Name) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlockchainRequest_IndexKey_Name.ProtoReflect.Descriptor instead.
func (*ListBlockchainRequest_IndexKey_Name) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 2}
}

func (x *ListBlockchainRequest_IndexKey_Name) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListAccumulatorRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListAccumulatorRequest_IndexKey_Index_
	//	*ListAccumulatorRequest_IndexKey_ControllerKey_
	Key isListAccumulatorRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListAccumulatorRequest_IndexKey) Reset() {
	*x = ListAccumulatorRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccumulatorRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccumulatorRequest_IndexKey) ProtoMessage() {}

func (x *ListAccumulatorRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccumulatorRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListAccumulatorRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{20, 0}
}

func (m *ListAccumulatorRequest_IndexKey) GetKey() isListAccumulatorRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListAccumulatorRequest_IndexKey) GetIndex() *ListAccumulatorRequest_IndexKey_Index {
	if x, ok := x.GetKey().(*ListAccumulatorRequest_IndexKey_Index_); ok {
		return x.Index
	}
	return nil
}

func (x *ListAccumulatorRequest_IndexKey) GetControllerKey() *ListAccumulatorRequest_IndexKey_ControllerKey {
	if x, ok := x.GetKey().(*ListAccumulatorRequest_IndexKey_ControllerKey_); ok {
		return x.ControllerKey
	}
	return nil
}

type isListAccumulatorRequest_IndexKey_Key interface {
	isListAccumulatorRequest_IndexKey_Key()
}

type ListAccumulatorRequest_IndexKey_Index_ struct {
	// index specifies the value of the Index index key to use in the query.
	Index *ListAccumulatorRequest_IndexKey_Index `protobuf:"bytes,1,opt,name=index,proto3,oneof"`
}

type ListAccumulatorRequest_IndexKey_ControllerKey_ struct {
	// controller_key specifies the value of the ControllerKey index key to use in the query.
	ControllerKey *ListAccumulatorRequest_IndexKey_ControllerKey `protobuf:"bytes,2,opt,name=controller_key,json=controllerKey,proto3,oneof"`
}

func (*ListAccumulatorRequest_IndexKey_Index_) isListAccumulatorRequest_IndexKey_Key() {}

func (*ListAccumulatorRequest_IndexKey_ControllerKey_) isListAccumulatorRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListAccumulatorRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListAccumulatorRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListAccumulatorRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListAccumulatorRequest_RangeQuery) Reset() {
	*x = ListAccumulatorRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccumulatorRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccumulatorRequest_RangeQuery) ProtoMessage() {}

func (x *ListAccumulatorRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccumulatorRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListAccumulatorRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{20, 1}
}

func (x *ListAccumulatorRequest_RangeQuery) GetFrom() *ListAccumulatorRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListAccumulatorRequest_RangeQuery) GetTo() *ListAccumulatorRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListAccumulatorRequest_IndexKey_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index is the value of the index field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Index *uint64 `protobuf:"varint,1,opt,name=index,proto3,oneof" json:"index,omitempty"`
}

func (x *ListAccumulatorRequest_IndexKey_Index) Reset() {
	*x = ListAccumulatorRequest_IndexKey_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccumulatorRequest_IndexKey_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccumulatorRequest_IndexKey_Index) ProtoMessage() {}

func (x *ListAccumulatorRequest_IndexKey_Index) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccumulatorRequest_IndexKey_Index.ProtoReflect.Descriptor instead.
func (*ListAccumulatorRequest_IndexKey_Index) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{20, 0, 0}
}

func (x *ListAccumulatorRequest_IndexKey_Index) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type ListAccumulatorRequest_IndexKey_ControllerKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// controller is the value of the controller field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Controller *string `protobuf:"bytes,1,opt,name=controller,proto3,oneof" json:"controller,omitempty"`
	// key is the value of the key field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Key *string `protobuf:"bytes,2,opt,name=key,proto3,oneof" json:"key,omitempty"`
}

func (x *ListAccumulatorRequest_IndexKey_ControllerKey) Reset() {
	*x = ListAccumulatorRequest_IndexKey_ControllerKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccumulatorRequest_IndexKey_ControllerKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccumulatorRequest_IndexKey_ControllerKey) ProtoMessage() {}

func (x *ListAccumulatorRequest_IndexKey_ControllerKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccumulatorRequest_IndexKey_ControllerKey.ProtoReflect.Descriptor instead.
func (*ListAccumulatorRequest_IndexKey_ControllerKey) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{20, 0, 1}
}

func (x *ListAccumulatorRequest_IndexKey_ControllerKey) GetController() string {
	if x != nil && x.Controller != nil {
		return *x.Controller
	}
	return ""
}

func (x *ListAccumulatorRequest_IndexKey_ControllerKey) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListControllerRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListControllerRequest_IndexKey_Sequence_
	//	*ListControllerRequest_IndexKey_Address_
	//	*ListControllerRequest_IndexKey_PublicKey_
	//	*ListControllerRequest_IndexKey_PeerId_
	//	*ListControllerRequest_IndexKey_Ipns_
	Key isListControllerRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListControllerRequest_IndexKey) Reset() {
	*x = ListControllerRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRequest_IndexKey) ProtoMessage() {}

func (x *ListControllerRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListControllerRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{32, 0}
}

func (m *ListControllerRequest_IndexKey) GetKey() isListControllerRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListControllerRequest_IndexKey) GetSequence() *ListControllerRequest_IndexKey_Sequence {
	if x, ok := x.GetKey().(*ListControllerRequest_IndexKey_Sequence_); ok {
		return x.Sequence
	}
	return nil
}

func (x *ListControllerRequest_IndexKey) GetAddress() *ListControllerRequest_IndexKey_Address {
	if x, ok := x.GetKey().(*ListControllerRequest_IndexKey_Address_); ok {
		return x.Address
	}
	return nil
}

func (x *ListControllerRequest_IndexKey) GetPublicKey() *ListControllerRequest_IndexKey_PublicKey {
	if x, ok := x.GetKey().(*ListControllerRequest_IndexKey_PublicKey_); ok {
		return x.PublicKey
	}
	return nil
}

func (x *ListControllerRequest_IndexKey) GetPeerId() *ListControllerRequest_IndexKey_PeerId {
	if x, ok := x.GetKey().(*ListControllerRequest_IndexKey_PeerId_); ok {
		return x.PeerId
	}
	return nil
}

func (x *ListControllerRequest_IndexKey) GetIpns() *ListControllerRequest_IndexKey_Ipns {
	if x, ok := x.GetKey().(*ListControllerRequest_IndexKey_Ipns_); ok {
		return x.Ipns
	}
	return nil
}

type isListControllerRequest_IndexKey_Key interface {
	isListControllerRequest_IndexKey_Key()
}

type ListControllerRequest_IndexKey_Sequence_ struct {
	// sequence specifies the value of the Sequence index key to use in the query.
	Sequence *ListControllerRequest_IndexKey_Sequence `protobuf:"bytes,1,opt,name=sequence,proto3,oneof"`
}

type ListControllerRequest_IndexKey_Address_ struct {
	// address specifies the value of the Address index key to use in the query.
	Address *ListControllerRequest_IndexKey_Address `protobuf:"bytes,2,opt,name=address,proto3,oneof"`
}

type ListControllerRequest_IndexKey_PublicKey_ struct {
	// public_key specifies the value of the PublicKey index key to use in the query.
	PublicKey *ListControllerRequest_IndexKey_PublicKey `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3,oneof"`
}

type ListControllerRequest_IndexKey_PeerId_ struct {
	// peer_id specifies the value of the PeerId index key to use in the query.
	PeerId *ListControllerRequest_IndexKey_PeerId `protobuf:"bytes,4,opt,name=peer_id,json=peerId,proto3,oneof"`
}

type ListControllerRequest_IndexKey_Ipns_ struct {
	// ipns specifies the value of the Ipns index key to use in the query.
	Ipns *ListControllerRequest_IndexKey_Ipns `protobuf:"bytes,5,opt,name=ipns,proto3,oneof"`
}

func (*ListControllerRequest_IndexKey_Sequence_) isListControllerRequest_IndexKey_Key() {}

func (*ListControllerRequest_IndexKey_Address_) isListControllerRequest_IndexKey_Key() {}

func (*ListControllerRequest_IndexKey_PublicKey_) isListControllerRequest_IndexKey_Key() {}

func (*ListControllerRequest_IndexKey_PeerId_) isListControllerRequest_IndexKey_Key() {}

func (*ListControllerRequest_IndexKey_Ipns_) isListControllerRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListControllerRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListControllerRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListControllerRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListControllerRequest_RangeQuery) Reset() {
	*x = ListControllerRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRequest_RangeQuery) ProtoMessage() {}

func (x *ListControllerRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListControllerRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{32, 1}
}

func (x *ListControllerRequest_RangeQuery) GetFrom() *ListControllerRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListControllerRequest_RangeQuery) GetTo() *ListControllerRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListControllerRequest_IndexKey_Sequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sequence is the value of the sequence field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Sequence *uint64 `protobuf:"varint,1,opt,name=sequence,proto3,oneof" json:"sequence,omitempty"`
}

func (x *ListControllerRequest_IndexKey_Sequence) Reset() {
	*x = ListControllerRequest_IndexKey_Sequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRequest_IndexKey_Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRequest_IndexKey_Sequence) ProtoMessage() {}

func (x *ListControllerRequest_IndexKey_Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRequest_IndexKey_Sequence.ProtoReflect.Descriptor instead.
func (*ListControllerRequest_IndexKey_Sequence) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{32, 0, 0}
}

func (x *ListControllerRequest_IndexKey_Sequence) GetSequence() uint64 {
	if x != nil && x.Sequence != nil {
		return *x.Sequence
	}
	return 0
}

type ListControllerRequest_IndexKey_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is the value of the address field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Address *string `protobuf:"bytes,1,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *ListControllerRequest_IndexKey_Address) Reset() {
	*x = ListControllerRequest_IndexKey_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRequest_IndexKey_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRequest_IndexKey_Address) ProtoMessage() {}

func (x *ListControllerRequest_IndexKey_Address) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRequest_IndexKey_Address.ProtoReflect.Descriptor instead.
func (*ListControllerRequest_IndexKey_Address) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{32, 0, 1}
}

func (x *ListControllerRequest_IndexKey_Address) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type ListControllerRequest_IndexKey_PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// public_key is the value of the public_key field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3,oneof" json:"public_key,omitempty"`
}

func (x *ListControllerRequest_IndexKey_PublicKey) Reset() {
	*x = ListControllerRequest_IndexKey_PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRequest_IndexKey_PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRequest_IndexKey_PublicKey) ProtoMessage() {}

func (x *ListControllerRequest_IndexKey_PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRequest_IndexKey_PublicKey.ProtoReflect.Descriptor instead.
func (*ListControllerRequest_IndexKey_PublicKey) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{32, 0, 2}
}

func (x *ListControllerRequest_IndexKey_PublicKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type ListControllerRequest_IndexKey_PeerId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// peer_id is the value of the peer_id field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	PeerId *string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3,oneof" json:"peer_id,omitempty"`
}

func (x *ListControllerRequest_IndexKey_PeerId) Reset() {
	*x = ListControllerRequest_IndexKey_PeerId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRequest_IndexKey_PeerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRequest_IndexKey_PeerId) ProtoMessage() {}

func (x *ListControllerRequest_IndexKey_PeerId) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRequest_IndexKey_PeerId.ProtoReflect.Descriptor instead.
func (*ListControllerRequest_IndexKey_PeerId) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{32, 0, 3}
}

func (x *ListControllerRequest_IndexKey_PeerId) GetPeerId() string {
	if x != nil && x.PeerId != nil {
		return *x.PeerId
	}
	return ""
}

type ListControllerRequest_IndexKey_Ipns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ipns is the value of the ipns field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Ipns *string `protobuf:"bytes,1,opt,name=ipns,proto3,oneof" json:"ipns,omitempty"`
}

func (x *ListControllerRequest_IndexKey_Ipns) Reset() {
	*x = ListControllerRequest_IndexKey_Ipns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListControllerRequest_IndexKey_Ipns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListControllerRequest_IndexKey_Ipns) ProtoMessage() {}

func (x *ListControllerRequest_IndexKey_Ipns) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_identity_module_v1_state_query_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListControllerRequest_IndexKey_Ipns.ProtoReflect.Descriptor instead.
func (*ListControllerRequest_IndexKey_Ipns) Descriptor() ([]byte, []int) {
	return file_sonr_identity_module_v1_state_query_proto_rawDescGZIP(), []int{32, 0, 4}
}

func (x *ListControllerRequest_IndexKey_Ipns) GetIpns() string {
	if x != nil && x.Ipns != nil {
		return *x.Ipns
	}
	return ""
}

var File_sonr_identity_module_v1_state_query_proto protoreflect.FileDescriptor

var file_sonr_identity_module_v1_state_query_proto_rawDesc = []byte{
	0x0a, 0x29, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x23, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x36, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x55, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x22, 0x57, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x96, 0x07, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x59, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48, 0x00,
	0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x59, 0x0a,
	0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0xd9, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x12, 0x5b, 0x0a,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x5f, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0x38, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x1a,
	0x34, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x3e, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x9c, 0x01, 0x0a,
	0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x44, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x52, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x5b, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf6, 0x06, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5c, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x5c,
	0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xaa, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65,
	0x79, 0x12, 0x55, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48,
	0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5c, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4b, 0x65, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x2c, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x36, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x1a, 0x28, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x1a, 0xa2, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x4b, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x47, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b,
	0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x9e, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x54, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x58, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x75,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x63, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xbd, 0x06, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x5d, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x5d,
	0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xec, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b,
	0x65, 0x79, 0x12, 0x56, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x6f, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x1a, 0x2c, 0x0a, 0x05, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x62, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x05, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x1a, 0xa4, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x48, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x75,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0xa0, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x52, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x39, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5b, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x5d, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x50, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x5a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x42, 0x79, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x70, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x70, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x6e, 0x73, 0x22,
	0x58, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x70, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x09, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b,
	0x65, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x5c, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xef, 0x05, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4b, 0x65, 0x79, 0x12, 0x5e, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x62, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x59, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x52, 0x0a, 0x04, 0x69, 0x70, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x49, 0x70, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x04,
	0x69, 0x70, 0x6e, 0x73, 0x1a, 0x38, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x1f, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x34,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x1a, 0x3e, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x1a, 0x32, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x1a, 0x28, 0x0a, 0x04, 0x49, 0x70, 0x6e, 0x73,
	0x12, 0x17, 0x0a, 0x04, 0x69, 0x70, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x69, 0x70, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x70,
	0x6e, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0xa2, 0x01, 0x0a, 0x0a, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4b, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x47, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x9b, 0x11, 0x0a, 0x11, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x33, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x2d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x36, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x2e, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x2e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xa0, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x12, 0x3d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x2d,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42,
	0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x38, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x42, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x42, 0x79, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x42, 0x79, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x70, 0x6e, 0x73, 0x12, 0x33, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x79, 0x49, 0x70,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x70, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x73, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xf5, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2f, 0x73, 0x6f, 0x6e,
	0x72, 0x2f, 0x78, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x53, 0x49, 0x4d, 0xaa, 0x02, 0x17, 0x53, 0x6f, 0x6e, 0x72, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x17, 0x53, 0x6f, 0x6e, 0x72, 0x5c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x23, 0x53, 0x6f,
	0x6e, 0x72, 0x5c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5c, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x1a, 0x53, 0x6f, 0x6e, 0x72, 0x3a, 0x3a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sonr_identity_module_v1_state_query_proto_rawDescOnce sync.Once
	file_sonr_identity_module_v1_state_query_proto_rawDescData = file_sonr_identity_module_v1_state_query_proto_rawDesc
)

func file_sonr_identity_module_v1_state_query_proto_rawDescGZIP() []byte {
	file_sonr_identity_module_v1_state_query_proto_rawDescOnce.Do(func() {
		file_sonr_identity_module_v1_state_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_sonr_identity_module_v1_state_query_proto_rawDescData)
	})
	return file_sonr_identity_module_v1_state_query_proto_rawDescData
}

var file_sonr_identity_module_v1_state_query_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_sonr_identity_module_v1_state_query_proto_goTypes = []interface{}{
	(*GetAccountRequest)(nil),                             // 0: sonr.identity.module.v1.GetAccountRequest
	(*GetAccountResponse)(nil),                            // 1: sonr.identity.module.v1.GetAccountResponse
	(*GetAccountByAddressRequest)(nil),                    // 2: sonr.identity.module.v1.GetAccountByAddressRequest
	(*GetAccountByAddressResponse)(nil),                   // 3: sonr.identity.module.v1.GetAccountByAddressResponse
	(*GetAccountByPublicKeyRequest)(nil),                  // 4: sonr.identity.module.v1.GetAccountByPublicKeyRequest
	(*GetAccountByPublicKeyResponse)(nil),                 // 5: sonr.identity.module.v1.GetAccountByPublicKeyResponse
	(*ListAccountRequest)(nil),                            // 6: sonr.identity.module.v1.ListAccountRequest
	(*ListAccountResponse)(nil),                           // 7: sonr.identity.module.v1.ListAccountResponse
	(*GetBlockchainRequest)(nil),                          // 8: sonr.identity.module.v1.GetBlockchainRequest
	(*GetBlockchainResponse)(nil),                         // 9: sonr.identity.module.v1.GetBlockchainResponse
	(*GetBlockchainByChainIdRequest)(nil),                 // 10: sonr.identity.module.v1.GetBlockchainByChainIdRequest
	(*GetBlockchainByChainIdResponse)(nil),                // 11: sonr.identity.module.v1.GetBlockchainByChainIdResponse
	(*GetBlockchainByNameRequest)(nil),                    // 12: sonr.identity.module.v1.GetBlockchainByNameRequest
	(*GetBlockchainByNameResponse)(nil),                   // 13: sonr.identity.module.v1.GetBlockchainByNameResponse
	(*ListBlockchainRequest)(nil),                         // 14: sonr.identity.module.v1.ListBlockchainRequest
	(*ListBlockchainResponse)(nil),                        // 15: sonr.identity.module.v1.ListBlockchainResponse
	(*GetAccumulatorRequest)(nil),                         // 16: sonr.identity.module.v1.GetAccumulatorRequest
	(*GetAccumulatorResponse)(nil),                        // 17: sonr.identity.module.v1.GetAccumulatorResponse
	(*GetAccumulatorByControllerKeyRequest)(nil),          // 18: sonr.identity.module.v1.GetAccumulatorByControllerKeyRequest
	(*GetAccumulatorByControllerKeyResponse)(nil),         // 19: sonr.identity.module.v1.GetAccumulatorByControllerKeyResponse
	(*ListAccumulatorRequest)(nil),                        // 20: sonr.identity.module.v1.ListAccumulatorRequest
	(*ListAccumulatorResponse)(nil),                       // 21: sonr.identity.module.v1.ListAccumulatorResponse
	(*GetControllerRequest)(nil),                          // 22: sonr.identity.module.v1.GetControllerRequest
	(*GetControllerResponse)(nil),                         // 23: sonr.identity.module.v1.GetControllerResponse
	(*GetControllerByAddressRequest)(nil),                 // 24: sonr.identity.module.v1.GetControllerByAddressRequest
	(*GetControllerByAddressResponse)(nil),                // 25: sonr.identity.module.v1.GetControllerByAddressResponse
	(*GetControllerByPublicKeyRequest)(nil),               // 26: sonr.identity.module.v1.GetControllerByPublicKeyRequest
	(*GetControllerByPublicKeyResponse)(nil),              // 27: sonr.identity.module.v1.GetControllerByPublicKeyResponse
	(*GetControllerByPeerIdRequest)(nil),                  // 28: sonr.identity.module.v1.GetControllerByPeerIdRequest
	(*GetControllerByPeerIdResponse)(nil),                 // 29: sonr.identity.module.v1.GetControllerByPeerIdResponse
	(*GetControllerByIpnsRequest)(nil),                    // 30: sonr.identity.module.v1.GetControllerByIpnsRequest
	(*GetControllerByIpnsResponse)(nil),                   // 31: sonr.identity.module.v1.GetControllerByIpnsResponse
	(*ListControllerRequest)(nil),                         // 32: sonr.identity.module.v1.ListControllerRequest
	(*ListControllerResponse)(nil),                        // 33: sonr.identity.module.v1.ListControllerResponse
	(*ListAccountRequest_IndexKey)(nil),                   // 34: sonr.identity.module.v1.ListAccountRequest.IndexKey
	(*ListAccountRequest_RangeQuery)(nil),                 // 35: sonr.identity.module.v1.ListAccountRequest.RangeQuery
	(*ListAccountRequest_IndexKey_Sequence)(nil),          // 36: sonr.identity.module.v1.ListAccountRequest.IndexKey.Sequence
	(*ListAccountRequest_IndexKey_Address)(nil),           // 37: sonr.identity.module.v1.ListAccountRequest.IndexKey.Address
	(*ListAccountRequest_IndexKey_PublicKey)(nil),         // 38: sonr.identity.module.v1.ListAccountRequest.IndexKey.PublicKey
	(*ListBlockchainRequest_IndexKey)(nil),                // 39: sonr.identity.module.v1.ListBlockchainRequest.IndexKey
	(*ListBlockchainRequest_RangeQuery)(nil),              // 40: sonr.identity.module.v1.ListBlockchainRequest.RangeQuery
	(*ListBlockchainRequest_IndexKey_Index)(nil),          // 41: sonr.identity.module.v1.ListBlockchainRequest.IndexKey.Index
	(*ListBlockchainRequest_IndexKey_ChainId)(nil),        // 42: sonr.identity.module.v1.ListBlockchainRequest.IndexKey.ChainId
	(*ListBlockchainRequest_IndexKey_Name)(nil),           // 43: sonr.identity.module.v1.ListBlockchainRequest.IndexKey.Name
	(*ListAccumulatorRequest_IndexKey)(nil),               // 44: sonr.identity.module.v1.ListAccumulatorRequest.IndexKey
	(*ListAccumulatorRequest_RangeQuery)(nil),             // 45: sonr.identity.module.v1.ListAccumulatorRequest.RangeQuery
	(*ListAccumulatorRequest_IndexKey_Index)(nil),         // 46: sonr.identity.module.v1.ListAccumulatorRequest.IndexKey.Index
	(*ListAccumulatorRequest_IndexKey_ControllerKey)(nil), // 47: sonr.identity.module.v1.ListAccumulatorRequest.IndexKey.ControllerKey
	(*ListControllerRequest_IndexKey)(nil),                // 48: sonr.identity.module.v1.ListControllerRequest.IndexKey
	(*ListControllerRequest_RangeQuery)(nil),              // 49: sonr.identity.module.v1.ListControllerRequest.RangeQuery
	(*ListControllerRequest_IndexKey_Sequence)(nil),       // 50: sonr.identity.module.v1.ListControllerRequest.IndexKey.Sequence
	(*ListControllerRequest_IndexKey_Address)(nil),        // 51: sonr.identity.module.v1.ListControllerRequest.IndexKey.Address
	(*ListControllerRequest_IndexKey_PublicKey)(nil),      // 52: sonr.identity.module.v1.ListControllerRequest.IndexKey.PublicKey
	(*ListControllerRequest_IndexKey_PeerId)(nil),         // 53: sonr.identity.module.v1.ListControllerRequest.IndexKey.PeerId
	(*ListControllerRequest_IndexKey_Ipns)(nil),           // 54: sonr.identity.module.v1.ListControllerRequest.IndexKey.Ipns
	(*Account)(nil),                                       // 55: sonr.identity.module.v1.Account
	(*v1beta1.PageRequest)(nil),                           // 56: cosmos.base.query.v1beta1.PageRequest
	(*v1beta1.PageResponse)(nil),                          // 57: cosmos.base.query.v1beta1.PageResponse
	(*Blockchain)(nil),                                    // 58: sonr.identity.module.v1.Blockchain
	(*Accumulator)(nil),                                   // 59: sonr.identity.module.v1.Accumulator
	(*Controller)(nil),                                    // 60: sonr.identity.module.v1.Controller
}
var file_sonr_identity_module_v1_state_query_proto_depIdxs = []int32{
	55, // 0: sonr.identity.module.v1.GetAccountResponse.value:type_name -> sonr.identity.module.v1.Account
	55, // 1: sonr.identity.module.v1.GetAccountByAddressResponse.value:type_name -> sonr.identity.module.v1.Account
	55, // 2: sonr.identity.module.v1.GetAccountByPublicKeyResponse.value:type_name -> sonr.identity.module.v1.Account
	34, // 3: sonr.identity.module.v1.ListAccountRequest.prefix_query:type_name -> sonr.identity.module.v1.ListAccountRequest.IndexKey
	35, // 4: sonr.identity.module.v1.ListAccountRequest.range_query:type_name -> sonr.identity.module.v1.ListAccountRequest.RangeQuery
	56, // 5: sonr.identity.module.v1.ListAccountRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	55, // 6: sonr.identity.module.v1.ListAccountResponse.values:type_name -> sonr.identity.module.v1.Account
	57, // 7: sonr.identity.module.v1.ListAccountResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	58, // 8: sonr.identity.module.v1.GetBlockchainResponse.value:type_name -> sonr.identity.module.v1.Blockchain
	58, // 9: sonr.identity.module.v1.GetBlockchainByChainIdResponse.value:type_name -> sonr.identity.module.v1.Blockchain
	58, // 10: sonr.identity.module.v1.GetBlockchainByNameResponse.value:type_name -> sonr.identity.module.v1.Blockchain
	39, // 11: sonr.identity.module.v1.ListBlockchainRequest.prefix_query:type_name -> sonr.identity.module.v1.ListBlockchainRequest.IndexKey
	40, // 12: sonr.identity.module.v1.ListBlockchainRequest.range_query:type_name -> sonr.identity.module.v1.ListBlockchainRequest.RangeQuery
	56, // 13: sonr.identity.module.v1.ListBlockchainRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	58, // 14: sonr.identity.module.v1.ListBlockchainResponse.values:type_name -> sonr.identity.module.v1.Blockchain
	57, // 15: sonr.identity.module.v1.ListBlockchainResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	59, // 16: sonr.identity.module.v1.GetAccumulatorResponse.value:type_name -> sonr.identity.module.v1.Accumulator
	59, // 17: sonr.identity.module.v1.GetAccumulatorByControllerKeyResponse.value:type_name -> sonr.identity.module.v1.Accumulator
	44, // 18: sonr.identity.module.v1.ListAccumulatorRequest.prefix_query:type_name -> sonr.identity.module.v1.ListAccumulatorRequest.IndexKey
	45, // 19: sonr.identity.module.v1.ListAccumulatorRequest.range_query:type_name -> sonr.identity.module.v1.ListAccumulatorRequest.RangeQuery
	56, // 20: sonr.identity.module.v1.ListAccumulatorRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	59, // 21: sonr.identity.module.v1.ListAccumulatorResponse.values:type_name -> sonr.identity.module.v1.Accumulator
	57, // 22: sonr.identity.module.v1.ListAccumulatorResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	60, // 23: sonr.identity.module.v1.GetControllerResponse.value:type_name -> sonr.identity.module.v1.Controller
	60, // 24: sonr.identity.module.v1.GetControllerByAddressResponse.value:type_name -> sonr.identity.module.v1.Controller
	60, // 25: sonr.identity.module.v1.GetControllerByPublicKeyResponse.value:type_name -> sonr.identity.module.v1.Controller
	60, // 26: sonr.identity.module.v1.GetControllerByPeerIdResponse.value:type_name -> sonr.identity.module.v1.Controller
	60, // 27: sonr.identity.module.v1.GetControllerByIpnsResponse.value:type_name -> sonr.identity.module.v1.Controller
	48, // 28: sonr.identity.module.v1.ListControllerRequest.prefix_query:type_name -> sonr.identity.module.v1.ListControllerRequest.IndexKey
	49, // 29: sonr.identity.module.v1.ListControllerRequest.range_query:type_name -> sonr.identity.module.v1.ListControllerRequest.RangeQuery
	56, // 30: sonr.identity.module.v1.ListControllerRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	60, // 31: sonr.identity.module.v1.ListControllerResponse.values:type_name -> sonr.identity.module.v1.Controller
	57, // 32: sonr.identity.module.v1.ListControllerResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	36, // 33: sonr.identity.module.v1.ListAccountRequest.IndexKey.sequence:type_name -> sonr.identity.module.v1.ListAccountRequest.IndexKey.Sequence
	37, // 34: sonr.identity.module.v1.ListAccountRequest.IndexKey.address:type_name -> sonr.identity.module.v1.ListAccountRequest.IndexKey.Address
	38, // 35: sonr.identity.module.v1.ListAccountRequest.IndexKey.public_key:type_name -> sonr.identity.module.v1.ListAccountRequest.IndexKey.PublicKey
	34, // 36: sonr.identity.module.v1.ListAccountRequest.RangeQuery.from:type_name -> sonr.identity.module.v1.ListAccountRequest.IndexKey
	34, // 37: sonr.identity.module.v1.ListAccountRequest.RangeQuery.to:type_name -> sonr.identity.module.v1.ListAccountRequest.IndexKey
	41, // 38: sonr.identity.module.v1.ListBlockchainRequest.IndexKey.index:type_name -> sonr.identity.module.v1.ListBlockchainRequest.IndexKey.Index
	42, // 39: sonr.identity.module.v1.ListBlockchainRequest.IndexKey.chain_id:type_name -> sonr.identity.module.v1.ListBlockchainRequest.IndexKey.ChainId
	43, // 40: sonr.identity.module.v1.ListBlockchainRequest.IndexKey.name:type_name -> sonr.identity.module.v1.ListBlockchainRequest.IndexKey.Name
	39, // 41: sonr.identity.module.v1.ListBlockchainRequest.RangeQuery.from:type_name -> sonr.identity.module.v1.ListBlockchainRequest.IndexKey
	39, // 42: sonr.identity.module.v1.ListBlockchainRequest.RangeQuery.to:type_name -> sonr.identity.module.v1.ListBlockchainRequest.IndexKey
	46, // 43: sonr.identity.module.v1.ListAccumulatorRequest.IndexKey.index:type_name -> sonr.identity.module.v1.ListAccumulatorRequest.IndexKey.Index
	47, // 44: sonr.identity.module.v1.ListAccumulatorRequest.IndexKey.controller_key:type_name -> sonr.identity.module.v1.ListAccumulatorRequest.IndexKey.ControllerKey
	44, // 45: sonr.identity.module.v1.ListAccumulatorRequest.RangeQuery.from:type_name -> sonr.identity.module.v1.ListAccumulatorRequest.IndexKey
	44, // 46: sonr.identity.module.v1.ListAccumulatorRequest.RangeQuery.to:type_name -> sonr.identity.module.v1.ListAccumulatorRequest.IndexKey
	50, // 47: sonr.identity.module.v1.ListControllerRequest.IndexKey.sequence:type_name -> sonr.identity.module.v1.ListControllerRequest.IndexKey.Sequence
	51, // 48: sonr.identity.module.v1.ListControllerRequest.IndexKey.address:type_name -> sonr.identity.module.v1.ListControllerRequest.IndexKey.Address
	52, // 49: sonr.identity.module.v1.ListControllerRequest.IndexKey.public_key:type_name -> sonr.identity.module.v1.ListControllerRequest.IndexKey.PublicKey
	53, // 50: sonr.identity.module.v1.ListControllerRequest.IndexKey.peer_id:type_name -> sonr.identity.module.v1.ListControllerRequest.IndexKey.PeerId
	54, // 51: sonr.identity.module.v1.ListControllerRequest.IndexKey.ipns:type_name -> sonr.identity.module.v1.ListControllerRequest.IndexKey.Ipns
	48, // 52: sonr.identity.module.v1.ListControllerRequest.RangeQuery.from:type_name -> sonr.identity.module.v1.ListControllerRequest.IndexKey
	48, // 53: sonr.identity.module.v1.ListControllerRequest.RangeQuery.to:type_name -> sonr.identity.module.v1.ListControllerRequest.IndexKey
	0,  // 54: sonr.identity.module.v1.StateQueryService.GetAccount:input_type -> sonr.identity.module.v1.GetAccountRequest
	2,  // 55: sonr.identity.module.v1.StateQueryService.GetAccountByAddress:input_type -> sonr.identity.module.v1.GetAccountByAddressRequest
	4,  // 56: sonr.identity.module.v1.StateQueryService.GetAccountByPublicKey:input_type -> sonr.identity.module.v1.GetAccountByPublicKeyRequest
	6,  // 57: sonr.identity.module.v1.StateQueryService.ListAccount:input_type -> sonr.identity.module.v1.ListAccountRequest
	8,  // 58: sonr.identity.module.v1.StateQueryService.GetBlockchain:input_type -> sonr.identity.module.v1.GetBlockchainRequest
	10, // 59: sonr.identity.module.v1.StateQueryService.GetBlockchainByChainId:input_type -> sonr.identity.module.v1.GetBlockchainByChainIdRequest
	12, // 60: sonr.identity.module.v1.StateQueryService.GetBlockchainByName:input_type -> sonr.identity.module.v1.GetBlockchainByNameRequest
	14, // 61: sonr.identity.module.v1.StateQueryService.ListBlockchain:input_type -> sonr.identity.module.v1.ListBlockchainRequest
	16, // 62: sonr.identity.module.v1.StateQueryService.GetAccumulator:input_type -> sonr.identity.module.v1.GetAccumulatorRequest
	18, // 63: sonr.identity.module.v1.StateQueryService.GetAccumulatorByControllerKey:input_type -> sonr.identity.module.v1.GetAccumulatorByControllerKeyRequest
	20, // 64: sonr.identity.module.v1.StateQueryService.ListAccumulator:input_type -> sonr.identity.module.v1.ListAccumulatorRequest
	22, // 65: sonr.identity.module.v1.StateQueryService.GetController:input_type -> sonr.identity.module.v1.GetControllerRequest
	24, // 66: sonr.identity.module.v1.StateQueryService.GetControllerByAddress:input_type -> sonr.identity.module.v1.GetControllerByAddressRequest
	26, // 67: sonr.identity.module.v1.StateQueryService.GetControllerByPublicKey:input_type -> sonr.identity.module.v1.GetControllerByPublicKeyRequest
	28, // 68: sonr.identity.module.v1.StateQueryService.GetControllerByPeerId:input_type -> sonr.identity.module.v1.GetControllerByPeerIdRequest
	30, // 69: sonr.identity.module.v1.StateQueryService.GetControllerByIpns:input_type -> sonr.identity.module.v1.GetControllerByIpnsRequest
	32, // 70: sonr.identity.module.v1.StateQueryService.ListController:input_type -> sonr.identity.module.v1.ListControllerRequest
	1,  // 71: sonr.identity.module.v1.StateQueryService.GetAccount:output_type -> sonr.identity.module.v1.GetAccountResponse
	3,  // 72: sonr.identity.module.v1.StateQueryService.GetAccountByAddress:output_type -> sonr.identity.module.v1.GetAccountByAddressResponse
	5,  // 73: sonr.identity.module.v1.StateQueryService.GetAccountByPublicKey:output_type -> sonr.identity.module.v1.GetAccountByPublicKeyResponse
	7,  // 74: sonr.identity.module.v1.StateQueryService.ListAccount:output_type -> sonr.identity.module.v1.ListAccountResponse
	9,  // 75: sonr.identity.module.v1.StateQueryService.GetBlockchain:output_type -> sonr.identity.module.v1.GetBlockchainResponse
	11, // 76: sonr.identity.module.v1.StateQueryService.GetBlockchainByChainId:output_type -> sonr.identity.module.v1.GetBlockchainByChainIdResponse
	13, // 77: sonr.identity.module.v1.StateQueryService.GetBlockchainByName:output_type -> sonr.identity.module.v1.GetBlockchainByNameResponse
	15, // 78: sonr.identity.module.v1.StateQueryService.ListBlockchain:output_type -> sonr.identity.module.v1.ListBlockchainResponse
	17, // 79: sonr.identity.module.v1.StateQueryService.GetAccumulator:output_type -> sonr.identity.module.v1.GetAccumulatorResponse
	19, // 80: sonr.identity.module.v1.StateQueryService.GetAccumulatorByControllerKey:output_type -> sonr.identity.module.v1.GetAccumulatorByControllerKeyResponse
	21, // 81: sonr.identity.module.v1.StateQueryService.ListAccumulator:output_type -> sonr.identity.module.v1.ListAccumulatorResponse
	23, // 82: sonr.identity.module.v1.StateQueryService.GetController:output_type -> sonr.identity.module.v1.GetControllerResponse
	25, // 83: sonr.identity.module.v1.StateQueryService.GetControllerByAddress:output_type -> sonr.identity.module.v1.GetControllerByAddressResponse
	27, // 84: sonr.identity.module.v1.StateQueryService.GetControllerByPublicKey:output_type -> sonr.identity.module.v1.GetControllerByPublicKeyResponse
	29, // 85: sonr.identity.module.v1.StateQueryService.GetControllerByPeerId:output_type -> sonr.identity.module.v1.GetControllerByPeerIdResponse
	31, // 86: sonr.identity.module.v1.StateQueryService.GetControllerByIpns:output_type -> sonr.identity.module.v1.GetControllerByIpnsResponse
	33, // 87: sonr.identity.module.v1.StateQueryService.ListController:output_type -> sonr.identity.module.v1.ListControllerResponse
	71, // [71:88] is the sub-list for method output_type
	54, // [54:71] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_sonr_identity_module_v1_state_query_proto_init() }
func file_sonr_identity_module_v1_state_query_proto_init() {
	if File_sonr_identity_module_v1_state_query_proto != nil {
		return
	}
	file_sonr_identity_module_v1_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sonr_identity_module_v1_state_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainByChainIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainByChainIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockchainByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccumulatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccumulatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccumulatorByControllerKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccumulatorByControllerKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccumulatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccumulatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerByAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerByAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerByPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerByPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerByPeerIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerByPeerIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerByIpnsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetControllerByIpnsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_IndexKey_Sequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_IndexKey_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountRequest_IndexKey_PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_IndexKey_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_IndexKey_ChainId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlockchainRequest_IndexKey_Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccumulatorRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccumulatorRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccumulatorRequest_IndexKey_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccumulatorRequest_IndexKey_ControllerKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRequest_IndexKey_Sequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRequest_IndexKey_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRequest_IndexKey_PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRequest_IndexKey_PeerId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_identity_module_v1_state_query_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListControllerRequest_IndexKey_Ipns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ListAccountRequest_PrefixQuery)(nil),
		(*ListAccountRequest_RangeQuery_)(nil),
	}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ListBlockchainRequest_PrefixQuery)(nil),
		(*ListBlockchainRequest_RangeQuery_)(nil),
	}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*ListAccumulatorRequest_PrefixQuery)(nil),
		(*ListAccumulatorRequest_RangeQuery_)(nil),
	}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*ListControllerRequest_PrefixQuery)(nil),
		(*ListControllerRequest_RangeQuery_)(nil),
	}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*ListAccountRequest_IndexKey_Sequence_)(nil),
		(*ListAccountRequest_IndexKey_Address_)(nil),
		(*ListAccountRequest_IndexKey_PublicKey_)(nil),
	}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*ListBlockchainRequest_IndexKey_Index_)(nil),
		(*ListBlockchainRequest_IndexKey_ChainId_)(nil),
		(*ListBlockchainRequest_IndexKey_Name_)(nil),
	}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*ListAccumulatorRequest_IndexKey_Index_)(nil),
		(*ListAccumulatorRequest_IndexKey_ControllerKey_)(nil),
	}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[47].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[48].OneofWrappers = []interface{}{
		(*ListControllerRequest_IndexKey_Sequence_)(nil),
		(*ListControllerRequest_IndexKey_Address_)(nil),
		(*ListControllerRequest_IndexKey_PublicKey_)(nil),
		(*ListControllerRequest_IndexKey_PeerId_)(nil),
		(*ListControllerRequest_IndexKey_Ipns_)(nil),
	}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[51].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[53].OneofWrappers = []interface{}{}
	file_sonr_identity_module_v1_state_query_proto_msgTypes[54].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sonr_identity_module_v1_state_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sonr_identity_module_v1_state_query_proto_goTypes,
		DependencyIndexes: file_sonr_identity_module_v1_state_query_proto_depIdxs,
		MessageInfos:      file_sonr_identity_module_v1_state_query_proto_msgTypes,
	}.Build()
	File_sonr_identity_module_v1_state_query_proto = out.File
	file_sonr_identity_module_v1_state_query_proto_rawDesc = nil
	file_sonr_identity_module_v1_state_query_proto_goTypes = nil
	file_sonr_identity_module_v1_state_query_proto_depIdxs = nil
}
