syntax = "proto3";

package highway.authentication.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/sonrhq/core/types/highway/authentication/v1;authenticationpb";

service AuthenticationService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http).post = "/highway/auth/login/{origin}";
  }
  rpc CurrentUser(google.protobuf.Empty) returns (CurrentUserResponse) {
    option (google.api.http).get = "/highway/auth/current";
  }
  rpc Params(ParamsRequest) returns (ParamsResponse) {
    option (google.api.http).get = "/highway/auth/params/{origin}";
  }
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http).post = "/highway/auth/register/{origin}";
  }
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http).post = "/highway/auth/refresh";
  }
  rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse) {
    option (google.api.http).post = "/highway/auth/verify";
  }
}

message LoginRequest {
  string origin = 1;
  string alias = 2;
  string assertion = 3;
}

message LoginResponse {
  string jwt = 1;
  string address = 2;
  string origin = 3;
}

message CurrentUserResponse {
  string address = 1;
  string alias = 2;
  string origin = 3;
}

message ParamsRequest {
  bool is_login = 1;
  string origin = 2;
  string alias = 3;
}

message ParamsResponse {
  bool is_login = 1;
  string origin = 2;
  string alias = 3;
  string address = 4;
  string challenge = 5;
  string attestation_options = 6;
  string assertion_options = 7;
}

message RegisterRequest {
  string origin = 1;
  string username = 2;
  string attestation = 3;
  string challenge = 4;
}

message RegisterResponse {
  string tx_hash = 1;
  string address = 2;
  string jwt = 3;
  string origin = 4;
}

message RefreshTokenRequest { string jwt = 1; }

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message VerifyTokenRequest { string jwt = 1; }

message VerifyTokenResponse { bool valid = 1; }
