/// This file contains service for the Node RPC Server
syntax = "proto3";

package sonr.node;
import "proto/client/api.proto";
import "proto/common/event.proto";
option go_package = "github.com/sonr-io/core/internal/node";

message Empty {}

// RPC Service with Equivalent Methods of a binded Node
service NodeService {
  // Node Methods
  // Signing Method Request for Data
  rpc Supply(SupplyRequest) returns (SupplyResponse) {}

  // Verification Method Request for Signed Data
  rpc Edit(EditRequest) returns (EditResponse) {}

  // Respond Method to an Invite with Decision
  rpc Share(ShareRequest) returns (ShareResponse) {}

  // Respond Method to an Invite with Decision
  rpc Respond(RespondRequest) returns (RespondResponse) {}

  // Ping Method to find a Peer by SName
  rpc Ping(PingRequest) returns (PingResponse) {}

  // Stat Method returns the Node Stats
  rpc Stat(StatRequest) returns (StatResponse) {}

  // Events Streams
  // Returns a stream of StatusEvents
  rpc OnNodeStatus(Empty) returns (stream sonr.core.StatusEvent) {}

  // Returns a stream of Lobby Refresh Events
  rpc OnLobbyRefresh(Empty) returns (stream sonr.core.RefreshEvent) {}

  // Returns a stream of DecisionEvent's for Accepted Invites
  rpc OnTransferAccepted(Empty) returns (stream sonr.core.DecisionEvent) {}

  // Returns a stream of DecisionEvent's for Rejected Invites
  rpc OnTransferDeclined(Empty) returns (stream sonr.core.DecisionEvent) {}

  // Returns a stream of DecisionEvent's for Invites
  rpc OnTransferInvite(Empty) returns (stream sonr.core.InviteEvent) {}

  // Returns a stream of ProgressEvent's for Sessions
  rpc OnTransferProgress(Empty) returns (stream sonr.core.ProgressEvent) {}

  // Returns a stream of Completed Transfers
  rpc OnTransferComplete(Empty) returns (stream sonr.core.CompleteEvent) {}
}
