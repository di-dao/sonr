syntax = "proto3";

package highway.authentication.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/sonr-io/core/types/highway/authentication/v1;authenticationpb";

service AuthenticationService {
  rpc Params(ParamsRequest) returns (ParamsResponse) {
    option (google.api.http).get = "/highway/auth/params/{origin}";
  }

  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http).post = "/highway/auth/login/{origin}";
  }

  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http).post = "/highway/auth/register/{origin}";
  }

  rpc CurrentUser(google.protobuf.Empty) returns (CurrentUserResponse) {
    option (google.api.http).get = "/highway/auth/current";
  }

  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http).post = "/highway/auth/jwt/refresh/{jwt}";
  }

  rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse) {
    option (google.api.http).post = "/highway/auth/jwt/verify/{jwt}";
  }
}

message LoginRequest {
  string origin = 1;
  string alias = 2;
  string assertion = 3;
}

message LoginResponse {
  bool success = 1;
  string message = 2;
  string jwt = 3;
  string address = 4;
  string origin = 5;
}

message CurrentUserResponse {
  bool success = 1;
  string message = 2;
  string address = 3;
  string alias = 4;
  string origin = 5;
}

message ParamsRequest {
  bool existing = 1;
  string origin = 2;
  string alias = 3;
}

message ParamsResponse {
  bool success = 1;
  string message = 2;
  bool existing = 3;
  string origin = 4;
  string alias = 5;
  string address = 6;
  string challenge = 7;
  string attestation_options = 8;
  string assertion_options = 9;
}

message RegisterRequest {
  string origin = 1;
  string username = 2;
  string attestation = 3;
  string challenge = 4;
}

message RegisterResponse {
  bool success = 1;
  string message = 2;
  string tx_hash = 3;
  string address = 4;
  string jwt = 5;
  string origin = 6;
}

message RefreshTokenRequest { string jwt = 1; }

message RefreshTokenResponse {
  bool success = 1;
  string message = 2;
  string new_jwt = 3;
}

message VerifyTokenRequest { string jwt = 1; }

message VerifyTokenResponse {
  bool success = 1;
  string message = 2;
  bool is_valid = 3;
}
