// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/createAccount/{coinType}": {
            "post": {
                "description": "Creates a new account with a given coin type and name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin Type Name",
                        "name": "coinType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account Info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/currentUser": {
            "get": {
                "description": "Returns the current user's details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Current user's details",
                "responses": {
                    "200": {
                        "description": "JWT Token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing JWT",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "No JWT cookie found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/exportWallet": {
            "get": {
                "description": "Returns the encoded Sonr Wallet structure with an encrypted keyshare.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Export Wallet",
                "responses": {
                    "200": {
                        "description": "Wallet Export Info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/getAccount/{did}": {
            "get": {
                "description": "Returns an account's details given its DID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get an account's details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DID of Account",
                        "name": "did",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account Info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/getBlockHeight": {
            "get": {
                "description": "Returns the current block height.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Current block height",
                "responses": {
                    "200": {
                        "description": "Block Height",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "/getCredentialAssertionParams/{origin}/{alias}": {
            "get": {
                "description": "Returns the credential assertion options to start account login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get credential assertion parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Origin",
                        "name": "origin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Alias",
                        "name": "alias",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/getCredentialAttestationParams/{origin}/{alias}": {
            "get": {
                "description": "Returns the credential creation options to start account registration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get credential attestation parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Origin",
                        "name": "origin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Alias",
                        "name": "alias",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/getEmailAssertionParams": {
            "get": {
                "description": "Returns a JWT for the email controller. After it is confirmed, the user will claim one of their unclaimed Keyshares.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get email assertion parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/getHealth": {
            "get": {
                "description": "Returns the health of the service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Health of the service",
                "responses": {
                    "200": {
                        "description": "Status message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/getValidatorSet": {
            "get": {
                "description": "Returns the current validator set.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Current validator set",
                "responses": {
                    "200": {
                        "description": "Validators",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/listAccounts": {
            "get": {
                "description": "Returns a list of wallet accounts given a coin type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List wallet accounts",
                "responses": {
                    "200": {
                        "description": "Accounts List",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/registerControllerIdentity/{origin}/{alias}": {
            "post": {
                "description": "Registers a credential for a given Unclaimed Wallet.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register controller identity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Origin",
                        "name": "origin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Alias",
                        "name": "alias",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Attestation",
                        "name": "attestation",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Challenge",
                        "name": "challenge",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "412": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/registerEscrowIdentity": {
            "get": {
                "description": "Returns the credential assertion options to start account login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register escrow identity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Amount",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/signInWithCredential/{origin}/{alias}": {
            "post": {
                "description": "Verifies a credential for a given account and returns the JWT Keyshare.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sign in with credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Origin",
                        "name": "origin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Alias",
                        "name": "alias",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Assertion",
                        "name": "assertion",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "441": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "442": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "443": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "444": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "445": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/signInWithEmail": {
            "post": {
                "description": "Registers a DIDDocument for a given email authorized jwt.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sign in with email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT",
                        "name": "jwt",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/signWithAccount/{did}": {
            "post": {
                "description": "Signs a message with an account given its DID. Requires the JWT of their Keyshare.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sign a message with an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DID of Account",
                        "name": "did",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message to Sign",
                        "name": "msg",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Signature Info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/verifyWithAccount/{did}": {
            "post": {
                "description": "Verifies a signature with an account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Verify a signature with an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DID of Account",
                        "name": "did",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message",
                        "name": "msg",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Signature",
                        "name": "sig",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification Result",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
