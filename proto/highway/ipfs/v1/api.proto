syntax = "proto3";

// Package Motor is used for defining a Motor node and its properties.
package sonrhq.highway.ipfs.v1;
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
option go_package = "github.com/sonr-hq/sonr/core/highway/types/v1/ipfs";

// AddRequest is used for adding new content to the IPFS network.
message AddRequest {
    // The content to be added to the IPFS network.
    bytes content = 1;
}

// AddResponse is used for returning the hash of the added content.
message AddResponse {
    // The hash of the added content.
    string hash = 1;
}

// GetRequest is used for retrieving content from the IPFS network.
message GetRequest {
    // The hash of the content to be retrieved.
    string hash = 1;
}

// GetResponse is used for returning the content from the IPFS network.
message GetResponse {
    // The content retrieved from the IPFS network.
    bytes content = 1;
}

// Service is used for defining the IPFS service.
service IPFS {
    // Add is used for adding new content to the IPFS network.
    rpc Add(AddRequest) returns (AddResponse) {
        option (google.api.http).post = "/sonr-io/highway/ipfs/add";
    }

    // Get is used for retrieving content from the IPFS network.
    rpc Get(GetRequest) returns (GetResponse) {
        option (google.api.http).get = "/sonr-io/highway/ipfs/get/{hash}";
    }
}
