// Code generated by protoc-gen-go-cosmos-orm-proto. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: sonr/service/module/v1/state_query.proto

package modulev1

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetCredentialRequest is the StateQuery/GetCredentialRequest request type.
type GetCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sequence specifies the value of the sequence field in the primary key.
	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *GetCredentialRequest) Reset() {
	*x = GetCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialRequest) ProtoMessage() {}

func (x *GetCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialRequest) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetCredentialRequest) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// GetCredentialResponse is the StateQuery/GetCredentialResponse response type.
type GetCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Credential `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCredentialResponse) Reset() {
	*x = GetCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialResponse) ProtoMessage() {}

func (x *GetCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialResponse) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetCredentialResponse) GetValue() *Credential {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetCredentialByOriginHandleRequest is the StateQuery/GetCredentialByOriginHandleRequest request type.
type GetCredentialByOriginHandleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Handle string `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
}

func (x *GetCredentialByOriginHandleRequest) Reset() {
	*x = GetCredentialByOriginHandleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByOriginHandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByOriginHandleRequest) ProtoMessage() {}

func (x *GetCredentialByOriginHandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByOriginHandleRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialByOriginHandleRequest) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetCredentialByOriginHandleRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *GetCredentialByOriginHandleRequest) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

// GetCredentialByOriginHandleResponse is the StateQuery/GetCredentialByOriginHandleResponse response type.
type GetCredentialByOriginHandleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Credential `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCredentialByOriginHandleResponse) Reset() {
	*x = GetCredentialByOriginHandleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByOriginHandleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByOriginHandleResponse) ProtoMessage() {}

func (x *GetCredentialByOriginHandleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByOriginHandleResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialByOriginHandleResponse) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{3}
}

func (x *GetCredentialByOriginHandleResponse) GetValue() *Credential {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetCredentialByIdRequest is the StateQuery/GetCredentialByIdRequest request type.
type GetCredentialByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCredentialByIdRequest) Reset() {
	*x = GetCredentialByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByIdRequest) ProtoMessage() {}

func (x *GetCredentialByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialByIdRequest) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{4}
}

func (x *GetCredentialByIdRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

// GetCredentialByIdResponse is the StateQuery/GetCredentialByIdResponse response type.
type GetCredentialByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Credential `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCredentialByIdResponse) Reset() {
	*x = GetCredentialByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByIdResponse) ProtoMessage() {}

func (x *GetCredentialByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByIdResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialByIdResponse) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{5}
}

func (x *GetCredentialByIdResponse) GetValue() *Credential {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetCredentialByOriginAuthorityRequest is the StateQuery/GetCredentialByOriginAuthorityRequest request type.
type GetCredentialByOriginAuthorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin    string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (x *GetCredentialByOriginAuthorityRequest) Reset() {
	*x = GetCredentialByOriginAuthorityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByOriginAuthorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByOriginAuthorityRequest) ProtoMessage() {}

func (x *GetCredentialByOriginAuthorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByOriginAuthorityRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialByOriginAuthorityRequest) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{6}
}

func (x *GetCredentialByOriginAuthorityRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *GetCredentialByOriginAuthorityRequest) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

// GetCredentialByOriginAuthorityResponse is the StateQuery/GetCredentialByOriginAuthorityResponse response type.
type GetCredentialByOriginAuthorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Credential `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetCredentialByOriginAuthorityResponse) Reset() {
	*x = GetCredentialByOriginAuthorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialByOriginAuthorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialByOriginAuthorityResponse) ProtoMessage() {}

func (x *GetCredentialByOriginAuthorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialByOriginAuthorityResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialByOriginAuthorityResponse) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{7}
}

func (x *GetCredentialByOriginAuthorityResponse) GetValue() *Credential {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListCredentialRequest is the StateQuery/ListCredentialRequest request type.
type ListCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListCredentialRequest_PrefixQuery
	//	*ListCredentialRequest_RangeQuery_
	Query isListCredentialRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCredentialRequest) Reset() {
	*x = ListCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest) ProtoMessage() {}

func (x *ListCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{8}
}

func (m *ListCredentialRequest) GetQuery() isListCredentialRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListCredentialRequest) GetPrefixQuery() *ListCredentialRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListCredentialRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListCredentialRequest) GetRangeQuery() *ListCredentialRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListCredentialRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListCredentialRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListCredentialRequest_Query interface {
	isListCredentialRequest_Query()
}

type ListCredentialRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListCredentialRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListCredentialRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListCredentialRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListCredentialRequest_PrefixQuery) isListCredentialRequest_Query() {}

func (*ListCredentialRequest_RangeQuery_) isListCredentialRequest_Query() {}

// ListCredentialResponse is the StateQuery/ListCredentialResponse response type.
type ListCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Credential `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCredentialResponse) Reset() {
	*x = ListCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialResponse) ProtoMessage() {}

func (x *ListCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialResponse.ProtoReflect.Descriptor instead.
func (*ListCredentialResponse) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{9}
}

func (x *ListCredentialResponse) GetValues() []*Credential {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListCredentialResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// GetProfileRequest is the StateQuery/GetProfileRequest request type.
type GetProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index specifies the value of the index field in the primary key.
	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetProfileRequest) Reset() {
	*x = GetProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileRequest) ProtoMessage() {}

func (x *GetProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileRequest.ProtoReflect.Descriptor instead.
func (*GetProfileRequest) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{10}
}

func (x *GetProfileRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

// GetProfileResponse is the StateQuery/GetProfileResponse response type.
type GetProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value is the response value.
	Value *Profile `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetProfileResponse) Reset() {
	*x = GetProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileResponse) ProtoMessage() {}

func (x *GetProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileResponse.ProtoReflect.Descriptor instead.
func (*GetProfileResponse) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{11}
}

func (x *GetProfileResponse) GetValue() *Profile {
	if x != nil {
		return x.Value
	}
	return nil
}

// GetProfileByOriginAuthorityRequest is the StateQuery/GetProfileByOriginAuthorityRequest request type.
type GetProfileByOriginAuthorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin    string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (x *GetProfileByOriginAuthorityRequest) Reset() {
	*x = GetProfileByOriginAuthorityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileByOriginAuthorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileByOriginAuthorityRequest) ProtoMessage() {}

func (x *GetProfileByOriginAuthorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileByOriginAuthorityRequest.ProtoReflect.Descriptor instead.
func (*GetProfileByOriginAuthorityRequest) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{12}
}

func (x *GetProfileByOriginAuthorityRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *GetProfileByOriginAuthorityRequest) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

// GetProfileByOriginAuthorityResponse is the StateQuery/GetProfileByOriginAuthorityResponse response type.
type GetProfileByOriginAuthorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Profile `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetProfileByOriginAuthorityResponse) Reset() {
	*x = GetProfileByOriginAuthorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileByOriginAuthorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileByOriginAuthorityResponse) ProtoMessage() {}

func (x *GetProfileByOriginAuthorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileByOriginAuthorityResponse.ProtoReflect.Descriptor instead.
func (*GetProfileByOriginAuthorityResponse) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{13}
}

func (x *GetProfileByOriginAuthorityResponse) GetValue() *Profile {
	if x != nil {
		return x.Value
	}
	return nil
}

// ListProfileRequest is the StateQuery/ListProfileRequest request type.
type ListProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query specifies the type of query - either a prefix or range query.
	//
	// Types that are assignable to Query:
	//
	//	*ListProfileRequest_PrefixQuery
	//	*ListProfileRequest_RangeQuery_
	Query isListProfileRequest_Query `protobuf_oneof:"query"`
	// pagination specifies optional pagination parameters.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListProfileRequest) Reset() {
	*x = ListProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfileRequest) ProtoMessage() {}

func (x *ListProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfileRequest.ProtoReflect.Descriptor instead.
func (*ListProfileRequest) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14}
}

func (m *ListProfileRequest) GetQuery() isListProfileRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListProfileRequest) GetPrefixQuery() *ListProfileRequest_IndexKey {
	if x, ok := x.GetQuery().(*ListProfileRequest_PrefixQuery); ok {
		return x.PrefixQuery
	}
	return nil
}

func (x *ListProfileRequest) GetRangeQuery() *ListProfileRequest_RangeQuery {
	if x, ok := x.GetQuery().(*ListProfileRequest_RangeQuery_); ok {
		return x.RangeQuery
	}
	return nil
}

func (x *ListProfileRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListProfileRequest_Query interface {
	isListProfileRequest_Query()
}

type ListProfileRequest_PrefixQuery struct {
	// prefix_query specifies the index key value to use for the prefix query.
	PrefixQuery *ListProfileRequest_IndexKey `protobuf:"bytes,1,opt,name=prefix_query,json=prefixQuery,proto3,oneof"`
}

type ListProfileRequest_RangeQuery_ struct {
	// range_query specifies the index key from/to values to use for the range query.
	RangeQuery *ListProfileRequest_RangeQuery `protobuf:"bytes,2,opt,name=range_query,json=rangeQuery,proto3,oneof"`
}

func (*ListProfileRequest_PrefixQuery) isListProfileRequest_Query() {}

func (*ListProfileRequest_RangeQuery_) isListProfileRequest_Query() {}

// ListProfileResponse is the StateQuery/ListProfileResponse response type.
type ListProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// values are the results of the query.
	Values []*Profile `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	// pagination is the pagination response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListProfileResponse) Reset() {
	*x = ListProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfileResponse) ProtoMessage() {}

func (x *ListProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfileResponse.ProtoReflect.Descriptor instead.
func (*ListProfileResponse) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{15}
}

func (x *ListProfileResponse) GetValues() []*Profile {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ListProfileResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListCredentialRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListCredentialRequest_IndexKey_Sequence_
	//	*ListCredentialRequest_IndexKey_Handle_
	//	*ListCredentialRequest_IndexKey_OriginHandle_
	//	*ListCredentialRequest_IndexKey_Id_
	//	*ListCredentialRequest_IndexKey_OriginAuthority_
	Key isListCredentialRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListCredentialRequest_IndexKey) Reset() {
	*x = ListCredentialRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{8, 0}
}

func (m *ListCredentialRequest_IndexKey) GetKey() isListCredentialRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetSequence() *ListCredentialRequest_IndexKey_Sequence {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_Sequence_); ok {
		return x.Sequence
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetHandle() *ListCredentialRequest_IndexKey_Handle {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_Handle_); ok {
		return x.Handle
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetOriginHandle() *ListCredentialRequest_IndexKey_OriginHandle {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_OriginHandle_); ok {
		return x.OriginHandle
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetId() *ListCredentialRequest_IndexKey_Id {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_Id_); ok {
		return x.Id
	}
	return nil
}

func (x *ListCredentialRequest_IndexKey) GetOriginAuthority() *ListCredentialRequest_IndexKey_OriginAuthority {
	if x, ok := x.GetKey().(*ListCredentialRequest_IndexKey_OriginAuthority_); ok {
		return x.OriginAuthority
	}
	return nil
}

type isListCredentialRequest_IndexKey_Key interface {
	isListCredentialRequest_IndexKey_Key()
}

type ListCredentialRequest_IndexKey_Sequence_ struct {
	// sequence specifies the value of the Sequence index key to use in the query.
	Sequence *ListCredentialRequest_IndexKey_Sequence `protobuf:"bytes,1,opt,name=sequence,proto3,oneof"`
}

type ListCredentialRequest_IndexKey_Handle_ struct {
	// handle specifies the value of the Handle index key to use in the query.
	Handle *ListCredentialRequest_IndexKey_Handle `protobuf:"bytes,2,opt,name=handle,proto3,oneof"`
}

type ListCredentialRequest_IndexKey_OriginHandle_ struct {
	// origin_handle specifies the value of the OriginHandle index key to use in the query.
	OriginHandle *ListCredentialRequest_IndexKey_OriginHandle `protobuf:"bytes,3,opt,name=origin_handle,json=originHandle,proto3,oneof"`
}

type ListCredentialRequest_IndexKey_Id_ struct {
	// id specifies the value of the Id index key to use in the query.
	Id *ListCredentialRequest_IndexKey_Id `protobuf:"bytes,4,opt,name=id,proto3,oneof"`
}

type ListCredentialRequest_IndexKey_OriginAuthority_ struct {
	// origin_authority specifies the value of the OriginAuthority index key to use in the query.
	OriginAuthority *ListCredentialRequest_IndexKey_OriginAuthority `protobuf:"bytes,5,opt,name=origin_authority,json=originAuthority,proto3,oneof"`
}

func (*ListCredentialRequest_IndexKey_Sequence_) isListCredentialRequest_IndexKey_Key() {}

func (*ListCredentialRequest_IndexKey_Handle_) isListCredentialRequest_IndexKey_Key() {}

func (*ListCredentialRequest_IndexKey_OriginHandle_) isListCredentialRequest_IndexKey_Key() {}

func (*ListCredentialRequest_IndexKey_Id_) isListCredentialRequest_IndexKey_Key() {}

func (*ListCredentialRequest_IndexKey_OriginAuthority_) isListCredentialRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListCredentialRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListCredentialRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListCredentialRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListCredentialRequest_RangeQuery) Reset() {
	*x = ListCredentialRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_RangeQuery) ProtoMessage() {}

func (x *ListCredentialRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{8, 1}
}

func (x *ListCredentialRequest_RangeQuery) GetFrom() *ListCredentialRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListCredentialRequest_RangeQuery) GetTo() *ListCredentialRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListCredentialRequest_IndexKey_Sequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sequence is the value of the sequence field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Sequence *uint64 `protobuf:"varint,1,opt,name=sequence,proto3,oneof" json:"sequence,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_Sequence) Reset() {
	*x = ListCredentialRequest_IndexKey_Sequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_Sequence) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_Sequence.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_Sequence) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *ListCredentialRequest_IndexKey_Sequence) GetSequence() uint64 {
	if x != nil && x.Sequence != nil {
		return *x.Sequence
	}
	return 0
}

type ListCredentialRequest_IndexKey_Handle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// handle is the value of the handle field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Handle *string `protobuf:"bytes,1,opt,name=handle,proto3,oneof" json:"handle,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_Handle) Reset() {
	*x = ListCredentialRequest_IndexKey_Handle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_Handle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_Handle) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_Handle) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_Handle.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_Handle) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{8, 0, 1}
}

func (x *ListCredentialRequest_IndexKey_Handle) GetHandle() string {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return ""
}

type ListCredentialRequest_IndexKey_OriginHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// origin is the value of the origin field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Origin *string `protobuf:"bytes,1,opt,name=origin,proto3,oneof" json:"origin,omitempty"`
	// handle is the value of the handle field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Handle *string `protobuf:"bytes,2,opt,name=handle,proto3,oneof" json:"handle,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_OriginHandle) Reset() {
	*x = ListCredentialRequest_IndexKey_OriginHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_OriginHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_OriginHandle) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_OriginHandle) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_OriginHandle.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_OriginHandle) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{8, 0, 2}
}

func (x *ListCredentialRequest_IndexKey_OriginHandle) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *ListCredentialRequest_IndexKey_OriginHandle) GetHandle() string {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return ""
}

type ListCredentialRequest_IndexKey_Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the value of the id field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_Id) Reset() {
	*x = ListCredentialRequest_IndexKey_Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_Id) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_Id) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_Id.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_Id) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{8, 0, 3}
}

func (x *ListCredentialRequest_IndexKey_Id) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type ListCredentialRequest_IndexKey_OriginAuthority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// origin is the value of the origin field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Origin *string `protobuf:"bytes,1,opt,name=origin,proto3,oneof" json:"origin,omitempty"`
	// authority is the value of the authority field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Authority *string `protobuf:"bytes,2,opt,name=authority,proto3,oneof" json:"authority,omitempty"`
}

func (x *ListCredentialRequest_IndexKey_OriginAuthority) Reset() {
	*x = ListCredentialRequest_IndexKey_OriginAuthority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCredentialRequest_IndexKey_OriginAuthority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCredentialRequest_IndexKey_OriginAuthority) ProtoMessage() {}

func (x *ListCredentialRequest_IndexKey_OriginAuthority) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCredentialRequest_IndexKey_OriginAuthority.ProtoReflect.Descriptor instead.
func (*ListCredentialRequest_IndexKey_OriginAuthority) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{8, 0, 4}
}

func (x *ListCredentialRequest_IndexKey_OriginAuthority) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *ListCredentialRequest_IndexKey_OriginAuthority) GetAuthority() string {
	if x != nil && x.Authority != nil {
		return *x.Authority
	}
	return ""
}

// IndexKey specifies the value of an index key to use in prefix and range queries.
type ListProfileRequest_IndexKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key specifies the index key value.
	//
	// Types that are assignable to Key:
	//
	//	*ListProfileRequest_IndexKey_Index_
	//	*ListProfileRequest_IndexKey_OriginAuthority_
	Key isListProfileRequest_IndexKey_Key `protobuf_oneof:"key"`
}

func (x *ListProfileRequest_IndexKey) Reset() {
	*x = ListProfileRequest_IndexKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfileRequest_IndexKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfileRequest_IndexKey) ProtoMessage() {}

func (x *ListProfileRequest_IndexKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfileRequest_IndexKey.ProtoReflect.Descriptor instead.
func (*ListProfileRequest_IndexKey) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0}
}

func (m *ListProfileRequest_IndexKey) GetKey() isListProfileRequest_IndexKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *ListProfileRequest_IndexKey) GetIndex() *ListProfileRequest_IndexKey_Index {
	if x, ok := x.GetKey().(*ListProfileRequest_IndexKey_Index_); ok {
		return x.Index
	}
	return nil
}

func (x *ListProfileRequest_IndexKey) GetOriginAuthority() *ListProfileRequest_IndexKey_OriginAuthority {
	if x, ok := x.GetKey().(*ListProfileRequest_IndexKey_OriginAuthority_); ok {
		return x.OriginAuthority
	}
	return nil
}

type isListProfileRequest_IndexKey_Key interface {
	isListProfileRequest_IndexKey_Key()
}

type ListProfileRequest_IndexKey_Index_ struct {
	// index specifies the value of the Index index key to use in the query.
	Index *ListProfileRequest_IndexKey_Index `protobuf:"bytes,1,opt,name=index,proto3,oneof"`
}

type ListProfileRequest_IndexKey_OriginAuthority_ struct {
	// origin_authority specifies the value of the OriginAuthority index key to use in the query.
	OriginAuthority *ListProfileRequest_IndexKey_OriginAuthority `protobuf:"bytes,2,opt,name=origin_authority,json=originAuthority,proto3,oneof"`
}

func (*ListProfileRequest_IndexKey_Index_) isListProfileRequest_IndexKey_Key() {}

func (*ListProfileRequest_IndexKey_OriginAuthority_) isListProfileRequest_IndexKey_Key() {}

// RangeQuery specifies the from/to index keys for a range query.
type ListProfileRequest_RangeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// from is the index key to use for the start of the range query.
	// To query from the start of an index, specify an index key for that index with empty values.
	From *ListProfileRequest_IndexKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to is the index key to use for the end of the range query.
	// The index key type MUST be the same as the index key type used for from.
	// To query from to the end of an index it can be omitted.
	To *ListProfileRequest_IndexKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListProfileRequest_RangeQuery) Reset() {
	*x = ListProfileRequest_RangeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfileRequest_RangeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfileRequest_RangeQuery) ProtoMessage() {}

func (x *ListProfileRequest_RangeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfileRequest_RangeQuery.ProtoReflect.Descriptor instead.
func (*ListProfileRequest_RangeQuery) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 1}
}

func (x *ListProfileRequest_RangeQuery) GetFrom() *ListProfileRequest_IndexKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListProfileRequest_RangeQuery) GetTo() *ListProfileRequest_IndexKey {
	if x != nil {
		return x.To
	}
	return nil
}

type ListProfileRequest_IndexKey_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index is the value of the index field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Index *uint64 `protobuf:"varint,1,opt,name=index,proto3,oneof" json:"index,omitempty"`
}

func (x *ListProfileRequest_IndexKey_Index) Reset() {
	*x = ListProfileRequest_IndexKey_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfileRequest_IndexKey_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfileRequest_IndexKey_Index) ProtoMessage() {}

func (x *ListProfileRequest_IndexKey_Index) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfileRequest_IndexKey_Index.ProtoReflect.Descriptor instead.
func (*ListProfileRequest_IndexKey_Index) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *ListProfileRequest_IndexKey_Index) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type ListProfileRequest_IndexKey_OriginAuthority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// origin is the value of the origin field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Origin *string `protobuf:"bytes,1,opt,name=origin,proto3,oneof" json:"origin,omitempty"`
	// authority is the value of the authority field in the index.
	// It can be omitted to query for all valid values of that field in this segment of the index.
	Authority *string `protobuf:"bytes,2,opt,name=authority,proto3,oneof" json:"authority,omitempty"`
}

func (x *ListProfileRequest_IndexKey_OriginAuthority) Reset() {
	*x = ListProfileRequest_IndexKey_OriginAuthority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfileRequest_IndexKey_OriginAuthority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfileRequest_IndexKey_OriginAuthority) ProtoMessage() {}

func (x *ListProfileRequest_IndexKey_OriginAuthority) ProtoReflect() protoreflect.Message {
	mi := &file_sonr_service_module_v1_state_query_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfileRequest_IndexKey_OriginAuthority.ProtoReflect.Descriptor instead.
func (*ListProfileRequest_IndexKey_OriginAuthority) Descriptor() ([]byte, []int) {
	return file_sonr_service_module_v1_state_query_proto_rawDescGZIP(), []int{14, 0, 1}
}

func (x *ListProfileRequest_IndexKey_OriginAuthority) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *ListProfileRequest_IndexKey_OriginAuthority) GetAuthority() string {
	if x != nil && x.Authority != nil {
		return *x.Authority
	}
	return ""
}

var File_sonr_service_module_v1_state_query_proto protoreflect.FileDescriptor

var file_sonr_service_module_v1_state_query_proto_rawDesc = []byte{
	0x0a, 0x28, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22,
	0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x32, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x51, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x54, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x5f, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x5d, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x22, 0x62, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x99, 0x0a, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5b, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48, 0x00,
	0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x5b, 0x0a,
	0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0xd1, 0x06, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x12,
	0x5d, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x57,
	0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x73, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b,
	0x65, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x1a, 0x38, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x1a,
	0x30, 0x0a, 0x06, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x1a, 0x5e, 0x0a, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x1a, 0x20, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x69, 0x64, 0x1a, 0x6a, 0x0a, 0x0f, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x42,
	0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0xa0, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x46, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x9d, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4b, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x22, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x5c, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa9, 0x06, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x0c, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xf0, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4b, 0x65, 0x79, 0x12, 0x51, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x70, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x1a, 0x2c, 0x0a, 0x05, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x6a, 0x0a, 0x0f, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x9a, 0x01, 0x0a, 0x0a, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x43, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x22, 0x97, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x9d, 0x08, 0x0a, 0x11, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x2c, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x98, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x3a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x30, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3d, 0x2e, 0x73, 0x6f, 0x6e,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x73, 0x6f, 0x6e, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2d, 0x2e,
	0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x73,
	0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3b, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x2a, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x6f,
	0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xef, 0x01, 0x0a, 0x1a, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x6f, 0x6e, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x68, 0x71, 0x2f,
	0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x78, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x53, 0x4d, 0xaa, 0x02, 0x16, 0x53, 0x6f, 0x6e, 0x72,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x16, 0x53, 0x6f, 0x6e, 0x72, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x22, 0x53, 0x6f,
	0x6e, 0x72, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x19, 0x53, 0x6f, 0x6e, 0x72, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sonr_service_module_v1_state_query_proto_rawDescOnce sync.Once
	file_sonr_service_module_v1_state_query_proto_rawDescData = file_sonr_service_module_v1_state_query_proto_rawDesc
)

func file_sonr_service_module_v1_state_query_proto_rawDescGZIP() []byte {
	file_sonr_service_module_v1_state_query_proto_rawDescOnce.Do(func() {
		file_sonr_service_module_v1_state_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_sonr_service_module_v1_state_query_proto_rawDescData)
	})
	return file_sonr_service_module_v1_state_query_proto_rawDescData
}

var file_sonr_service_module_v1_state_query_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_sonr_service_module_v1_state_query_proto_goTypes = []interface{}{
	(*GetCredentialRequest)(nil),                           // 0: sonr.service.module.v1.GetCredentialRequest
	(*GetCredentialResponse)(nil),                          // 1: sonr.service.module.v1.GetCredentialResponse
	(*GetCredentialByOriginHandleRequest)(nil),             // 2: sonr.service.module.v1.GetCredentialByOriginHandleRequest
	(*GetCredentialByOriginHandleResponse)(nil),            // 3: sonr.service.module.v1.GetCredentialByOriginHandleResponse
	(*GetCredentialByIdRequest)(nil),                       // 4: sonr.service.module.v1.GetCredentialByIdRequest
	(*GetCredentialByIdResponse)(nil),                      // 5: sonr.service.module.v1.GetCredentialByIdResponse
	(*GetCredentialByOriginAuthorityRequest)(nil),          // 6: sonr.service.module.v1.GetCredentialByOriginAuthorityRequest
	(*GetCredentialByOriginAuthorityResponse)(nil),         // 7: sonr.service.module.v1.GetCredentialByOriginAuthorityResponse
	(*ListCredentialRequest)(nil),                          // 8: sonr.service.module.v1.ListCredentialRequest
	(*ListCredentialResponse)(nil),                         // 9: sonr.service.module.v1.ListCredentialResponse
	(*GetProfileRequest)(nil),                              // 10: sonr.service.module.v1.GetProfileRequest
	(*GetProfileResponse)(nil),                             // 11: sonr.service.module.v1.GetProfileResponse
	(*GetProfileByOriginAuthorityRequest)(nil),             // 12: sonr.service.module.v1.GetProfileByOriginAuthorityRequest
	(*GetProfileByOriginAuthorityResponse)(nil),            // 13: sonr.service.module.v1.GetProfileByOriginAuthorityResponse
	(*ListProfileRequest)(nil),                             // 14: sonr.service.module.v1.ListProfileRequest
	(*ListProfileResponse)(nil),                            // 15: sonr.service.module.v1.ListProfileResponse
	(*ListCredentialRequest_IndexKey)(nil),                 // 16: sonr.service.module.v1.ListCredentialRequest.IndexKey
	(*ListCredentialRequest_RangeQuery)(nil),               // 17: sonr.service.module.v1.ListCredentialRequest.RangeQuery
	(*ListCredentialRequest_IndexKey_Sequence)(nil),        // 18: sonr.service.module.v1.ListCredentialRequest.IndexKey.Sequence
	(*ListCredentialRequest_IndexKey_Handle)(nil),          // 19: sonr.service.module.v1.ListCredentialRequest.IndexKey.Handle
	(*ListCredentialRequest_IndexKey_OriginHandle)(nil),    // 20: sonr.service.module.v1.ListCredentialRequest.IndexKey.OriginHandle
	(*ListCredentialRequest_IndexKey_Id)(nil),              // 21: sonr.service.module.v1.ListCredentialRequest.IndexKey.Id
	(*ListCredentialRequest_IndexKey_OriginAuthority)(nil), // 22: sonr.service.module.v1.ListCredentialRequest.IndexKey.OriginAuthority
	(*ListProfileRequest_IndexKey)(nil),                    // 23: sonr.service.module.v1.ListProfileRequest.IndexKey
	(*ListProfileRequest_RangeQuery)(nil),                  // 24: sonr.service.module.v1.ListProfileRequest.RangeQuery
	(*ListProfileRequest_IndexKey_Index)(nil),              // 25: sonr.service.module.v1.ListProfileRequest.IndexKey.Index
	(*ListProfileRequest_IndexKey_OriginAuthority)(nil),    // 26: sonr.service.module.v1.ListProfileRequest.IndexKey.OriginAuthority
	(*Credential)(nil),                                     // 27: sonr.service.module.v1.Credential
	(*v1beta1.PageRequest)(nil),                            // 28: cosmos.base.query.v1beta1.PageRequest
	(*v1beta1.PageResponse)(nil),                           // 29: cosmos.base.query.v1beta1.PageResponse
	(*Profile)(nil),                                        // 30: sonr.service.module.v1.Profile
}
var file_sonr_service_module_v1_state_query_proto_depIdxs = []int32{
	27, // 0: sonr.service.module.v1.GetCredentialResponse.value:type_name -> sonr.service.module.v1.Credential
	27, // 1: sonr.service.module.v1.GetCredentialByOriginHandleResponse.value:type_name -> sonr.service.module.v1.Credential
	27, // 2: sonr.service.module.v1.GetCredentialByIdResponse.value:type_name -> sonr.service.module.v1.Credential
	27, // 3: sonr.service.module.v1.GetCredentialByOriginAuthorityResponse.value:type_name -> sonr.service.module.v1.Credential
	16, // 4: sonr.service.module.v1.ListCredentialRequest.prefix_query:type_name -> sonr.service.module.v1.ListCredentialRequest.IndexKey
	17, // 5: sonr.service.module.v1.ListCredentialRequest.range_query:type_name -> sonr.service.module.v1.ListCredentialRequest.RangeQuery
	28, // 6: sonr.service.module.v1.ListCredentialRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	27, // 7: sonr.service.module.v1.ListCredentialResponse.values:type_name -> sonr.service.module.v1.Credential
	29, // 8: sonr.service.module.v1.ListCredentialResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	30, // 9: sonr.service.module.v1.GetProfileResponse.value:type_name -> sonr.service.module.v1.Profile
	30, // 10: sonr.service.module.v1.GetProfileByOriginAuthorityResponse.value:type_name -> sonr.service.module.v1.Profile
	23, // 11: sonr.service.module.v1.ListProfileRequest.prefix_query:type_name -> sonr.service.module.v1.ListProfileRequest.IndexKey
	24, // 12: sonr.service.module.v1.ListProfileRequest.range_query:type_name -> sonr.service.module.v1.ListProfileRequest.RangeQuery
	28, // 13: sonr.service.module.v1.ListProfileRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	30, // 14: sonr.service.module.v1.ListProfileResponse.values:type_name -> sonr.service.module.v1.Profile
	29, // 15: sonr.service.module.v1.ListProfileResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	18, // 16: sonr.service.module.v1.ListCredentialRequest.IndexKey.sequence:type_name -> sonr.service.module.v1.ListCredentialRequest.IndexKey.Sequence
	19, // 17: sonr.service.module.v1.ListCredentialRequest.IndexKey.handle:type_name -> sonr.service.module.v1.ListCredentialRequest.IndexKey.Handle
	20, // 18: sonr.service.module.v1.ListCredentialRequest.IndexKey.origin_handle:type_name -> sonr.service.module.v1.ListCredentialRequest.IndexKey.OriginHandle
	21, // 19: sonr.service.module.v1.ListCredentialRequest.IndexKey.id:type_name -> sonr.service.module.v1.ListCredentialRequest.IndexKey.Id
	22, // 20: sonr.service.module.v1.ListCredentialRequest.IndexKey.origin_authority:type_name -> sonr.service.module.v1.ListCredentialRequest.IndexKey.OriginAuthority
	16, // 21: sonr.service.module.v1.ListCredentialRequest.RangeQuery.from:type_name -> sonr.service.module.v1.ListCredentialRequest.IndexKey
	16, // 22: sonr.service.module.v1.ListCredentialRequest.RangeQuery.to:type_name -> sonr.service.module.v1.ListCredentialRequest.IndexKey
	25, // 23: sonr.service.module.v1.ListProfileRequest.IndexKey.index:type_name -> sonr.service.module.v1.ListProfileRequest.IndexKey.Index
	26, // 24: sonr.service.module.v1.ListProfileRequest.IndexKey.origin_authority:type_name -> sonr.service.module.v1.ListProfileRequest.IndexKey.OriginAuthority
	23, // 25: sonr.service.module.v1.ListProfileRequest.RangeQuery.from:type_name -> sonr.service.module.v1.ListProfileRequest.IndexKey
	23, // 26: sonr.service.module.v1.ListProfileRequest.RangeQuery.to:type_name -> sonr.service.module.v1.ListProfileRequest.IndexKey
	0,  // 27: sonr.service.module.v1.StateQueryService.GetCredential:input_type -> sonr.service.module.v1.GetCredentialRequest
	2,  // 28: sonr.service.module.v1.StateQueryService.GetCredentialByOriginHandle:input_type -> sonr.service.module.v1.GetCredentialByOriginHandleRequest
	4,  // 29: sonr.service.module.v1.StateQueryService.GetCredentialById:input_type -> sonr.service.module.v1.GetCredentialByIdRequest
	6,  // 30: sonr.service.module.v1.StateQueryService.GetCredentialByOriginAuthority:input_type -> sonr.service.module.v1.GetCredentialByOriginAuthorityRequest
	8,  // 31: sonr.service.module.v1.StateQueryService.ListCredential:input_type -> sonr.service.module.v1.ListCredentialRequest
	10, // 32: sonr.service.module.v1.StateQueryService.GetProfile:input_type -> sonr.service.module.v1.GetProfileRequest
	12, // 33: sonr.service.module.v1.StateQueryService.GetProfileByOriginAuthority:input_type -> sonr.service.module.v1.GetProfileByOriginAuthorityRequest
	14, // 34: sonr.service.module.v1.StateQueryService.ListProfile:input_type -> sonr.service.module.v1.ListProfileRequest
	1,  // 35: sonr.service.module.v1.StateQueryService.GetCredential:output_type -> sonr.service.module.v1.GetCredentialResponse
	3,  // 36: sonr.service.module.v1.StateQueryService.GetCredentialByOriginHandle:output_type -> sonr.service.module.v1.GetCredentialByOriginHandleResponse
	5,  // 37: sonr.service.module.v1.StateQueryService.GetCredentialById:output_type -> sonr.service.module.v1.GetCredentialByIdResponse
	7,  // 38: sonr.service.module.v1.StateQueryService.GetCredentialByOriginAuthority:output_type -> sonr.service.module.v1.GetCredentialByOriginAuthorityResponse
	9,  // 39: sonr.service.module.v1.StateQueryService.ListCredential:output_type -> sonr.service.module.v1.ListCredentialResponse
	11, // 40: sonr.service.module.v1.StateQueryService.GetProfile:output_type -> sonr.service.module.v1.GetProfileResponse
	13, // 41: sonr.service.module.v1.StateQueryService.GetProfileByOriginAuthority:output_type -> sonr.service.module.v1.GetProfileByOriginAuthorityResponse
	15, // 42: sonr.service.module.v1.StateQueryService.ListProfile:output_type -> sonr.service.module.v1.ListProfileResponse
	35, // [35:43] is the sub-list for method output_type
	27, // [27:35] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_sonr_service_module_v1_state_query_proto_init() }
func file_sonr_service_module_v1_state_query_proto_init() {
	if File_sonr_service_module_v1_state_query_proto != nil {
		return
	}
	file_sonr_service_module_v1_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sonr_service_module_v1_state_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByOriginHandleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByOriginHandleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByOriginAuthorityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialByOriginAuthorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileByOriginAuthorityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileByOriginAuthorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_Sequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_Handle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_OriginHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCredentialRequest_IndexKey_OriginAuthority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfileRequest_IndexKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfileRequest_RangeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfileRequest_IndexKey_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonr_service_module_v1_state_query_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfileRequest_IndexKey_OriginAuthority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sonr_service_module_v1_state_query_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ListCredentialRequest_PrefixQuery)(nil),
		(*ListCredentialRequest_RangeQuery_)(nil),
	}
	file_sonr_service_module_v1_state_query_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ListProfileRequest_PrefixQuery)(nil),
		(*ListProfileRequest_RangeQuery_)(nil),
	}
	file_sonr_service_module_v1_state_query_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ListCredentialRequest_IndexKey_Sequence_)(nil),
		(*ListCredentialRequest_IndexKey_Handle_)(nil),
		(*ListCredentialRequest_IndexKey_OriginHandle_)(nil),
		(*ListCredentialRequest_IndexKey_Id_)(nil),
		(*ListCredentialRequest_IndexKey_OriginAuthority_)(nil),
	}
	file_sonr_service_module_v1_state_query_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_sonr_service_module_v1_state_query_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_sonr_service_module_v1_state_query_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_sonr_service_module_v1_state_query_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_sonr_service_module_v1_state_query_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_sonr_service_module_v1_state_query_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*ListProfileRequest_IndexKey_Index_)(nil),
		(*ListProfileRequest_IndexKey_OriginAuthority_)(nil),
	}
	file_sonr_service_module_v1_state_query_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_sonr_service_module_v1_state_query_proto_msgTypes[26].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sonr_service_module_v1_state_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sonr_service_module_v1_state_query_proto_goTypes,
		DependencyIndexes: file_sonr_service_module_v1_state_query_proto_depIdxs,
		MessageInfos:      file_sonr_service_module_v1_state_query_proto_msgTypes,
	}.Build()
	File_sonr_service_module_v1_state_query_proto = out.File
	file_sonr_service_module_v1_state_query_proto_rawDesc = nil
	file_sonr_service_module_v1_state_query_proto_goTypes = nil
	file_sonr_service_module_v1_state_query_proto_depIdxs = nil
}
