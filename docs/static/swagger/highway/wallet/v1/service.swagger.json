{
  "swagger": "2.0",
  "info": {
    "title": "highway/wallet/v1/service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "WalletService"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/highway/wallet/accounts/create": {
      "post": {
        "summary": "CreateAccount creates a new account.",
        "operationId": "CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "jwt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "coinType",
            "description": " - CoinType_BITCOIN: Bitcoins coin type is 0\n - CoinType_TESTNET: Testnet coin type is 1\n - CoinType_LITECOIN: Litecoin coin type is 2\n - CoinType_DOGE: Dogecoin coin type is 3\n - CoinType_ETHEREUM: Ethereum coin type is 60\n - CoinType_SONR: Sonr coin type is 703\n - CoinType_COSMOS: Cosmos coin type is 118\n - CoinType_FILECOIN: Filecoin coin type is 461\n - CoinType_HNS: Handshake coin type is 5353\n - CoinType_SOLANA: Solana coin type is 501\n - CoinType_XRP: Ripple coin type is 144",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CoinType_BITCOIN",
              "CoinType_TESTNET",
              "CoinType_LITECOIN",
              "CoinType_DOGE",
              "CoinType_ETHEREUM",
              "CoinType_SONR",
              "CoinType_COSMOS",
              "CoinType_FILECOIN",
              "CoinType_HNS",
              "CoinType_SOLANA",
              "CoinType_XRP"
            ],
            "default": "CoinType_BITCOIN"
          },
          {
            "name": "network",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["WalletService"]
      }
    },
    "/highway/wallet/accounts/get": {
      "post": {
        "summary": "GetAccount retrieves an account by its address.",
        "operationId": "GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "jwt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["WalletService"]
      }
    },
    "/highway/wallet/accounts/list": {
      "post": {
        "summary": "ListAccounts lists all accounts.",
        "operationId": "ListAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "jwt",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["WalletService"]
      }
    },
    "/highway/wallet/accounts/sign": {
      "post": {
        "summary": "SignMessage signs a message with the private key of an account.",
        "operationId": "SignMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SignMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "jwt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": ["WalletService"]
      }
    },
    "/highway/wallet/accounts/verify": {
      "post": {
        "summary": "VerifySignature verifies a signature with the public key of an account.",
        "operationId": "VerifySignature",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerifySignatureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "jwt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "signature",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": ["WalletService"]
      }
    },
    "/highway/wallet/export": {
      "post": {
        "summary": "ExportWallet exports a wallet.",
        "operationId": "ExportWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExportWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "jwt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["WalletService"]
      }
    }
  },
  "definitions": {
    "cryptoCoinType": {
      "type": "string",
      "enum": [
        "CoinType_BITCOIN",
        "CoinType_TESTNET",
        "CoinType_LITECOIN",
        "CoinType_DOGE",
        "CoinType_ETHEREUM",
        "CoinType_SONR",
        "CoinType_COSMOS",
        "CoinType_FILECOIN",
        "CoinType_HNS",
        "CoinType_SOLANA",
        "CoinType_XRP"
      ],
      "default": "CoinType_BITCOIN",
      "description": "CoinType is the BIP-0044 coin type for each supported coin.\n\n - CoinType_BITCOIN: Bitcoins coin type is 0\n - CoinType_TESTNET: Testnet coin type is 1\n - CoinType_LITECOIN: Litecoin coin type is 2\n - CoinType_DOGE: Dogecoin coin type is 3\n - CoinType_ETHEREUM: Ethereum coin type is 60\n - CoinType_SONR: Sonr coin type is 703\n - CoinType_COSMOS: Cosmos coin type is 118\n - CoinType_FILECOIN: Filecoin coin type is 461\n - CoinType_HNS: Handshake coin type is 5353\n - CoinType_SOLANA: Solana coin type is 501\n - CoinType_XRP: Ripple coin type is 144"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateAccountResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "coinType": {
          "$ref": "#/definitions/cryptoCoinType"
        },
        "owner": {
          "type": "string"
        }
      },
      "description": "CreateAccountResponse is the response message for creating an account."
    },
    "v1ExportWalletResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "encryptedWalletBuffer": {
          "type": "string"
        }
      },
      "description": "ExportWalletResponse is the response message for exporting a wallet."
    },
    "v1GetAccountResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "coinType": {
          "$ref": "#/definitions/cryptoCoinType"
        },
        "owner": {
          "type": "string"
        }
      },
      "description": "GetAccountResponse is the response message for getting an account."
    },
    "v1ListAccountsResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ListAccountsResponse is the response message for listing accounts."
    },
    "v1SignMessageResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "signature": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "SignMessageResponse is the response message for signing a message."
    },
    "v1VerifySignatureResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "messageVerified": {
          "type": "boolean"
        }
      },
      "description": "VerifySignatureResponse is the response message for verifying a signature."
    }
  }
}
