syntax = "proto3";

// Package Motor is used for defining a Motor node and its properties.
package sonrhq.motor.bind.v1;
import "common/peer.proto";
option go_package = "github.com/sonr-hq/sonr/third_party/types/motor/bind/v1";

// -----------------------------------------------------------------------------
// Motor Node API
// -----------------------------------------------------------------------------
enum NetworkMode {
  NetworkMode_LOCAL = 0;
  NetworkMode_ALPHA = 1;
  NetworkMode_BETA = 2;
  NetworkMode_TEST = 3;
}

// (Client) InitializeRequest Message to Establish Sonr Host/API/Room
message InitializeRequest {
  // Identifier of this Device
  string device_id = 1;

  // Device Home Directory
  string home_dir = 2;

  // Device Library Support Directory
  string support_dir = 3;

  // Device Temporary Storage Directory
  string temp_dir = 4;

  // Logging level for the session, can be configured after setting
  // (info|debug|warn|error|fatal)
  string log_level = 5;

  // Client Mode
  NetworkMode network = 6; // Default: ENDPOINT_BETA
}

// ConnectRequest initializes the libp2p host and connects to the Sonr network.
message ConnectRequest {
  // Peer ID of the node to connect to
  string peer_id = 1;

  // Multiaddress of the node to connect to
  string multiaddr = 2;

  // Peer is the peer to connect to
  sonrhq.common.Peer peer = 3;
}

// CreateAccountWithKeyRequest allows the DSC to be specified manually when creating a request.
// Necessary for android (for now)
message RegisterRequest {
  string password = 1;
  bytes aes_dsc_key = 2;
  bytes aes_psk_key = 3;
  map<string, string> metadata = 4;
}
