// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package login

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func RecoveryView() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"w-full h-screen bg-stone-50 dark:bg-stone-950 flex flex-col overflow-clip\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func GetCredential(rpName, rpId, challenge string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_GetCredential_2344`,
		Function: `function __templ_GetCredential_2344(rpName, rpId, challenge){const publicKeyCredentialRequestOptions = {
		challenge: Uint8Array.from(challenge, c => c.charCodeAt(0)),
		allowCredentials: [{
			id: Uint8Array.from(
				credentialId, c => c.charCodeAt(0)),
			type: 'public-key',
			transports: ['usb', 'ble', 'nfc'],
		}],
		timeout: 60000,
	}

	const assertion = navigator.credentials.get({
		publicKey: publicKeyCredentialRequestOptions
	}).then((credential) => {
		console.log(credential);
	});
}`,
		Call:       templ.SafeScript(`__templ_GetCredential_2344`, rpName, rpId, challenge),
		CallInline: templ.SafeScriptInline(`__templ_GetCredential_2344`, rpName, rpId, challenge),
	}
}
